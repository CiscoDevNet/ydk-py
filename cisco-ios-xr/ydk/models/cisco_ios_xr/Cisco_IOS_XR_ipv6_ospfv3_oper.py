""" Cisco_IOS_XR_ipv6_ospfv3_oper 

This module contains a collection of YANG definitions
for Cisco IOS\-XR ipv6\-ospfv3 package operational data.

This module contains definitions
for the following management objects\:
  ospfv3\: OSPFv3 operational information 

Copyright (c) 2013\-2015 by Cisco Systems, Inc.
All rights reserved.

"""


import re
import collections

from enum import Enum

from ydk.types import Empty, YList, YLeafList, DELETE, Decimal64, FixedBitsDict

from ydk.errors import YPYError, YPYModelError



class ImStateEnumEnum(Enum):
    """
    ImStateEnumEnum

    Im state enum

    .. data:: IM_STATE_NOT_READY = 0

    	im state not ready

    .. data:: IM_STATE_ADMIN_DOWN = 1

    	im state admin down

    .. data:: IM_STATE_DOWN = 2

    	im state down

    .. data:: IM_STATE_UP = 3

    	im state up

    .. data:: IM_STATE_SHUTDOWN = 4

    	im state shutdown

    .. data:: IM_STATE_ERR_DISABLE = 5

    	im state err disable

    .. data:: IM_STATE_DOWN_IMMEDIATE = 6

    	im state down immediate

    .. data:: IM_STATE_DOWN_IMMEDIATE_ADMIN = 7

    	im state down immediate admin

    .. data:: IM_STATE_DOWN_GRACEFUL = 8

    	im state down graceful

    .. data:: IM_STATE_BEGIN_SHUTDOWN = 9

    	im state begin shutdown

    .. data:: IM_STATE_END_SHUTDOWN = 10

    	im state end shutdown

    .. data:: IM_STATE_BEGIN_ERROR_DISABLE = 11

    	im state begin error disable

    .. data:: IM_STATE_END_ERROR_DISABLE = 12

    	im state end error disable

    .. data:: IM_STATE_BEGIN_DOWN_GRACEFUL = 13

    	im state begin down graceful

    .. data:: IM_STATE_RESET = 14

    	im state reset

    .. data:: IM_STATE_OPERATIONAL = 15

    	im state operational

    .. data:: IM_STATE_NOT_OPERATIONAL = 16

    	im state not operational

    .. data:: IM_STATE_UNKNOWN = 17

    	im state unknown

    .. data:: IM_STATE_LAST = 18

    	im state last

    """

    IM_STATE_NOT_READY = 0

    IM_STATE_ADMIN_DOWN = 1

    IM_STATE_DOWN = 2

    IM_STATE_UP = 3

    IM_STATE_SHUTDOWN = 4

    IM_STATE_ERR_DISABLE = 5

    IM_STATE_DOWN_IMMEDIATE = 6

    IM_STATE_DOWN_IMMEDIATE_ADMIN = 7

    IM_STATE_DOWN_GRACEFUL = 8

    IM_STATE_BEGIN_SHUTDOWN = 9

    IM_STATE_END_SHUTDOWN = 10

    IM_STATE_BEGIN_ERROR_DISABLE = 11

    IM_STATE_END_ERROR_DISABLE = 12

    IM_STATE_BEGIN_DOWN_GRACEFUL = 13

    IM_STATE_RESET = 14

    IM_STATE_OPERATIONAL = 15

    IM_STATE_NOT_OPERATIONAL = 16

    IM_STATE_UNKNOWN = 17

    IM_STATE_LAST = 18


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['ImStateEnumEnum']


class IpfrrTbrkrEnum(Enum):
    """
    IpfrrTbrkrEnum

    FRR Tiebreakers

    .. data:: DOWNSTREAM = 0

    	Downsteram

    .. data:: LINE_CARD_DISJOINT = 1

    	LC Disjoint

    .. data:: BACKUP_METRIC = 2

    	Backup metric

    .. data:: NODE_PROTECT = 3

    	Node protection

    .. data:: PRIMARY_PATH = 4

    	Primary path

    .. data:: SECONDARY_PATH = 5

    	Secondary path

    .. data:: SRLG_DISJOINT = 6

    	SRLG disjoint

    .. data:: TUNNEL = 7

    	Tunnel

    """

    DOWNSTREAM = 0

    LINE_CARD_DISJOINT = 1

    BACKUP_METRIC = 2

    NODE_PROTECT = 3

    PRIMARY_PATH = 4

    SECONDARY_PATH = 5

    SRLG_DISJOINT = 6

    TUNNEL = 7


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['IpfrrTbrkrEnum']


class OspfLsaSyncStateEnum(Enum):
    """
    OspfLsaSyncStateEnum

    LSA synchronization states

    .. data:: NONE = 0

    	State not set

    .. data:: OUT_OF_SYNC = 1

    	LSA out of sync with active

    .. data:: IN_SYNC = 2

    	LSA in sync with active

    .. data:: NSR_ACK_PENDING = 3

    	NSR ack pending for LSA sync

    """

    NONE = 0

    OUT_OF_SYNC = 1

    IN_SYNC = 2

    NSR_ACK_PENDING = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['OspfLsaSyncStateEnum']


class Ospfv3AreaRangeStatusEnum(Enum):
    """
    Ospfv3AreaRangeStatusEnum

    Ospfv3 area range status

    .. data:: ADVERTISE = 1

    	Advertise this range

    .. data:: DO_NOT_ADVERTISE = 2

    	Do not advertise this range

    """

    ADVERTISE = 1

    DO_NOT_ADVERTISE = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3AreaRangeStatusEnum']


class Ospfv3BorderRouteEnum(Enum):
    """
    Ospfv3BorderRouteEnum

    OSPFv3 border route destination types

    .. data:: ABR = 1

    	Area border router

    .. data:: ASBR = 2

    	Area system boundary router

    .. data:: ABR_ASBR = 3

    	Area border router and area system boundary

    	router

    """

    ABR = 1

    ASBR = 2

    ABR_ASBR = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3BorderRouteEnum']


class Ospfv3DefaultMetricEnum(Enum):
    """
    Ospfv3DefaultMetricEnum

    OSPFv3 default metric types 

    .. data:: TYPE_NONE = 0

    	OSPFv3 default metric type None 

    .. data:: TYPE1 = 1

    	OSPFv3 default metric type 1 

    .. data:: TYPE2 = 2

    	OSPFv3 default metric type 2 

    """

    TYPE_NONE = 0

    TYPE1 = 1

    TYPE2 = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3DefaultMetricEnum']


class Ospfv3GracefulRestartReasonEnum(Enum):
    """
    Ospfv3GracefulRestartReasonEnum

    Reason for router restart

    .. data:: GRACE_REASON_UNKNOWN = 0

    	Grace reason unknown

    .. data:: GRACE_REASON_SOFTWARE_RESTART = 1

    	Grace reason software restart

    .. data:: GRACE_REASON_SOFTWARE_UPGRADE = 2

    	Software reload/upgrade, RFC 3623

    .. data:: GRACE_REASON_SWITCHOVER = 3

    	Switch to redundant control processor

    """

    GRACE_REASON_UNKNOWN = 0

    GRACE_REASON_SOFTWARE_RESTART = 1

    GRACE_REASON_SOFTWARE_UPGRADE = 2

    GRACE_REASON_SWITCHOVER = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3GracefulRestartReasonEnum']


class Ospfv3GracefulShutdownStateEnum(Enum):
    """
    Ospfv3GracefulShutdownStateEnum

    Graceful Shutdown state

    .. data:: INIT = 0

    	Init

    .. data:: NORMAL = 1

    	Normal

    .. data:: FLUSHING = 2

    	Flushing

    .. data:: EMPTY_HELLOS = 3

    	Empty Hellos

    .. data:: QUIET = 4

    	Quiet

    """

    INIT = 0

    NORMAL = 1

    FLUSHING = 2

    EMPTY_HELLOS = 3

    QUIET = 4


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3GracefulShutdownStateEnum']


class Ospfv3InterfaceEnum(Enum):
    """
    Ospfv3InterfaceEnum

    OSPFv3 neighbor interface types

    .. data:: NONE = 0

    	None

    .. data:: BROADCAST = 1

    	Broadcast

    .. data:: NON_BROADCAST = 2

    	Non broadcast

    .. data:: POINT_TO_POINT = 3

    	Point To Point

    .. data:: POINT_TO_MULTIPOINT = 4

    	Point To Multipoint

    .. data:: POINT_TO_MULTIPOINT_NON_BROADCAST = 5

    	Point-To-Multipoint Non broadcast

    .. data:: VIRTUAL_LINK = 6

    	Virtual link

    .. data:: LOOPBACK_INTERFACE = 7

    	Loopback

    .. data:: MPLS_TRAFFIC_ENGINEERING = 8

    	MPLS traffic engineering

    .. data:: SHAM_LINK = 9

    	Sham link

    """

    NONE = 0

    BROADCAST = 1

    NON_BROADCAST = 2

    POINT_TO_POINT = 3

    POINT_TO_MULTIPOINT = 4

    POINT_TO_MULTIPOINT_NON_BROADCAST = 5

    VIRTUAL_LINK = 6

    LOOPBACK_INTERFACE = 7

    MPLS_TRAFFIC_ENGINEERING = 8

    SHAM_LINK = 9


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3InterfaceEnum']


class Ospfv3InterfaceStateEnum(Enum):
    """
    Ospfv3InterfaceStateEnum

    OSPFv3 interface states

    .. data:: DOWN = 0

    	Down

    .. data:: LOOPBACK = 1

    	Loopback

    .. data:: WAITING = 2

    	Waiting

    .. data:: POINT_TO_MULTIPOINT = 3

    	Point To Multipoint

    .. data:: POINT_TO_POINT = 4

    	Point To Point

    .. data:: DESIGNATED_ROUTER = 5

    	Designated router

    .. data:: BACKUP_DESIGNATED_ROUTER = 6

    	Backup designated router

    .. data:: OTHER_DESIGNATED_ROUTER = 7

    	Other designated router

    """

    DOWN = 0

    LOOPBACK = 1

    WAITING = 2

    POINT_TO_MULTIPOINT = 3

    POINT_TO_POINT = 4

    DESIGNATED_ROUTER = 5

    BACKUP_DESIGNATED_ROUTER = 6

    OTHER_DESIGNATED_ROUTER = 7


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3InterfaceStateEnum']


class Ospfv3LinkEnum(Enum):
    """
    Ospfv3LinkEnum

    OSPFV3 Link type

    .. data:: LINK_ROUTER = 1

    	Router link

    .. data:: LINK_TRANS_NET = 2

    	Transit network link

    .. data:: LINK_VIRTUAL_LINK = 4

    	Virutal link

    """

    LINK_ROUTER = 1

    LINK_TRANS_NET = 2

    LINK_VIRTUAL_LINK = 4


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3LinkEnum']


class Ospfv3Lsa1Enum(Enum):
    """
    Ospfv3Lsa1Enum

    OSPFv3 LSA types

    .. data:: LINK = 8

    	Link LSA

    .. data:: GRACE = 11

    	Grace LSA

    .. data:: ROUTER = 8193

    	Router LSA

    .. data:: NETWORK = 8194

    	Network LSA

    .. data:: INTER_AREA_PREFIX = 8195

    	Inter area prefix LSA

    .. data:: INTER_AREA_ROUTER = 8196

    	Inter area router LSA

    .. data:: MOSPF = 8198

    	MOSPF LSA

    .. data:: TYPE7_EXTERNAL = 8199

    	Type-7 External LSA

    .. data:: LSA_PREFIX = 8201

    	Prefix LSA

    .. data:: AS_EXTERNAL = 16389

    	AS external LSA

    .. data:: UNKNOWN_LINK = 32768

    	Unknown link LSA

    .. data:: UNKNOWN_AREA = 40960

    	Unknown area LSA

    .. data:: UNKNOWN_AS = 49152

    	Unknown AS LSA

    .. data:: UNKNOWN_TYPE = 57344

    	Unknown type LSA

    """

    LINK = 8

    GRACE = 11

    ROUTER = 8193

    NETWORK = 8194

    INTER_AREA_PREFIX = 8195

    INTER_AREA_ROUTER = 8196

    MOSPF = 8198

    TYPE7_EXTERNAL = 8199

    LSA_PREFIX = 8201

    AS_EXTERNAL = 16389

    UNKNOWN_LINK = 32768

    UNKNOWN_AREA = 40960

    UNKNOWN_AS = 49152

    UNKNOWN_TYPE = 57344


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3Lsa1Enum']


class Ospfv3LsaEnum(Enum):
    """
    Ospfv3LsaEnum

    Ospfv3 lsa

    .. data:: LINK_LSA = 8

    	Link LSA

    .. data:: GRACE_LSA = 11

    	Grace LSA

    .. data:: ROUTER = 8193

    	Router LSA

    .. data:: NETWORK = 8194

    	Network LSA

    .. data:: INTER_AREA_PREFIX = 8195

    	Inter-Area Prefix LSA

    .. data:: INTER_AREA_ROUTER = 8196

    	Inter-Area Router LSA

    .. data:: NSSA_EXTERNAL = 8199

    	NSSA External LSA

    .. data:: INTRA_AREA_PREFIX = 8201

    	Intra-Area Prefix LSA

    .. data:: EXTERNAL = 16389

    	External LSA

    .. data:: OPAQE_LINK = 32768

    	Opaque LSALink Scope

    .. data:: OPAQUE_AREA = 40960

    	Opaque LSA Area Scope

    .. data:: OPAQUE_AS = 49152

    	Opaque LSA AS Scope

    """

    LINK_LSA = 8

    GRACE_LSA = 11

    ROUTER = 8193

    NETWORK = 8194

    INTER_AREA_PREFIX = 8195

    INTER_AREA_ROUTER = 8196

    NSSA_EXTERNAL = 8199

    INTRA_AREA_PREFIX = 8201

    EXTERNAL = 16389

    OPAQE_LINK = 32768

    OPAQUE_AREA = 40960

    OPAQUE_AS = 49152


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3LsaEnum']


class Ospfv3NeighborStateEnum(Enum):
    """
    Ospfv3NeighborStateEnum

    OSPFv3 neighbor states

    .. data:: NEIGBHOR_DOWN = 0

    	Down

    .. data:: ATTEMPT = 1

    	Attempting

    .. data:: INIT = 2

    	Initializing

    .. data:: TWO_WAY = 3

    	2 Way

    .. data:: EXSTART = 4

    	Exstart

    .. data:: EXCHANGE = 5

    	Exchange

    .. data:: LOADING = 6

    	Loading

    .. data:: FULL = 7

    	Full

    .. data:: SC_VIRTUAL = 8

    	SCVirtual

    """

    NEIGBHOR_DOWN = 0

    ATTEMPT = 1

    INIT = 2

    TWO_WAY = 3

    EXSTART = 4

    EXCHANGE = 5

    LOADING = 6

    FULL = 7

    SC_VIRTUAL = 8


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3NeighborStateEnum']


class Ospfv3PrefixLsaRefEnum(Enum):
    """
    Ospfv3PrefixLsaRefEnum

    Ospfv3 prefix lsa ref

    .. data:: ROUTER = 8193

    	Router LSA

    .. data:: NETWORK = 8194

    	Network LSA

    """

    ROUTER = 8193

    NETWORK = 8194


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3PrefixLsaRefEnum']


class PrefixPriorityEnum(Enum):
    """
    PrefixPriorityEnum

    Prefix priority

    .. data:: CRITICAL = 0

    	Critical priority

    .. data:: HIGH = 1

    	High priority

    .. data:: MEDIUM = 2

    	Medium priority

    .. data:: LOW = 3

    	Low priority

    """

    CRITICAL = 0

    HIGH = 1

    MEDIUM = 2

    LOW = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['PrefixPriorityEnum']


class StubRouterAbrOffReasonEnum(Enum):
    """
    StubRouterAbrOffReasonEnum

    Reason to exiting stub router mode

    .. data:: INIT_DELAY = 2

    	Initial delay when stub router mode is

    	activated

    .. data:: NO_NEIGHBOR = 3

    	No neighbor present

    .. data:: NO_FULL_NEIGHBOR = 4

    	No neighbor in FULL state present

    .. data:: NEW_NEIGHBOR = 5

    	A new neighbor discovered less than 60 seconds

    	ago

    .. data:: FULL_NEIGHBOR = 6

    	A neighbor transitioned to FULL state less than

    	60 seconds ago

    """

    INIT_DELAY = 2

    NO_NEIGHBOR = 3

    NO_FULL_NEIGHBOR = 4

    NEW_NEIGHBOR = 5

    FULL_NEIGHBOR = 6


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['StubRouterAbrOffReasonEnum']


class StubRouterExitReasonEnum(Enum):
    """
    StubRouterExitReasonEnum

    Reason to exiting stub router mode

    .. data:: NONE = 0

    	No reason

    .. data:: BGP = 1

    	BGP has converged

    .. data:: TIMER = 2

    	Stub Router timer has expired

    .. data:: CONFIGURATION = 3

    	Configuration has changed

    .. data:: CLEARED = 4

    	Process has been cleared

    .. data:: OVERRIDE = 5

    	Preempted by always

    """

    NONE = 0

    BGP = 1

    TIMER = 2

    CONFIGURATION = 3

    CLEARED = 4

    OVERRIDE = 5


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['StubRouterExitReasonEnum']


class StubRouterModeEnum(Enum):
    """
    StubRouterModeEnum

    Stub Router mode

    .. data:: RBIT = 0

    	Stub Router mode r-bit

    .. data:: V6BIT = 1

    	Stub Router mode v6-bit

    .. data:: MAX_METRIC = 2

    	Stub Router mode max-metric

    .. data:: NONE = 3

    	Stub Router not configured

    """

    RBIT = 0

    V6BIT = 1

    MAX_METRIC = 2

    NONE = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['StubRouterModeEnum']


class StubRouterTriggerEnum(Enum):
    """
    StubRouterTriggerEnum

    Trigger for entering stub router mode

    .. data:: ON_PROC_MIGRATION = 0

    	Process migration

    .. data:: ON_PROC_RESTART = 1

    	Process restart

    .. data:: ON_SWITCHOVER = 2

    	RP switchover

    .. data:: ON_STARTUP = 3

    	Router startup

    .. data:: ALWAYS = 4

    	Always on

    .. data:: NONE = 5

    	No trigger

    """

    ON_PROC_MIGRATION = 0

    ON_PROC_RESTART = 1

    ON_SWITCHOVER = 2

    ON_STARTUP = 3

    ALWAYS = 4

    NONE = 5


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['StubRouterTriggerEnum']



class Ospfv3(object):
    """
    OSPFv3 operational information 
    
    .. attribute:: processes
    
    	OSPFv3 Process Table
    	**type**\:  :py:class:`Processes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes>`
    
    

    """

    _prefix = 'ipv6-ospfv3-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.processes = Ospfv3.Processes()
        self.processes.parent = self


    class Processes(object):
        """
        OSPFv3 Process Table
        
        .. attribute:: process
        
        	OSPFv3 Operational data for a particular OSPFv3 process 
        	**type**\: list of  :py:class:`Process <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process>`
        
        

        """

        _prefix = 'ipv6-ospfv3-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.process = YList()
            self.process.parent = self
            self.process.name = 'process'


        class Process(object):
            """
            OSPFv3 Operational data for a particular OSPFv3
            process 
            
            .. attribute:: process_name  <key>
            
            	Particular OSPFv3 process
            	**type**\:  str
            
            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
            
            .. attribute:: default_vrf
            
            	Operational data for the default VRF (instance) in the OSPFv3 process
            	**type**\:  :py:class:`DefaultVrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf>`
            
            .. attribute:: vrfs
            
            	Table for each VRF
            	**type**\:  :py:class:`Vrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs>`
            
            

            """

            _prefix = 'ipv6-ospfv3-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.process_name = None
                self.default_vrf = Ospfv3.Processes.Process.DefaultVrf()
                self.default_vrf.parent = self
                self.vrfs = Ospfv3.Processes.Process.Vrfs()
                self.vrfs.parent = self


            class Vrfs(object):
                """
                Table for each VRF
                
                .. attribute:: vrf
                
                	Operational data for a particular VRF (instance) in the OSPFv3 process
                	**type**\: list of  :py:class:`Vrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf>`
                
                

                """

                _prefix = 'ipv6-ospfv3-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.vrf = YList()
                    self.vrf.parent = self
                    self.vrf.name = 'vrf'


                class Vrf(object):
                    """
                    Operational data for a particular VRF
                    (instance) in the OSPFv3 process
                    
                    .. attribute:: vrf_name  <key>
                    
                    	VRF Name
                    	**type**\:  str
                    
                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                    
                    .. attribute:: area_informations
                    
                    	OSPFv3 area information table
                    	**type**\:  :py:class:`AreaInformations <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.AreaInformations>`
                    
                    .. attribute:: areas
                    
                    	OSPFv3 area table
                    	**type**\:  :py:class:`Areas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas>`
                    
                    .. attribute:: bad_checksums
                    
                    	Bad Checksum Packets information table
                    	**type**\:  :py:class:`BadChecksums <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.BadChecksums>`
                    
                    .. attribute:: border_routers
                    
                    	OSPFv3 border router information table
                    	**type**\:  :py:class:`BorderRouters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.BorderRouters>`
                    
                    .. attribute:: connected_routes
                    
                    	OSPFv3 connected route information table
                    	**type**\:  :py:class:`ConnectedRoutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes>`
                    
                    .. attribute:: database_areas
                    
                    	Database area table
                    	**type**\:  :py:class:`DatabaseAreas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas>`
                    
                    .. attribute:: database_external_lsas
                    
                    	Database external LSA information
                    	**type**\:  :py:class:`DatabaseExternalLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas>`
                    
                    .. attribute:: database_int_external_lsas
                    
                    	Internal database external LSA information
                    	**type**\:  :py:class:`DatabaseIntExternalLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas>`
                    
                    .. attribute:: database_int_unknown_as_lsas
                    
                    	Internal Unknown Area LSA information
                    	**type**\:  :py:class:`DatabaseIntUnknownAsLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas>`
                    
                    .. attribute:: database_summary_areas
                    
                    	Database summary table
                    	**type**\:  :py:class:`DatabaseSummaryAreas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas>`
                    
                    .. attribute:: database_summary_process_table
                    
                    	Database summary table at process level
                    	**type**\:  :py:class:`DatabaseSummaryProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable>`
                    
                    .. attribute:: database_unknown_as_lsas
                    
                    	Database AS Unknown Information
                    	**type**\:  :py:class:`DatabaseUnknownAsLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas>`
                    
                    .. attribute:: external_routes
                    
                    	OSPFv3 external route information table
                    	**type**\:  :py:class:`ExternalRoutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes>`
                    
                    .. attribute:: fast_reroutes
                    
                    	OSPFv3 fast reroute topology information table
                    	**type**\:  :py:class:`FastReroutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.FastReroutes>`
                    
                    .. attribute:: flood_list_process_table
                    
                    	OSPFv3 flood list information table for all areas
                    	**type**\:  :py:class:`FloodListProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable>`
                    
                    .. attribute:: interface_brief_process_table
                    
                    	OSPFv3 interface brief information table for all areas
                    	**type**\:  :py:class:`InterfaceBriefProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceBriefProcessTable>`
                    
                    .. attribute:: interface_process_table
                    
                    	OSPFv3 interface information table for all areas
                    	**type**\:  :py:class:`InterfaceProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable>`
                    
                    .. attribute:: internal_routes
                    
                    	OSPFv3 internal route information table
                    	**type**\:  :py:class:`InternalRoutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes>`
                    
                    .. attribute:: neighbor_detail_process_table
                    
                    	OSPFv3 neighbor information table for all areas
                    	**type**\:  :py:class:`NeighborDetailProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable>`
                    
                    .. attribute:: neighbor_process_table
                    
                    	OSPFv3 neighbor information table for all areas
                    	**type**\:  :py:class:`NeighborProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable>`
                    
                    .. attribute:: protocol_areas
                    
                    	Protocol area table 
                    	**type**\:  :py:class:`ProtocolAreas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ProtocolAreas>`
                    
                    .. attribute:: redistributions
                    
                    	Redistribution information table
                    	**type**\:  :py:class:`Redistributions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Redistributions>`
                    
                    .. attribute:: request_list_process_table
                    
                    	OSPFv3 request list information for all areas
                    	**type**\:  :py:class:`RequestListProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RequestListProcessTable>`
                    
                    .. attribute:: retransmission_list_process_table
                    
                    	OSPFv3 retransmission list information table for all areas
                    	**type**\:  :py:class:`RetransmissionListProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable>`
                    
                    .. attribute:: route_summary
                    
                    	Summarize OSPFv3 local RIB tables
                    	**type**\:  :py:class:`RouteSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RouteSummary>`
                    
                    .. attribute:: sham_link_table
                    
                    	Sham link information
                    	**type**\:  :py:class:`ShamLinkTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable>`
                    
                    .. attribute:: summary
                    
                    	OSPFv3 summary
                    	**type**\:  :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary>`
                    
                    .. attribute:: summary_prefixes
                    
                    	Summary prefix information table
                    	**type**\:  :py:class:`SummaryPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.SummaryPrefixes>`
                    
                    .. attribute:: virtual_link
                    
                    	Virtual link information
                    	**type**\:  :py:class:`VirtualLink <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.vrf_name = None
                        self.area_informations = Ospfv3.Processes.Process.Vrfs.Vrf.AreaInformations()
                        self.area_informations.parent = self
                        self.areas = Ospfv3.Processes.Process.Vrfs.Vrf.Areas()
                        self.areas.parent = self
                        self.bad_checksums = Ospfv3.Processes.Process.Vrfs.Vrf.BadChecksums()
                        self.bad_checksums.parent = self
                        self.border_routers = Ospfv3.Processes.Process.Vrfs.Vrf.BorderRouters()
                        self.border_routers.parent = self
                        self.connected_routes = Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes()
                        self.connected_routes.parent = self
                        self.database_areas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas()
                        self.database_areas.parent = self
                        self.database_external_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas()
                        self.database_external_lsas.parent = self
                        self.database_int_external_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas()
                        self.database_int_external_lsas.parent = self
                        self.database_int_unknown_as_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas()
                        self.database_int_unknown_as_lsas.parent = self
                        self.database_summary_areas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas()
                        self.database_summary_areas.parent = self
                        self.database_summary_process_table = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable()
                        self.database_summary_process_table.parent = self
                        self.database_unknown_as_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas()
                        self.database_unknown_as_lsas.parent = self
                        self.external_routes = Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes()
                        self.external_routes.parent = self
                        self.fast_reroutes = Ospfv3.Processes.Process.Vrfs.Vrf.FastReroutes()
                        self.fast_reroutes.parent = self
                        self.flood_list_process_table = Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable()
                        self.flood_list_process_table.parent = self
                        self.interface_brief_process_table = Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceBriefProcessTable()
                        self.interface_brief_process_table.parent = self
                        self.interface_process_table = Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable()
                        self.interface_process_table.parent = self
                        self.internal_routes = Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes()
                        self.internal_routes.parent = self
                        self.neighbor_detail_process_table = Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable()
                        self.neighbor_detail_process_table.parent = self
                        self.neighbor_process_table = Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable()
                        self.neighbor_process_table.parent = self
                        self.protocol_areas = Ospfv3.Processes.Process.Vrfs.Vrf.ProtocolAreas()
                        self.protocol_areas.parent = self
                        self.redistributions = Ospfv3.Processes.Process.Vrfs.Vrf.Redistributions()
                        self.redistributions.parent = self
                        self.request_list_process_table = Ospfv3.Processes.Process.Vrfs.Vrf.RequestListProcessTable()
                        self.request_list_process_table.parent = self
                        self.retransmission_list_process_table = Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable()
                        self.retransmission_list_process_table.parent = self
                        self.route_summary = Ospfv3.Processes.Process.Vrfs.Vrf.RouteSummary()
                        self.route_summary.parent = self
                        self.sham_link_table = Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable()
                        self.sham_link_table.parent = self
                        self.summary = Ospfv3.Processes.Process.Vrfs.Vrf.Summary()
                        self.summary.parent = self
                        self.summary_prefixes = Ospfv3.Processes.Process.Vrfs.Vrf.SummaryPrefixes()
                        self.summary_prefixes.parent = self
                        self.virtual_link = Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink()
                        self.virtual_link.parent = self


                    class SummaryPrefixes(object):
                        """
                        Summary prefix information table
                        
                        .. attribute:: summary_prefix
                        
                        	Summary prefix information
                        	**type**\: list of  :py:class:`SummaryPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.SummaryPrefixes.SummaryPrefix>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.summary_prefix = YList()
                            self.summary_prefix.parent = self
                            self.summary_prefix.name = 'summary_prefix'


                        class SummaryPrefix(object):
                            """
                            Summary prefix information
                            
                            .. attribute:: prefix
                            
                            	Summary prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: prefix_metric
                            
                            	Prefix metric
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: prefix_metric_type
                            
                            	Prefix metric type
                            	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                            
                            .. attribute:: tag
                            
                            	Tag
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.prefix_metric = None
                                self.prefix_metric_type = None
                                self.tag = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:summary-prefix'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.prefix_metric is not None:
                                    return True

                                if self.prefix_metric_type is not None:
                                    return True

                                if self.tag is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.SummaryPrefixes.SummaryPrefix']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:summary-prefixes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.summary_prefix is not None:
                                for child_ref in self.summary_prefix:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.SummaryPrefixes']['meta_info']


                    class BorderRouters(object):
                        """
                        OSPFv3 border router information table
                        
                        .. attribute:: border_router
                        
                        	OSPFv3 border router information
                        	**type**\: list of  :py:class:`BorderRouter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.BorderRouters.BorderRouter>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.border_router = YList()
                            self.border_router.parent = self
                            self.border_router.name = 'border_router'


                        class BorderRouter(object):
                            """
                            OSPFv3 border router information
                            
                            .. attribute:: border_router_id  <key>
                            
                            	Router address
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: border_router_path
                            
                            	List of border router paths
                            	**type**\: list of  :py:class:`BorderRouterPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.BorderRouters.BorderRouter.BorderRouterPath>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.border_router_id = None
                                self.border_router_path = YList()
                                self.border_router_path.parent = self
                                self.border_router_path.name = 'border_router_path'


                            class BorderRouterPath(object):
                                """
                                List of border router paths
                                
                                .. attribute:: border_router_area_id
                                
                                	Area string in decimal or dotted\-decimal format 
                                	**type**\:  str
                                
                                	**range:** 0..16
                                
                                .. attribute:: border_router_next_hop
                                
                                	Next hop address 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: border_router_route_metric
                                
                                	Metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: border_router_type
                                
                                	Border router type 
                                	**type**\:  :py:class:`Ospfv3BorderRouteEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3BorderRouteEnum>`
                                
                                .. attribute:: interface_name
                                
                                	Next hop interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_intra_area_router
                                
                                	If true, intra\-area router else inter\-area router
                                	**type**\:  bool
                                
                                .. attribute:: spf_version
                                
                                	SPF version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.border_router_area_id = None
                                    self.border_router_next_hop = None
                                    self.border_router_route_metric = None
                                    self.border_router_type = None
                                    self.interface_name = None
                                    self.is_intra_area_router = None
                                    self.spf_version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:border-router-path'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.border_router_area_id is not None:
                                        return True

                                    if self.border_router_next_hop is not None:
                                        return True

                                    if self.border_router_route_metric is not None:
                                        return True

                                    if self.border_router_type is not None:
                                        return True

                                    if self.interface_name is not None:
                                        return True

                                    if self.is_intra_area_router is not None:
                                        return True

                                    if self.spf_version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.BorderRouters.BorderRouter.BorderRouterPath']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.border_router_id is None:
                                    raise YPYModelError('Key property border_router_id is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:border-router[Cisco-IOS-XR-ipv6-ospfv3-oper:border-router-id = ' + str(self.border_router_id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.border_router_id is not None:
                                    return True

                                if self.border_router_path is not None:
                                    for child_ref in self.border_router_path:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.BorderRouters.BorderRouter']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:border-routers'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.border_router is not None:
                                for child_ref in self.border_router:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.BorderRouters']['meta_info']


                    class ShamLinkTable(object):
                        """
                        Sham link information
                        
                        .. attribute:: is_sham_link_authentication_enabled
                        
                        	If true, sham link authentication is enabled 
                        	**type**\:  bool
                        
                        .. attribute:: is_sham_link_encryption_enabled
                        
                        	If true, sham link encryption is enabled 
                        	**type**\:  bool
                        
                        .. attribute:: is_sham_link_ip_security_active
                        
                        	If true, Sham link IP security is active 
                        	**type**\:  bool
                        
                        .. attribute:: is_sham_link_ip_security_required
                        
                        	If true, sham link IP security is required 
                        	**type**\:  bool
                        
                        .. attribute:: sham_link_area
                        
                        	Area id
                        	**type**\:  str
                        
                        .. attribute:: sham_link_authentication_transmit
                        
                        	Sham link authentication transmit 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_cost
                        
                        	Cost of the sham link
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: sham_link_dc_bitless_lsa
                        
                        	Number of LSA's with demand circuit bit not set
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_dead_interval
                        
                        	Dead interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_demand_circuit
                        
                        	If true, the link runs as demand circuit
                        	**type**\:  bool
                        
                        .. attribute:: sham_link_dest_address
                        
                        	Sham\-link dest
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: sham_link_encrypted_authentication_transmitted
                        
                        	Sham link encrypted authentication transmitted 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_encryption_spi
                        
                        	Sham link encryption spi
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_encryption_transmitted
                        
                        	Sham link encryption transmitted 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_gr
                        
                        	If true, Gracefule restart in progress
                        	**type**\:  bool
                        
                        .. attribute:: sham_link_gr_enabled
                        
                        	If true,  enabled
                        	**type**\:  bool
                        
                        .. attribute:: sham_link_hello_interval
                        
                        	Hello interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_ifindex
                        
                        	Sham\-link ifindex
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_last_gr
                        
                        	Time in seconds since last GR
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_neighbor
                        
                        	Neighbor information
                        	**type**\:  :py:class:`ShamLinkNeighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable.ShamLinkNeighbor>`
                        
                        .. attribute:: sham_link_neighbor_id
                        
                        	Neighbor on other end of this sham link
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: sham_link_next_hello
                        
                        	Time until next hello (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_passive
                        
                        	If true, interface is passive
                        	**type**\:  bool
                        
                        .. attribute:: sham_link_retransmission_interval
                        
                        	Retransmission interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: sham_link_source_address
                        
                        	Sham\-link source
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: sham_link_state
                        
                        	OSPF interface state for the sham link
                        	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                        
                        .. attribute:: sham_link_transmission_delay
                        
                        	Transmission delay in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: sham_link_wait_interval
                        
                        	Wait interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_authentication_spi
                        
                        	Sham link authentication spi 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.is_sham_link_authentication_enabled = None
                            self.is_sham_link_encryption_enabled = None
                            self.is_sham_link_ip_security_active = None
                            self.is_sham_link_ip_security_required = None
                            self.sham_link_area = None
                            self.sham_link_authentication_transmit = None
                            self.sham_link_cost = None
                            self.sham_link_dc_bitless_lsa = None
                            self.sham_link_dead_interval = None
                            self.sham_link_demand_circuit = None
                            self.sham_link_dest_address = None
                            self.sham_link_encrypted_authentication_transmitted = None
                            self.sham_link_encryption_spi = None
                            self.sham_link_encryption_transmitted = None
                            self.sham_link_gr = None
                            self.sham_link_gr_enabled = None
                            self.sham_link_hello_interval = None
                            self.sham_link_ifindex = None
                            self.sham_link_last_gr = None
                            self.sham_link_neighbor = Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable.ShamLinkNeighbor()
                            self.sham_link_neighbor.parent = self
                            self.sham_link_neighbor_id = None
                            self.sham_link_next_hello = None
                            self.sham_link_passive = None
                            self.sham_link_retransmission_interval = None
                            self.sham_link_source_address = None
                            self.sham_link_state = None
                            self.sham_link_transmission_delay = None
                            self.sham_link_wait_interval = None
                            self.virtual_link_authentication_spi = None


                        class ShamLinkNeighbor(object):
                            """
                            Neighbor information
                            
                            .. attribute:: sham_link_retransmission
                            
                            	Neighbor retransmission info
                            	**type**\:  :py:class:`ShamLinkRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable.ShamLinkNeighbor.ShamLinkRetransmission>`
                            
                            .. attribute:: sham_link_state
                            
                            	Adjacency state
                            	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                            
                            .. attribute:: sham_link_suppress_hello
                            
                            	If true Hellos suppressed
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.sham_link_retransmission = Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable.ShamLinkNeighbor.ShamLinkRetransmission()
                                self.sham_link_retransmission.parent = self
                                self.sham_link_state = None
                                self.sham_link_suppress_hello = None


                            class ShamLinkRetransmission(object):
                                """
                                Neighbor retransmission info
                                
                                .. attribute:: area_first_flood
                                
                                	First flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_first_flood_index
                                
                                	Index of the first flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_flood_index
                                
                                	Area scope LSA's flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_next_flood
                                
                                	Next flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_next_flood_index
                                
                                	Index of next flood item for Area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_first_flood
                                
                                	First flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_first_flood_index
                                
                                	Index for first flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_flood_index
                                
                                	AS scope LSA's flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_next_flood
                                
                                	Next flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_next_flood_index
                                
                                	Index of next flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: database_descriptor_retransmissions
                                
                                	Number of database descriptor retransmissions during last exchange
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: last_retransmission_length
                                
                                	Number of LSAs sent in last retransmission
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: last_retransmission_time
                                
                                	Last retransmission scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_first_flood
                                
                                	Link first flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_first_flood_index
                                
                                	Link first flood information index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_flood_index
                                
                                	Link flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_next_flood
                                
                                	Link next flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_next_flood_index
                                
                                	Link next flood information index 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_retransmission_timer
                                
                                	Time until next LSA retransmission (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_retransmission_length
                                
                                	Maximum number of LSAs sent in a retransmission
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_retransmission_time
                                
                                	Maximum retransmission scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_retransmissions
                                
                                	Number of neighbor retransmissions 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: retransmissions
                                
                                	Number of retransmissions for this neighbor
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.area_first_flood = None
                                    self.area_first_flood_index = None
                                    self.area_flood_index = None
                                    self.area_next_flood = None
                                    self.area_next_flood_index = None
                                    self.as_first_flood = None
                                    self.as_first_flood_index = None
                                    self.as_flood_index = None
                                    self.as_next_flood = None
                                    self.as_next_flood_index = None
                                    self.database_descriptor_retransmissions = None
                                    self.last_retransmission_length = None
                                    self.last_retransmission_time = None
                                    self.link_first_flood = None
                                    self.link_first_flood_index = None
                                    self.link_flood_index = None
                                    self.link_next_flood = None
                                    self.link_next_flood_index = None
                                    self.lsa_retransmission_timer = None
                                    self.maximum_retransmission_length = None
                                    self.maximum_retransmission_time = None
                                    self.neighbor_retransmissions = None
                                    self.retransmissions = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:sham-link-retransmission'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.area_first_flood is not None:
                                        return True

                                    if self.area_first_flood_index is not None:
                                        return True

                                    if self.area_flood_index is not None:
                                        return True

                                    if self.area_next_flood is not None:
                                        return True

                                    if self.area_next_flood_index is not None:
                                        return True

                                    if self.as_first_flood is not None:
                                        return True

                                    if self.as_first_flood_index is not None:
                                        return True

                                    if self.as_flood_index is not None:
                                        return True

                                    if self.as_next_flood is not None:
                                        return True

                                    if self.as_next_flood_index is not None:
                                        return True

                                    if self.database_descriptor_retransmissions is not None:
                                        return True

                                    if self.last_retransmission_length is not None:
                                        return True

                                    if self.last_retransmission_time is not None:
                                        return True

                                    if self.link_first_flood is not None:
                                        return True

                                    if self.link_first_flood_index is not None:
                                        return True

                                    if self.link_flood_index is not None:
                                        return True

                                    if self.link_next_flood is not None:
                                        return True

                                    if self.link_next_flood_index is not None:
                                        return True

                                    if self.lsa_retransmission_timer is not None:
                                        return True

                                    if self.maximum_retransmission_length is not None:
                                        return True

                                    if self.maximum_retransmission_time is not None:
                                        return True

                                    if self.neighbor_retransmissions is not None:
                                        return True

                                    if self.retransmissions is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable.ShamLinkNeighbor.ShamLinkRetransmission']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:sham-link-neighbor'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.sham_link_retransmission is not None and self.sham_link_retransmission._has_data():
                                    return True

                                if self.sham_link_state is not None:
                                    return True

                                if self.sham_link_suppress_hello is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable.ShamLinkNeighbor']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:sham-link-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.is_sham_link_authentication_enabled is not None:
                                return True

                            if self.is_sham_link_encryption_enabled is not None:
                                return True

                            if self.is_sham_link_ip_security_active is not None:
                                return True

                            if self.is_sham_link_ip_security_required is not None:
                                return True

                            if self.sham_link_area is not None:
                                return True

                            if self.sham_link_authentication_transmit is not None:
                                return True

                            if self.sham_link_cost is not None:
                                return True

                            if self.sham_link_dc_bitless_lsa is not None:
                                return True

                            if self.sham_link_dead_interval is not None:
                                return True

                            if self.sham_link_demand_circuit is not None:
                                return True

                            if self.sham_link_dest_address is not None:
                                return True

                            if self.sham_link_encrypted_authentication_transmitted is not None:
                                return True

                            if self.sham_link_encryption_spi is not None:
                                return True

                            if self.sham_link_encryption_transmitted is not None:
                                return True

                            if self.sham_link_gr is not None:
                                return True

                            if self.sham_link_gr_enabled is not None:
                                return True

                            if self.sham_link_hello_interval is not None:
                                return True

                            if self.sham_link_ifindex is not None:
                                return True

                            if self.sham_link_last_gr is not None:
                                return True

                            if self.sham_link_neighbor is not None and self.sham_link_neighbor._has_data():
                                return True

                            if self.sham_link_neighbor_id is not None:
                                return True

                            if self.sham_link_next_hello is not None:
                                return True

                            if self.sham_link_passive is not None:
                                return True

                            if self.sham_link_retransmission_interval is not None:
                                return True

                            if self.sham_link_source_address is not None:
                                return True

                            if self.sham_link_state is not None:
                                return True

                            if self.sham_link_transmission_delay is not None:
                                return True

                            if self.sham_link_wait_interval is not None:
                                return True

                            if self.virtual_link_authentication_spi is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ShamLinkTable']['meta_info']


                    class DatabaseIntUnknownAsLsas(object):
                        """
                        Internal Unknown Area LSA information
                        
                        .. attribute:: database_int_unknown_as_lsa
                        
                        	Internal database Unknown LSA information
                        	**type**\: list of  :py:class:`DatabaseIntUnknownAsLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.database_int_unknown_as_lsa = YList()
                            self.database_int_unknown_as_lsa.parent = self
                            self.database_int_unknown_as_lsa.name = 'database_int_unknown_as_lsa'


                        class DatabaseIntUnknownAsLsa(object):
                            """
                            Internal database Unknown LSA information
                            
                            .. attribute:: advertising_router
                            
                            	Advertising Router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: interface_name_xr
                            
                            	LSA interface name 
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_sham_link
                            
                            	If true, it is a sham link 
                            	**type**\:  bool
                            
                            .. attribute:: is_virtual_link
                            
                            	If true, it is a virtual link 
                            	**type**\:  bool
                            
                            .. attribute:: ls_id
                            
                            	Link state ID
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: lsa_detail
                            
                            	Detailed LSA information
                            	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaDetail>`
                            
                            .. attribute:: lsa_header
                            
                            	Header information 
                            	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaHeader>`
                            
                            .. attribute:: lsa_type
                            
                            	LSA type
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: sham_link_id
                            
                            	Shamlink ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: virtual_link_id
                            
                            	Virtual link ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.advertising_router = None
                                self.interface_name_xr = None
                                self.is_sham_link = None
                                self.is_virtual_link = None
                                self.ls_id = None
                                self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaDetail()
                                self.lsa_detail.parent = self
                                self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaHeader()
                                self.lsa_header.parent = self
                                self.lsa_type = None
                                self.sham_link_id = None
                                self.virtual_link_id = None


                            class LsaHeader(object):
                                """
                                Header information 
                                
                                .. attribute:: advertising_router
                                
                                	Router ID of Advertising Router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: checksum
                                
                                	Checksum value
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: is_do_not_age_lsa
                                
                                	If true, Do Not Age this LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_graceful_restart_active
                                
                                	If true, if grace restart is active 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	LS ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_age
                                
                                	LSA's Age (s)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsa_area_id
                                
                                	Area ID in decimal or dotted\-decimal format
                                	**type**\:  str
                                
                                	**range:** 0..16
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: sequence_number
                                
                                	Current Sequence number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.checksum = None
                                    self.is_do_not_age_lsa = None
                                    self.is_graceful_restart_active = None
                                    self.ls_id = None
                                    self.lsa_age = None
                                    self.lsa_area_id = None
                                    self.lsa_type = None
                                    self.sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.checksum is not None:
                                        return True

                                    if self.is_do_not_age_lsa is not None:
                                        return True

                                    if self.is_graceful_restart_active is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_age is not None:
                                        return True

                                    if self.lsa_area_id is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaHeader']['meta_info']


                            class LsaDetail(object):
                                """
                                Detailed LSA information
                                
                                .. attribute:: free_time
                                
                                	The amount of time since the last check was made to free this LSA (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: is_acknowledged
                                
                                	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                	**type**\:  bool
                                
                                .. attribute:: is_advertising_router_reachable
                                
                                	If true, Advertising Router is reachable
                                	**type**\:  bool
                                
                                .. attribute:: is_deleted
                                
                                	If true, flag is set to delete this LSA 
                                	**type**\:  bool
                                
                                .. attribute:: is_flood_pending
                                
                                	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                	**type**\:  bool
                                
                                .. attribute:: is_maximum_aged
                                
                                	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                	**type**\:  bool
                                
                                .. attribute:: is_neighbor_exchange
                                
                                	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                	**type**\:  bool
                                
                                .. attribute:: is_no_delete
                                
                                	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_nsr_ack_pending
                                
                                	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                	**type**\:  bool
                                
                                .. attribute:: is_partial_spf
                                
                                	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                	**type**\:  bool
                                
                                .. attribute:: is_routing_bit
                                
                                	If true, Routing Bit set on the LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_routing_table
                                
                                	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                	**type**\:  bool
                                
                                .. attribute:: lsa_flood_required_post_fail_over
                                
                                	LSA flood required after FO
                                	**type**\:  bool
                                
                                .. attribute:: lsa_length
                                
                                	Length of the LSA
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsa_sync_state
                                
                                	State of LSA sync with active
                                	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                
                                .. attribute:: minute_table_index
                                
                                	Minute table index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: nsr_flood_required
                                
                                	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                	**type**\:  bool
                                
                                .. attribute:: rate_limit
                                
                                	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                	**type**\:  bool
                                
                                .. attribute:: second_table_index
                                
                                	Second table index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.free_time = None
                                    self.is_acknowledged = None
                                    self.is_advertising_router_reachable = None
                                    self.is_deleted = None
                                    self.is_flood_pending = None
                                    self.is_maximum_aged = None
                                    self.is_neighbor_exchange = None
                                    self.is_no_delete = None
                                    self.is_nsr_ack_pending = None
                                    self.is_partial_spf = None
                                    self.is_routing_bit = None
                                    self.is_routing_table = None
                                    self.lsa_flood_required_post_fail_over = None
                                    self.lsa_length = None
                                    self.lsa_sync_state = None
                                    self.minute_table_index = None
                                    self.nsr_flood_required = None
                                    self.rate_limit = None
                                    self.second_table_index = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.free_time is not None:
                                        return True

                                    if self.is_acknowledged is not None:
                                        return True

                                    if self.is_advertising_router_reachable is not None:
                                        return True

                                    if self.is_deleted is not None:
                                        return True

                                    if self.is_flood_pending is not None:
                                        return True

                                    if self.is_maximum_aged is not None:
                                        return True

                                    if self.is_neighbor_exchange is not None:
                                        return True

                                    if self.is_no_delete is not None:
                                        return True

                                    if self.is_nsr_ack_pending is not None:
                                        return True

                                    if self.is_partial_spf is not None:
                                        return True

                                    if self.is_routing_bit is not None:
                                        return True

                                    if self.is_routing_table is not None:
                                        return True

                                    if self.lsa_flood_required_post_fail_over is not None:
                                        return True

                                    if self.lsa_length is not None:
                                        return True

                                    if self.lsa_sync_state is not None:
                                        return True

                                    if self.minute_table_index is not None:
                                        return True

                                    if self.nsr_flood_required is not None:
                                        return True

                                    if self.rate_limit is not None:
                                        return True

                                    if self.second_table_index is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaDetail']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-as-lsa'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.advertising_router is not None:
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_sham_link is not None:
                                    return True

                                if self.is_virtual_link is not None:
                                    return True

                                if self.ls_id is not None:
                                    return True

                                if self.lsa_detail is not None and self.lsa_detail._has_data():
                                    return True

                                if self.lsa_header is not None and self.lsa_header._has_data():
                                    return True

                                if self.lsa_type is not None:
                                    return True

                                if self.sham_link_id is not None:
                                    return True

                                if self.virtual_link_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-as-lsas'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.database_int_unknown_as_lsa is not None:
                                for child_ref in self.database_int_unknown_as_lsa:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntUnknownAsLsas']['meta_info']


                    class AreaInformations(object):
                        """
                        OSPFv3 area information table
                        
                        .. attribute:: area_information
                        
                        	OSPFv3 area information
                        	**type**\: list of  :py:class:`AreaInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.AreaInformations.AreaInformation>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area_information = YList()
                            self.area_information.parent = self
                            self.area_information.name = 'area_information'


                        class AreaInformation(object):
                            """
                            OSPFv3 area information
                            
                            .. attribute:: area_id  <key>
                            
                            	Area ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: area_dc_bitless_ls_as
                            
                            	Number of LSA with demand circuit bit not set
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_interfaces
                            
                            	Number of interfaces in the area
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: area_lfa_interface_count
                            
                            	Number of LFA enabled interfaces
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_lfa_revision
                            
                            	Area LFA revision
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_opaque_lsa_checksum
                            
                            	Sum of opaque LSA checksums
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_opaque_lsas
                            
                            	Number of opaque LSAs in the area
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_per_prefix_lfa_interface_count
                            
                            	Number of Per Prefix LFA enabled interfaces
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_range
                            
                            	List of ranges to summarize
                            	**type**\: list of  :py:class:`AreaRange <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.AreaInformations.AreaInformation.AreaRange>`
                            
                            .. attribute:: do_not_age_ls_as
                            
                            	Number of do not age LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: flood_list_length
                            
                            	Number of LSAs which need to be flooded
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: indication_ls_as
                            
                            	Number of indication LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: is_area_nssa
                            
                            	If true, area is a NSSA
                            	**type**\:  bool
                            
                            .. attribute:: is_area_stubbed
                            
                            	If true, stub area
                            	**type**\:  bool
                            
                            .. attribute:: is_area_total_stubbed
                            
                            	If true, totally stubby area
                            	**type**\:  bool
                            
                            .. attribute:: is_backbone_area_active
                            
                            	If true, Backbone area is active
                            	**type**\:  bool
                            
                            .. attribute:: is_nssa_default
                            
                            	If true, generate NSSA default route
                            	**type**\:  bool
                            
                            .. attribute:: is_nssa_translated
                            
                            	If true, perform 7/5 translation
                            	**type**\:  bool
                            
                            .. attribute:: is_rrr_enabled
                            
                            	If true, RRR is enabled
                            	**type**\:  bool
                            
                            .. attribute:: nssa_no_redistribution
                            
                            	If true, No redistribution into this NSSA area
                            	**type**\:  bool
                            
                            .. attribute:: sp_fs
                            
                            	Number of SPF calculations run
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: stub_default_cost
                            
                            	Default cost for Stub or NSSA area
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_id = None
                                self.area_dc_bitless_ls_as = None
                                self.area_interfaces = None
                                self.area_lfa_interface_count = None
                                self.area_lfa_revision = None
                                self.area_opaque_lsa_checksum = None
                                self.area_opaque_lsas = None
                                self.area_per_prefix_lfa_interface_count = None
                                self.area_range = YList()
                                self.area_range.parent = self
                                self.area_range.name = 'area_range'
                                self.do_not_age_ls_as = None
                                self.flood_list_length = None
                                self.indication_ls_as = None
                                self.is_area_nssa = None
                                self.is_area_stubbed = None
                                self.is_area_total_stubbed = None
                                self.is_backbone_area_active = None
                                self.is_nssa_default = None
                                self.is_nssa_translated = None
                                self.is_rrr_enabled = None
                                self.nssa_no_redistribution = None
                                self.sp_fs = None
                                self.stub_default_cost = None


                            class AreaRange(object):
                                """
                                List of ranges to summarize
                                
                                .. attribute:: is_cost_configured
                                
                                	If true, cost is configured 
                                	**type**\:  bool
                                
                                .. attribute:: net_cost
                                
                                	Net cost 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: range_prefix
                                
                                	IP prefix for summarization
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: range_prefix_length
                                
                                	IP prefix length for summarization
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: status
                                
                                	Area range status 
                                	**type**\:  :py:class:`Ospfv3AreaRangeStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3AreaRangeStatusEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.is_cost_configured = None
                                    self.net_cost = None
                                    self.range_prefix = None
                                    self.range_prefix_length = None
                                    self.status = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-range'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.is_cost_configured is not None:
                                        return True

                                    if self.net_cost is not None:
                                        return True

                                    if self.range_prefix is not None:
                                        return True

                                    if self.range_prefix_length is not None:
                                        return True

                                    if self.status is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.AreaInformations.AreaInformation.AreaRange']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.area_id is None:
                                    raise YPYModelError('Key property area_id is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-information[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_id is not None:
                                    return True

                                if self.area_dc_bitless_ls_as is not None:
                                    return True

                                if self.area_interfaces is not None:
                                    return True

                                if self.area_lfa_interface_count is not None:
                                    return True

                                if self.area_lfa_revision is not None:
                                    return True

                                if self.area_opaque_lsa_checksum is not None:
                                    return True

                                if self.area_opaque_lsas is not None:
                                    return True

                                if self.area_per_prefix_lfa_interface_count is not None:
                                    return True

                                if self.area_range is not None:
                                    for child_ref in self.area_range:
                                        if child_ref._has_data():
                                            return True

                                if self.do_not_age_ls_as is not None:
                                    return True

                                if self.flood_list_length is not None:
                                    return True

                                if self.indication_ls_as is not None:
                                    return True

                                if self.is_area_nssa is not None:
                                    return True

                                if self.is_area_stubbed is not None:
                                    return True

                                if self.is_area_total_stubbed is not None:
                                    return True

                                if self.is_backbone_area_active is not None:
                                    return True

                                if self.is_nssa_default is not None:
                                    return True

                                if self.is_nssa_translated is not None:
                                    return True

                                if self.is_rrr_enabled is not None:
                                    return True

                                if self.nssa_no_redistribution is not None:
                                    return True

                                if self.sp_fs is not None:
                                    return True

                                if self.stub_default_cost is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.AreaInformations.AreaInformation']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-informations'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area_information is not None:
                                for child_ref in self.area_information:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.AreaInformations']['meta_info']


                    class InterfaceProcessTable(object):
                        """
                        OSPFv3 interface information table for all areas
                        
                        .. attribute:: interface
                        
                        	OSPFv3 interface information
                        	**type**\: list of  :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface = YList()
                            self.interface.parent = self
                            self.interface.name = 'interface'


                        class Interface(object):
                            """
                            OSPFv3 interface information
                            
                            .. attribute:: interface_name  <key>
                            
                            	Interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: active_interface
                            
                            	Active interface details 
                            	**type**\:  :py:class:`ActiveInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface.ActiveInterface>`
                            
                            .. attribute:: adjacent_neighbor
                            
                            	Number of adjacent neighbors
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: backup_designated_router_address
                            
                            	Backup designated router interface address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: backup_designated_router_id
                            
                            	Backup designated router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: configured_ldp_sync
                            
                            	If true, configured as LDP sync
                            	**type**\:  bool
                            
                            .. attribute:: dead_interval
                            
                            	Configured dead interval (s) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: designated_router_address
                            
                            	Designated router interface address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: designated_router_id
                            
                            	Designated router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: hello_interval
                            
                            	Configured hello interval (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_address
                            
                            	Interface IPv6 address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: interface_authentication_spi
                            
                            	Interface authentication spi 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_authentication_transmit
                            
                            	Interface authentication transmit 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_bfd
                            
                            	BFD information 
                            	**type**\:  :py:class:`InterfaceBfd <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface.InterfaceBfd>`
                            
                            .. attribute:: interface_dc_bitless_ls_as
                            
                            	Number of LSAs with demand circuit bit not set for the area in which the interface is running
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_encrypted_authentication_transmitted
                            
                            	Interface encrypted authentication transmitted 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_encryption_spi
                            
                            	Interface encryption spi
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_encryption_transmitted
                            
                            	Interface encryption transmitted 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_ldp_sync
                            
                            	If true, interface LDP sync is achieved
                            	**type**\:  bool
                            
                            .. attribute:: interface_link_cost
                            
                            	Interface link cost
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: interface_neighbor
                            
                            	Information for neighbors on the interface
                            	**type**\: list of  :py:class:`InterfaceNeighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface.InterfaceNeighbor>`
                            
                            .. attribute:: interface_number
                            
                            	Interface number 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_priority
                            
                            	Interface priority
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: interface_references
                            
                            	Interface reference count 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_retransmission_interval
                            
                            	Configured retransmit interval (s) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_router_id
                            
                            	Interface router ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: interface_state
                            
                            	Interface state
                            	**type**\:  :py:class:`ImStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.ImStateEnumEnum>`
                            
                            .. attribute:: is_demand_circuit_configured
                            
                            	If true, configured as demand circuit 
                            	**type**\:  bool
                            
                            .. attribute:: is_designated_router
                            
                            	If true, designated router
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_demand_circuit
                            
                            	If true, interface running as demand circuit
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_encryption_enabled
                            
                            	If true, interface encryption is enabled 
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_flood_reduction
                            
                            	If true, interface flood reduction is active 
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_ip_security_active
                            
                            	If true, interface IP security is active 
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_ip_security_required
                            
                            	If true, interface IP security is required 
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_line_up
                            
                            	If true, line protocol is up 
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_lsa_filtered
                            
                            	Filter is configured for out going LSAs 
                            	**type**\:  bool
                            
                            .. attribute:: network_lsa_flush_timer
                            
                            	The amount of time in seconds before flush timer for old network LSA expires 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: network_type
                            
                            	Network type
                            	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                            
                            .. attribute:: next_hello_time
                            
                            	Time until next Hello (s) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: ospf_interface_state
                            
                            	Interface state
                            	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                            
                            .. attribute:: transmission_delay
                            
                            	Interface transmission delay (sec)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: wait_interval
                            
                            	Configured wait interval (s) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.active_interface = Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface.ActiveInterface()
                                self.active_interface.parent = self
                                self.adjacent_neighbor = None
                                self.backup_designated_router_address = None
                                self.backup_designated_router_id = None
                                self.configured_ldp_sync = None
                                self.dead_interval = None
                                self.designated_router_address = None
                                self.designated_router_id = None
                                self.hello_interval = None
                                self.interface_address = None
                                self.interface_authentication_spi = None
                                self.interface_authentication_transmit = None
                                self.interface_bfd = Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface.InterfaceBfd()
                                self.interface_bfd.parent = self
                                self.interface_dc_bitless_ls_as = None
                                self.interface_encrypted_authentication_transmitted = None
                                self.interface_encryption_spi = None
                                self.interface_encryption_transmitted = None
                                self.interface_ldp_sync = None
                                self.interface_link_cost = None
                                self.interface_neighbor = YList()
                                self.interface_neighbor.parent = self
                                self.interface_neighbor.name = 'interface_neighbor'
                                self.interface_number = None
                                self.interface_priority = None
                                self.interface_references = None
                                self.interface_retransmission_interval = None
                                self.interface_router_id = None
                                self.interface_state = None
                                self.is_demand_circuit_configured = None
                                self.is_designated_router = None
                                self.is_interface_demand_circuit = None
                                self.is_interface_encryption_enabled = None
                                self.is_interface_flood_reduction = None
                                self.is_interface_ip_security_active = None
                                self.is_interface_ip_security_required = None
                                self.is_interface_line_up = None
                                self.is_interface_lsa_filtered = None
                                self.network_lsa_flush_timer = None
                                self.network_type = None
                                self.next_hello_time = None
                                self.ospf_interface_state = None
                                self.transmission_delay = None
                                self.wait_interval = None


                            class ActiveInterface(object):
                                """
                                Active interface details 
                                
                                .. attribute:: flood_queue_length
                                
                                	Flood queue length
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: flood_scan_length
                                
                                	Last flood scan length 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_area_flood_index
                                
                                	Area scope LSAs flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_area_next_flood
                                
                                	Next LSA to flood (Area scope)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_area_next_flood_index
                                
                                	Index of next LSA to flood (Area scope) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_as_flood_index
                                
                                	AS scope LSAs flood index 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_as_next_flood
                                
                                	Next LSA to flood (AS scope)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_as_next_flood_index
                                
                                	Index of next LSA to flood (AS scope)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_flood_pacing_timer
                                
                                	Time until next flood pacing timer (ms) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_link_flood_index
                                
                                	Interface flood link index 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_link_next_flood
                                
                                	Interface link next flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_link_next_index
                                
                                	Interface link next information index 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_neighbors
                                
                                	Total number of neighbors 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: last_flood_time
                                
                                	Last flood scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_flood_length
                                
                                	Maximum flood length 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_flood_time
                                
                                	Maximum flood time (ms) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: suppressed_hellos
                                
                                	Number of neighbors for which hellos are suppressed 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: wait_time
                                
                                	Wait time for DR/BDR selection (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.flood_queue_length = None
                                    self.flood_scan_length = None
                                    self.interface_area_flood_index = None
                                    self.interface_area_next_flood = None
                                    self.interface_area_next_flood_index = None
                                    self.interface_as_flood_index = None
                                    self.interface_as_next_flood = None
                                    self.interface_as_next_flood_index = None
                                    self.interface_flood_pacing_timer = None
                                    self.interface_link_flood_index = None
                                    self.interface_link_next_flood = None
                                    self.interface_link_next_index = None
                                    self.interface_neighbors = None
                                    self.last_flood_time = None
                                    self.maximum_flood_length = None
                                    self.maximum_flood_time = None
                                    self.suppressed_hellos = None
                                    self.wait_time = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:active-interface'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.flood_queue_length is not None:
                                        return True

                                    if self.flood_scan_length is not None:
                                        return True

                                    if self.interface_area_flood_index is not None:
                                        return True

                                    if self.interface_area_next_flood is not None:
                                        return True

                                    if self.interface_area_next_flood_index is not None:
                                        return True

                                    if self.interface_as_flood_index is not None:
                                        return True

                                    if self.interface_as_next_flood is not None:
                                        return True

                                    if self.interface_as_next_flood_index is not None:
                                        return True

                                    if self.interface_flood_pacing_timer is not None:
                                        return True

                                    if self.interface_link_flood_index is not None:
                                        return True

                                    if self.interface_link_next_flood is not None:
                                        return True

                                    if self.interface_link_next_index is not None:
                                        return True

                                    if self.interface_neighbors is not None:
                                        return True

                                    if self.last_flood_time is not None:
                                        return True

                                    if self.maximum_flood_length is not None:
                                        return True

                                    if self.maximum_flood_time is not None:
                                        return True

                                    if self.suppressed_hellos is not None:
                                        return True

                                    if self.wait_time is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface.ActiveInterface']['meta_info']


                            class InterfaceBfd(object):
                                """
                                BFD information 
                                
                                .. attribute:: bfd_detection_multiplier
                                
                                	BFD detection multiplier 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: bfd_interval
                                
                                	BFD interval (ms) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: bfd_intf_enable_mode
                                
                                	BFD Enable Mode on the interface \- Default/Strict
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bfd_detection_multiplier = None
                                    self.bfd_interval = None
                                    self.bfd_intf_enable_mode = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-bfd'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bfd_detection_multiplier is not None:
                                        return True

                                    if self.bfd_interval is not None:
                                        return True

                                    if self.bfd_intf_enable_mode is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface.InterfaceBfd']['meta_info']


                            class InterfaceNeighbor(object):
                                """
                                Information for neighbors on the interface
                                
                                .. attribute:: interface_neighbor_cost
                                
                                	Cost of link to neighbor
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_neighbor_id
                                
                                	Neighbor router ID 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: is_hello_suppressed
                                
                                	If true, hello is suppressed 
                                	**type**\:  bool
                                
                                .. attribute:: is_neighbor_bdr
                                
                                	If true, backup designated router is found 
                                	**type**\:  bool
                                
                                .. attribute:: is_neighbor_dr
                                
                                	If true, designated router is found 
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_neighbor_cost = None
                                    self.interface_neighbor_id = None
                                    self.is_hello_suppressed = None
                                    self.is_neighbor_bdr = None
                                    self.is_neighbor_dr = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-neighbor'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_neighbor_cost is not None:
                                        return True

                                    if self.interface_neighbor_id is not None:
                                        return True

                                    if self.is_hello_suppressed is not None:
                                        return True

                                    if self.is_neighbor_bdr is not None:
                                        return True

                                    if self.is_neighbor_dr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface.InterfaceNeighbor']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.interface_name is None:
                                    raise YPYModelError('Key property interface_name is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.active_interface is not None and self.active_interface._has_data():
                                    return True

                                if self.adjacent_neighbor is not None:
                                    return True

                                if self.backup_designated_router_address is not None:
                                    return True

                                if self.backup_designated_router_id is not None:
                                    return True

                                if self.configured_ldp_sync is not None:
                                    return True

                                if self.dead_interval is not None:
                                    return True

                                if self.designated_router_address is not None:
                                    return True

                                if self.designated_router_id is not None:
                                    return True

                                if self.hello_interval is not None:
                                    return True

                                if self.interface_address is not None:
                                    return True

                                if self.interface_authentication_spi is not None:
                                    return True

                                if self.interface_authentication_transmit is not None:
                                    return True

                                if self.interface_bfd is not None and self.interface_bfd._has_data():
                                    return True

                                if self.interface_dc_bitless_ls_as is not None:
                                    return True

                                if self.interface_encrypted_authentication_transmitted is not None:
                                    return True

                                if self.interface_encryption_spi is not None:
                                    return True

                                if self.interface_encryption_transmitted is not None:
                                    return True

                                if self.interface_ldp_sync is not None:
                                    return True

                                if self.interface_link_cost is not None:
                                    return True

                                if self.interface_neighbor is not None:
                                    for child_ref in self.interface_neighbor:
                                        if child_ref._has_data():
                                            return True

                                if self.interface_number is not None:
                                    return True

                                if self.interface_priority is not None:
                                    return True

                                if self.interface_references is not None:
                                    return True

                                if self.interface_retransmission_interval is not None:
                                    return True

                                if self.interface_router_id is not None:
                                    return True

                                if self.interface_state is not None:
                                    return True

                                if self.is_demand_circuit_configured is not None:
                                    return True

                                if self.is_designated_router is not None:
                                    return True

                                if self.is_interface_demand_circuit is not None:
                                    return True

                                if self.is_interface_encryption_enabled is not None:
                                    return True

                                if self.is_interface_flood_reduction is not None:
                                    return True

                                if self.is_interface_ip_security_active is not None:
                                    return True

                                if self.is_interface_ip_security_required is not None:
                                    return True

                                if self.is_interface_line_up is not None:
                                    return True

                                if self.is_interface_lsa_filtered is not None:
                                    return True

                                if self.network_lsa_flush_timer is not None:
                                    return True

                                if self.network_type is not None:
                                    return True

                                if self.next_hello_time is not None:
                                    return True

                                if self.ospf_interface_state is not None:
                                    return True

                                if self.transmission_delay is not None:
                                    return True

                                if self.wait_interval is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable.Interface']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-process-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface is not None:
                                for child_ref in self.interface:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceProcessTable']['meta_info']


                    class Redistributions(object):
                        """
                        Redistribution information table
                        
                        .. attribute:: redistribution
                        
                        	Redistribution information
                        	**type**\: list of  :py:class:`Redistribution <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Redistributions.Redistribution>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.redistribution = YList()
                            self.redistribution.parent = self
                            self.redistribution.name = 'redistribution'


                        class Redistribution(object):
                            """
                            Redistribution information
                            
                            .. attribute:: policy_name
                            
                            	Route policy name 
                            	**type**\:  str
                            
                            .. attribute:: process_id
                            
                            	Process ID 
                            	**type**\:  str
                            
                            	**range:** 0..40
                            
                            .. attribute:: process_name
                            
                            	Process name of a protocolbeing redistributed 
                            	**type**\:  str
                            
                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                            
                            .. attribute:: protocol_name
                            
                            	Protocol name that is redistributed
                            	**type**\:  str
                            
                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                            
                            .. attribute:: protocol_name_xr
                            
                            	Protocol name 
                            	**type**\:  str
                            
                            	**range:** 0..40
                            
                            .. attribute:: red_metric
                            
                            	red metric
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: red_metric_flag
                            
                            	red metric flag
                            	**type**\:  bool
                            
                            .. attribute:: red_metric_type
                            
                            	red metric type
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: red_mtype_flag
                            
                            	red mtype flag
                            	**type**\:  bool
                            
                            .. attribute:: red_tag
                            
                            	red tag
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.policy_name = None
                                self.process_id = None
                                self.process_name = None
                                self.protocol_name = None
                                self.protocol_name_xr = None
                                self.red_metric = None
                                self.red_metric_flag = None
                                self.red_metric_type = None
                                self.red_mtype_flag = None
                                self.red_tag = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:redistribution'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.policy_name is not None:
                                    return True

                                if self.process_id is not None:
                                    return True

                                if self.process_name is not None:
                                    return True

                                if self.protocol_name is not None:
                                    return True

                                if self.protocol_name_xr is not None:
                                    return True

                                if self.red_metric is not None:
                                    return True

                                if self.red_metric_flag is not None:
                                    return True

                                if self.red_metric_type is not None:
                                    return True

                                if self.red_mtype_flag is not None:
                                    return True

                                if self.red_tag is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Redistributions.Redistribution']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:redistributions'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.redistribution is not None:
                                for child_ref in self.redistribution:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Redistributions']['meta_info']


                    class ExternalRoutes(object):
                        """
                        OSPFv3 external route information table
                        
                        .. attribute:: external_route
                        
                        	OSPFv3 external route information
                        	**type**\: list of  :py:class:`ExternalRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.external_route = YList()
                            self.external_route.parent = self
                            self.external_route.name = 'external_route'


                        class ExternalRoute(object):
                            """
                            OSPFv3 external route information
                            
                            .. attribute:: prefix
                            
                            	Route prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: route_extended_community
                            
                            	Extended communities in the route
                            	**type**\:  :py:class:`RouteExtendedCommunity <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RouteExtendedCommunity>`
                            
                            .. attribute:: route_path
                            
                            	List of paths to this route
                            	**type**\: list of  :py:class:`RoutePath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RoutePath>`
                            
                            .. attribute:: route_topology
                            
                            	Common Route topology information
                            	**type**\:  :py:class:`RouteTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RouteTopology>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.route_extended_community = Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RouteExtendedCommunity()
                                self.route_extended_community.parent = self
                                self.route_path = YList()
                                self.route_path.parent = self
                                self.route_path.name = 'route_path'
                                self.route_topology = Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RouteTopology()
                                self.route_topology.parent = self


                            class RouteTopology(object):
                                """
                                Common Route topology information
                                
                                .. attribute:: route_cost
                                
                                	Route cost 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: route_distance
                                
                                	Route distance 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: route_id
                                
                                	Route ID 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: route_type
                                
                                	Route type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.route_cost = None
                                    self.route_distance = None
                                    self.route_id = None
                                    self.route_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-topology'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.route_cost is not None:
                                        return True

                                    if self.route_distance is not None:
                                        return True

                                    if self.route_id is not None:
                                        return True

                                    if self.route_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RouteTopology']['meta_info']


                            class RouteExtendedCommunity(object):
                                """
                                Extended communities in the route
                                
                                .. attribute:: extended_community_area_id
                                
                                	Area id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: extended_community_domain_id_value
                                
                                	Domain ID value
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: extended_community_options
                                
                                	Route Options
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: extended_community_route_type
                                
                                	Route type
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: extended_community_router_id
                                
                                	Router id
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: extended_communityl_domain_id_type
                                
                                	Domain ID type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.extended_community_area_id = None
                                    self.extended_community_domain_id_value = None
                                    self.extended_community_options = None
                                    self.extended_community_route_type = None
                                    self.extended_community_router_id = None
                                    self.extended_communityl_domain_id_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-extended-community'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.extended_community_area_id is not None:
                                        return True

                                    if self.extended_community_domain_id_value is not None:
                                        return True

                                    if self.extended_community_options is not None:
                                        return True

                                    if self.extended_community_route_type is not None:
                                        return True

                                    if self.extended_community_router_id is not None:
                                        return True

                                    if self.extended_communityl_domain_id_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RouteExtendedCommunity']['meta_info']


                            class RoutePath(object):
                                """
                                List of paths to this route
                                
                                .. attribute:: interface_name
                                
                                	Route path interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: route_backup_path
                                
                                	Backup Path Info
                                	**type**\:  :py:class:`RouteBackupPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RoutePath.RouteBackupPath>`
                                
                                .. attribute:: route_path_id
                                
                                	Path ID of path
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: route_path_next_hop
                                
                                	Route path next hop 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.route_backup_path = Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RoutePath.RouteBackupPath()
                                    self.route_backup_path.parent = self
                                    self.route_path_id = None
                                    self.route_path_next_hop = None


                                class RouteBackupPath(object):
                                    """
                                    Backup Path Info
                                    
                                    .. attribute:: backup_metric
                                    
                                    	Metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: backup_route_interface_name
                                    
                                    	Next hop Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: backup_route_next_hop_address
                                    
                                    	Nexthop IP address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: backup_route_source
                                    
                                    	IP address of source of route
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: downstream
                                    
                                    	Downstream
                                    	**type**\:  bool
                                    
                                    .. attribute:: line_card_disjoint
                                    
                                    	Line Card Disjoint
                                    	**type**\:  bool
                                    
                                    .. attribute:: node_protect
                                    
                                    	Node Protect
                                    	**type**\:  bool
                                    
                                    .. attribute:: primary_path
                                    
                                    	Primary Path
                                    	**type**\:  bool
                                    
                                    .. attribute:: srlg_disjoint
                                    
                                    	SRLG Disjoint
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_metric = None
                                        self.backup_route_interface_name = None
                                        self.backup_route_next_hop_address = None
                                        self.backup_route_source = None
                                        self.downstream = None
                                        self.line_card_disjoint = None
                                        self.node_protect = None
                                        self.primary_path = None
                                        self.srlg_disjoint = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-backup-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_metric is not None:
                                            return True

                                        if self.backup_route_interface_name is not None:
                                            return True

                                        if self.backup_route_next_hop_address is not None:
                                            return True

                                        if self.backup_route_source is not None:
                                            return True

                                        if self.downstream is not None:
                                            return True

                                        if self.line_card_disjoint is not None:
                                            return True

                                        if self.node_protect is not None:
                                            return True

                                        if self.primary_path is not None:
                                            return True

                                        if self.srlg_disjoint is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RoutePath.RouteBackupPath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-path'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.route_backup_path is not None and self.route_backup_path._has_data():
                                        return True

                                    if self.route_path_id is not None:
                                        return True

                                    if self.route_path_next_hop is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute.RoutePath']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:external-route'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.route_extended_community is not None and self.route_extended_community._has_data():
                                    return True

                                if self.route_path is not None:
                                    for child_ref in self.route_path:
                                        if child_ref._has_data():
                                            return True

                                if self.route_topology is not None and self.route_topology._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes.ExternalRoute']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:external-routes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.external_route is not None:
                                for child_ref in self.external_route:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ExternalRoutes']['meta_info']


                    class RequestListProcessTable(object):
                        """
                        OSPFv3 request list information for all areas
                        
                        .. attribute:: request
                        
                        	OSPFv3 request list information
                        	**type**\: list of  :py:class:`Request <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RequestListProcessTable.Request>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.request = YList()
                            self.request.parent = self
                            self.request.name = 'request'


                        class Request(object):
                            """
                            OSPFv3 request list information
                            
                            .. attribute:: interface_name
                            
                            	Interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_request_sham_link
                            
                            	If true, sham link is requested 
                            	**type**\:  bool
                            
                            .. attribute:: is_request_virtual_link
                            
                            	If true, virtual link is requested 
                            	**type**\:  bool
                            
                            .. attribute:: neighbor_address
                            
                            	Neighbor address
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: request
                            
                            	List of request list entries
                            	**type**\: list of  :py:class:`Request <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RequestListProcessTable.Request.Request>`
                            
                            .. attribute:: request_neighbor_address
                            
                            	Neighbor IP address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: request_sham_link_id
                            
                            	Request sham link ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: request_virtual_link_id
                            
                            	Request virtual link ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.is_request_sham_link = None
                                self.is_request_virtual_link = None
                                self.neighbor_address = None
                                self.request = YList()
                                self.request.parent = self
                                self.request.name = 'request'
                                self.request_neighbor_address = None
                                self.request_sham_link_id = None
                                self.request_virtual_link_id = None


                            class Request(object):
                                """
                                List of request list entries
                                
                                .. attribute:: header_advertising_router
                                
                                	Router ID of the advertising router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_age
                                
                                	Age of the LSA (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: header_lsa_id
                                
                                	LSA ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                .. attribute:: header_sequence_number
                                
                                	Current LSA sequence number
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.header_advertising_router = None
                                    self.header_lsa_age = None
                                    self.header_lsa_id = None
                                    self.header_lsa_type = None
                                    self.header_sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.header_advertising_router is not None:
                                        return True

                                    if self.header_lsa_age is not None:
                                        return True

                                    if self.header_lsa_id is not None:
                                        return True

                                    if self.header_lsa_type is not None:
                                        return True

                                    if self.header_sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RequestListProcessTable.Request.Request']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.is_request_sham_link is not None:
                                    return True

                                if self.is_request_virtual_link is not None:
                                    return True

                                if self.neighbor_address is not None:
                                    return True

                                if self.request is not None:
                                    for child_ref in self.request:
                                        if child_ref._has_data():
                                            return True

                                if self.request_neighbor_address is not None:
                                    return True

                                if self.request_sham_link_id is not None:
                                    return True

                                if self.request_virtual_link_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RequestListProcessTable.Request']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request-list-process-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.request is not None:
                                for child_ref in self.request:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RequestListProcessTable']['meta_info']


                    class VirtualLink(object):
                        """
                        Virtual link information
                        
                        .. attribute:: interface_name
                        
                        	Interface on which this virtual link is formed
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_virtual_link_authentication_enabled
                        
                        	If true, virtual link authentication is enabled 
                        	**type**\:  bool
                        
                        .. attribute:: is_virtual_link_demand_circuit
                        
                        	If true, the link runs as demand circuit
                        	**type**\:  bool
                        
                        .. attribute:: is_virtual_link_encryption_enabled
                        
                        	If true, virtual link encryption is enabled 
                        	**type**\:  bool
                        
                        .. attribute:: is_virtual_link_ip_security_active
                        
                        	If true, Virtual link IP security is active 
                        	**type**\:  bool
                        
                        .. attribute:: is_virtual_link_ip_security_required
                        
                        	If true, virtual link IP security is required 
                        	**type**\:  bool
                        
                        .. attribute:: is_virtual_link_passive
                        
                        	If true, interface is passive
                        	**type**\:  bool
                        
                        .. attribute:: transit_area_id
                        
                        	Transit area id 
                        	**type**\:  str
                        
                        .. attribute:: virtual_link_authentication_spi
                        
                        	Virtual link authentication spi 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_authentication_transmit
                        
                        	Virtual link authentication transmit 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_cost
                        
                        	Cost of the virtual link
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: virtual_link_dc_bitless_lsa
                        
                        	Number of LSA's with demand circuit bit not set 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_dead_interval
                        
                        	Dead interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_encrypted_authentication_transmitted
                        
                        	Virtual link encrypted authentication transmitted 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_encryption_spi
                        
                        	Virtual link encryption spi
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_encryption_transmitted
                        
                        	Virtual link encryption transmitted 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_hello_interval
                        
                        	Hello interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_interface_number
                        
                        	Virtual link interface number 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_neighbor
                        
                        	Neighbor information 
                        	**type**\:  :py:class:`VirtualLinkNeighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink.VirtualLinkNeighbor>`
                        
                        .. attribute:: virtual_link_neighbor_address
                        
                        	Virtual link neighbor addresss 
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: virtual_link_neighbor_id
                        
                        	Neighbor on other end of this virtual link
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: virtual_link_next_hello
                        
                        	Time until next hello (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_retransmission_interval
                        
                        	Retransmission interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_state
                        
                        	OSPF interface state for the virtual link
                        	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                        
                        .. attribute:: virtual_link_wait_interval
                        
                        	Wait interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virual_link_transmission_delay
                        
                        	Transmission delay in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_virtual_link_authentication_enabled = None
                            self.is_virtual_link_demand_circuit = None
                            self.is_virtual_link_encryption_enabled = None
                            self.is_virtual_link_ip_security_active = None
                            self.is_virtual_link_ip_security_required = None
                            self.is_virtual_link_passive = None
                            self.transit_area_id = None
                            self.virtual_link_authentication_spi = None
                            self.virtual_link_authentication_transmit = None
                            self.virtual_link_cost = None
                            self.virtual_link_dc_bitless_lsa = None
                            self.virtual_link_dead_interval = None
                            self.virtual_link_encrypted_authentication_transmitted = None
                            self.virtual_link_encryption_spi = None
                            self.virtual_link_encryption_transmitted = None
                            self.virtual_link_hello_interval = None
                            self.virtual_link_interface_number = None
                            self.virtual_link_neighbor = Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink.VirtualLinkNeighbor()
                            self.virtual_link_neighbor.parent = self
                            self.virtual_link_neighbor_address = None
                            self.virtual_link_neighbor_id = None
                            self.virtual_link_next_hello = None
                            self.virtual_link_retransmission_interval = None
                            self.virtual_link_state = None
                            self.virtual_link_wait_interval = None
                            self.virual_link_transmission_delay = None


                        class VirtualLinkNeighbor(object):
                            """
                            Neighbor information 
                            
                            .. attribute:: is_virtual_link_hello_suppressed
                            
                            	If true, hello suppressed 
                            	**type**\:  bool
                            
                            .. attribute:: virtual_link_retransmission
                            
                            	Virtual link retransmission information 
                            	**type**\:  :py:class:`VirtualLinkRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink.VirtualLinkNeighbor.VirtualLinkRetransmission>`
                            
                            .. attribute:: virtual_link_state
                            
                            	OSPF interface state for the virtual link
                            	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.is_virtual_link_hello_suppressed = None
                                self.virtual_link_retransmission = Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink.VirtualLinkNeighbor.VirtualLinkRetransmission()
                                self.virtual_link_retransmission.parent = self
                                self.virtual_link_state = None


                            class VirtualLinkRetransmission(object):
                                """
                                Virtual link retransmission information 
                                
                                .. attribute:: area_first_flood
                                
                                	First flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_first_flood_index
                                
                                	Index of the first flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_flood_index
                                
                                	Area scope LSA's flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_next_flood
                                
                                	Next flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_next_flood_index
                                
                                	Index of next flood item for Area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_first_flood
                                
                                	First flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_first_flood_index
                                
                                	Index for first flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_flood_index
                                
                                	AS scope LSA's flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_next_flood
                                
                                	Next flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_next_flood_index
                                
                                	Index of next flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: database_descriptor_retransmissions
                                
                                	Number of database descriptor retransmissions during last exchange
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: last_retransmission_length
                                
                                	Number of LSAs sent in last retransmission
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: last_retransmission_time
                                
                                	Last retransmission scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_first_flood
                                
                                	Link first flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_first_flood_index
                                
                                	Link first flood information index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_flood_index
                                
                                	Link flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_next_flood
                                
                                	Link next flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_next_flood_index
                                
                                	Link next flood information index 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_retransmission_timer
                                
                                	Time until next LSA retransmission (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_retransmission_length
                                
                                	Maximum number of LSAs sent in a retransmission
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_retransmission_time
                                
                                	Maximum retransmission scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_retransmissions
                                
                                	Number of neighbor retransmissions 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: retransmissions
                                
                                	Number of retransmissions for this neighbor
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.area_first_flood = None
                                    self.area_first_flood_index = None
                                    self.area_flood_index = None
                                    self.area_next_flood = None
                                    self.area_next_flood_index = None
                                    self.as_first_flood = None
                                    self.as_first_flood_index = None
                                    self.as_flood_index = None
                                    self.as_next_flood = None
                                    self.as_next_flood_index = None
                                    self.database_descriptor_retransmissions = None
                                    self.last_retransmission_length = None
                                    self.last_retransmission_time = None
                                    self.link_first_flood = None
                                    self.link_first_flood_index = None
                                    self.link_flood_index = None
                                    self.link_next_flood = None
                                    self.link_next_flood_index = None
                                    self.lsa_retransmission_timer = None
                                    self.maximum_retransmission_length = None
                                    self.maximum_retransmission_time = None
                                    self.neighbor_retransmissions = None
                                    self.retransmissions = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:virtual-link-retransmission'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.area_first_flood is not None:
                                        return True

                                    if self.area_first_flood_index is not None:
                                        return True

                                    if self.area_flood_index is not None:
                                        return True

                                    if self.area_next_flood is not None:
                                        return True

                                    if self.area_next_flood_index is not None:
                                        return True

                                    if self.as_first_flood is not None:
                                        return True

                                    if self.as_first_flood_index is not None:
                                        return True

                                    if self.as_flood_index is not None:
                                        return True

                                    if self.as_next_flood is not None:
                                        return True

                                    if self.as_next_flood_index is not None:
                                        return True

                                    if self.database_descriptor_retransmissions is not None:
                                        return True

                                    if self.last_retransmission_length is not None:
                                        return True

                                    if self.last_retransmission_time is not None:
                                        return True

                                    if self.link_first_flood is not None:
                                        return True

                                    if self.link_first_flood_index is not None:
                                        return True

                                    if self.link_flood_index is not None:
                                        return True

                                    if self.link_next_flood is not None:
                                        return True

                                    if self.link_next_flood_index is not None:
                                        return True

                                    if self.lsa_retransmission_timer is not None:
                                        return True

                                    if self.maximum_retransmission_length is not None:
                                        return True

                                    if self.maximum_retransmission_time is not None:
                                        return True

                                    if self.neighbor_retransmissions is not None:
                                        return True

                                    if self.retransmissions is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink.VirtualLinkNeighbor.VirtualLinkRetransmission']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:virtual-link-neighbor'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.is_virtual_link_hello_suppressed is not None:
                                    return True

                                if self.virtual_link_retransmission is not None and self.virtual_link_retransmission._has_data():
                                    return True

                                if self.virtual_link_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink.VirtualLinkNeighbor']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:virtual-link'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.is_virtual_link_authentication_enabled is not None:
                                return True

                            if self.is_virtual_link_demand_circuit is not None:
                                return True

                            if self.is_virtual_link_encryption_enabled is not None:
                                return True

                            if self.is_virtual_link_ip_security_active is not None:
                                return True

                            if self.is_virtual_link_ip_security_required is not None:
                                return True

                            if self.is_virtual_link_passive is not None:
                                return True

                            if self.transit_area_id is not None:
                                return True

                            if self.virtual_link_authentication_spi is not None:
                                return True

                            if self.virtual_link_authentication_transmit is not None:
                                return True

                            if self.virtual_link_cost is not None:
                                return True

                            if self.virtual_link_dc_bitless_lsa is not None:
                                return True

                            if self.virtual_link_dead_interval is not None:
                                return True

                            if self.virtual_link_encrypted_authentication_transmitted is not None:
                                return True

                            if self.virtual_link_encryption_spi is not None:
                                return True

                            if self.virtual_link_encryption_transmitted is not None:
                                return True

                            if self.virtual_link_hello_interval is not None:
                                return True

                            if self.virtual_link_interface_number is not None:
                                return True

                            if self.virtual_link_neighbor is not None and self.virtual_link_neighbor._has_data():
                                return True

                            if self.virtual_link_neighbor_address is not None:
                                return True

                            if self.virtual_link_neighbor_id is not None:
                                return True

                            if self.virtual_link_next_hello is not None:
                                return True

                            if self.virtual_link_retransmission_interval is not None:
                                return True

                            if self.virtual_link_state is not None:
                                return True

                            if self.virtual_link_wait_interval is not None:
                                return True

                            if self.virual_link_transmission_delay is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.VirtualLink']['meta_info']


                    class FloodListProcessTable(object):
                        """
                        OSPFv3 flood list information table for all
                        areas
                        
                        .. attribute:: flood
                        
                        	OSPFv3 flood list information
                        	**type**\: list of  :py:class:`Flood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable.Flood>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.flood = YList()
                            self.flood.parent = self
                            self.flood.name = 'flood'


                        class Flood(object):
                            """
                            OSPFv3 flood list information
                            
                            .. attribute:: interface_name  <key>
                            
                            	Interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: area_flood
                            
                            	Area scope floodlist
                            	**type**\: list of  :py:class:`AreaFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable.Flood.AreaFlood>`
                            
                            .. attribute:: as_flood
                            
                            	AS scope floodlist
                            	**type**\: list of  :py:class:`AsFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable.Flood.AsFlood>`
                            
                            .. attribute:: link_flood
                            
                            	Link floodlist
                            	**type**\: list of  :py:class:`LinkFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable.Flood.LinkFlood>`
                            
                            .. attribute:: ls_transmission_timer
                            
                            	Time until next LS transmission (ms) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: queue_length
                            
                            	Number of LSAs currently being flooded 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.area_flood = YList()
                                self.area_flood.parent = self
                                self.area_flood.name = 'area_flood'
                                self.as_flood = YList()
                                self.as_flood.parent = self
                                self.as_flood.name = 'as_flood'
                                self.link_flood = YList()
                                self.link_flood.parent = self
                                self.link_flood.name = 'link_flood'
                                self.ls_transmission_timer = None
                                self.queue_length = None


                            class LinkFlood(object):
                                """
                                Link floodlist
                                
                                .. attribute:: header_advertising_router
                                
                                	Router ID of the advertising router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_age
                                
                                	Age of the LSA (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: header_lsa_id
                                
                                	LSA ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                .. attribute:: header_sequence_number
                                
                                	Current LSA sequence number
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.header_advertising_router = None
                                    self.header_lsa_age = None
                                    self.header_lsa_id = None
                                    self.header_lsa_type = None
                                    self.header_sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:link-flood'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.header_advertising_router is not None:
                                        return True

                                    if self.header_lsa_age is not None:
                                        return True

                                    if self.header_lsa_id is not None:
                                        return True

                                    if self.header_lsa_type is not None:
                                        return True

                                    if self.header_sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable.Flood.LinkFlood']['meta_info']


                            class AreaFlood(object):
                                """
                                Area scope floodlist
                                
                                .. attribute:: header_advertising_router
                                
                                	Router ID of the advertising router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_age
                                
                                	Age of the LSA (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: header_lsa_id
                                
                                	LSA ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                .. attribute:: header_sequence_number
                                
                                	Current LSA sequence number
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.header_advertising_router = None
                                    self.header_lsa_age = None
                                    self.header_lsa_id = None
                                    self.header_lsa_type = None
                                    self.header_sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-flood'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.header_advertising_router is not None:
                                        return True

                                    if self.header_lsa_age is not None:
                                        return True

                                    if self.header_lsa_id is not None:
                                        return True

                                    if self.header_lsa_type is not None:
                                        return True

                                    if self.header_sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable.Flood.AreaFlood']['meta_info']


                            class AsFlood(object):
                                """
                                AS scope floodlist
                                
                                .. attribute:: header_advertising_router
                                
                                	Router ID of the advertising router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_age
                                
                                	Age of the LSA (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: header_lsa_id
                                
                                	LSA ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                .. attribute:: header_sequence_number
                                
                                	Current LSA sequence number
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.header_advertising_router = None
                                    self.header_lsa_age = None
                                    self.header_lsa_id = None
                                    self.header_lsa_type = None
                                    self.header_sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:as-flood'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.header_advertising_router is not None:
                                        return True

                                    if self.header_lsa_age is not None:
                                        return True

                                    if self.header_lsa_id is not None:
                                        return True

                                    if self.header_lsa_type is not None:
                                        return True

                                    if self.header_sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable.Flood.AsFlood']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.interface_name is None:
                                    raise YPYModelError('Key property interface_name is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:flood[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.area_flood is not None:
                                    for child_ref in self.area_flood:
                                        if child_ref._has_data():
                                            return True

                                if self.as_flood is not None:
                                    for child_ref in self.as_flood:
                                        if child_ref._has_data():
                                            return True

                                if self.link_flood is not None:
                                    for child_ref in self.link_flood:
                                        if child_ref._has_data():
                                            return True

                                if self.ls_transmission_timer is not None:
                                    return True

                                if self.queue_length is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable.Flood']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:flood-list-process-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.flood is not None:
                                for child_ref in self.flood:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.FloodListProcessTable']['meta_info']


                    class RouteSummary(object):
                        """
                        Summarize OSPFv3 local RIB tables
                        
                        .. attribute:: extern_one_route
                        
                        	Extern 1 route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: extern_two_route
                        
                        	Extern 2 route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: inter_area_route
                        
                        	Inter route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: intra_area_route
                        
                        	Intra route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: nssa_one_route
                        
                        	NSSA 1 route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: nssa_two_route
                        
                        	NSSA 2 route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: redistribution_route
                        
                        	Redistribution route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: route_connected
                        
                        	Route connected 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: route_id
                        
                        	Route summary of a route ID 
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: total_received_route
                        
                        	Total route received summary
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_sent_route
                        
                        	Total route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.extern_one_route = None
                            self.extern_two_route = None
                            self.inter_area_route = None
                            self.intra_area_route = None
                            self.nssa_one_route = None
                            self.nssa_two_route = None
                            self.redistribution_route = None
                            self.route_connected = None
                            self.route_id = None
                            self.total_received_route = None
                            self.total_sent_route = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-summary'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.extern_one_route is not None:
                                return True

                            if self.extern_two_route is not None:
                                return True

                            if self.inter_area_route is not None:
                                return True

                            if self.intra_area_route is not None:
                                return True

                            if self.nssa_one_route is not None:
                                return True

                            if self.nssa_two_route is not None:
                                return True

                            if self.redistribution_route is not None:
                                return True

                            if self.route_connected is not None:
                                return True

                            if self.route_id is not None:
                                return True

                            if self.total_received_route is not None:
                                return True

                            if self.total_sent_route is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RouteSummary']['meta_info']


                    class Areas(object):
                        """
                        OSPFv3 area table
                        
                        .. attribute:: area
                        
                        	Per\-area information
                        	**type**\: list of  :py:class:`Area <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area = YList()
                            self.area.parent = self
                            self.area.name = 'area'


                        class Area(object):
                            """
                            Per\-area information
                            
                            .. attribute:: area_id  <key>
                            
                            	Area ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: flood_list_table
                            
                            	OSPFv3 flood list information table for an area
                            	**type**\:  :py:class:`FloodListTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable>`
                            
                            .. attribute:: interface_brief_table
                            
                            	OSPFv3 interface brief information table for an area
                            	**type**\:  :py:class:`InterfaceBriefTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceBriefTable>`
                            
                            .. attribute:: interface_table
                            
                            	OSPFv3 interface information table for an area
                            	**type**\:  :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable>`
                            
                            .. attribute:: neighbor_detail_table
                            
                            	OSPFv3 area neighbor information table
                            	**type**\:  :py:class:`NeighborDetailTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable>`
                            
                            .. attribute:: neighbor_table
                            
                            	OSPFv3 neighbor information table
                            	**type**\:  :py:class:`NeighborTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable>`
                            
                            .. attribute:: request_list_table
                            
                            	OSPFv3 request list information in an area
                            	**type**\:  :py:class:`RequestListTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RequestListTable>`
                            
                            .. attribute:: retransmission_list_table
                            
                            	OSPFv3 retransmission list information table in an area
                            	**type**\:  :py:class:`RetransmissionListTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_id = None
                                self.flood_list_table = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable()
                                self.flood_list_table.parent = self
                                self.interface_brief_table = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceBriefTable()
                                self.interface_brief_table.parent = self
                                self.interface_table = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable()
                                self.interface_table.parent = self
                                self.neighbor_detail_table = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable()
                                self.neighbor_detail_table.parent = self
                                self.neighbor_table = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable()
                                self.neighbor_table.parent = self
                                self.request_list_table = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RequestListTable()
                                self.request_list_table.parent = self
                                self.retransmission_list_table = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable()
                                self.retransmission_list_table.parent = self


                            class NeighborDetailTable(object):
                                """
                                OSPFv3 area neighbor information table
                                
                                .. attribute:: neighbor_detail
                                
                                	OSPFv3 neighbor detail information
                                	**type**\: list of  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.neighbor_detail = YList()
                                    self.neighbor_detail.parent = self
                                    self.neighbor_detail.name = 'neighbor_detail'


                                class NeighborDetail(object):
                                    """
                                    OSPFv3 neighbor detail information
                                    
                                    .. attribute:: interface_name
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_neighbor_sham_link
                                    
                                    	If true, neighbor is on a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_virtual_link
                                    
                                    	If true, neighbor is on a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: neighbor_address
                                    
                                    	Neighbor ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: neighbor_address_xr
                                    
                                    	Neighbor IP Address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: neighbor_bfd_info
                                    
                                    	Neighbor BFD information
                                    	**type**\:  :py:class:`NeighborBfdInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborBfdInfo>`
                                    
                                    .. attribute:: neighbor_dead_timer
                                    
                                    	Time until neighbor's dead timer expires (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_designated_router
                                    
                                    	Designated router 
                                    	**type**\:  str
                                    
                                    	**range:** 0..9
                                    
                                    .. attribute:: neighbor_detail
                                    
                                    	Detailed OSPFv3 neighbor information 
                                    	**type**\:  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail>`
                                    
                                    .. attribute:: neighbor_dr_priority
                                    
                                    	Neighbor's DR priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: neighbor_interface_id
                                    
                                    	Neighbor interface ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_sham_link_id
                                    
                                    	Neighbor sham link id 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_state
                                    
                                    	Neighbor's state
                                    	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                                    
                                    .. attribute:: neighbor_up_time
                                    
                                    	Amount of time since the adjacency is up (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_virtual_link_id
                                    
                                    	Neighbor virtual link id 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.is_neighbor_sham_link = None
                                        self.is_neighbor_virtual_link = None
                                        self.neighbor_address = None
                                        self.neighbor_address_xr = None
                                        self.neighbor_bfd_info = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborBfdInfo()
                                        self.neighbor_bfd_info.parent = self
                                        self.neighbor_dead_timer = None
                                        self.neighbor_designated_router = None
                                        self.neighbor_detail = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail()
                                        self.neighbor_detail.parent = self
                                        self.neighbor_dr_priority = None
                                        self.neighbor_interface_id = None
                                        self.neighbor_sham_link_id = None
                                        self.neighbor_state = None
                                        self.neighbor_up_time = None
                                        self.neighbor_virtual_link_id = None


                                    class NeighborDetail(object):
                                        """
                                        Detailed OSPFv3 neighbor information 
                                        
                                        .. attribute:: interface_type
                                        
                                        	Interface type
                                        	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                        
                                        .. attribute:: is_neighbor_filtered
                                        
                                        	If true, filter outgoing LSAs 
                                        	**type**\:  bool
                                        
                                        .. attribute:: neighbor_backup_designated_router_address
                                        
                                        	Address of backup designated router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: neighbor_cost
                                        
                                        	Cost of path to this neighbor 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: neighbor_designated_router_address
                                        
                                        	Address of designated router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: neighbor_ignore_timer
                                        
                                        	Remaining time when ignore timer is running 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: neighbor_option
                                        
                                        	 This is bitmask of neighbor's option field received 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: neighbor_retransmission
                                        
                                        	Retransmission information with this neighbor
                                        	**type**\:  :py:class:`NeighborRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail.NeighborRetransmission>`
                                        
                                        .. attribute:: next_poll_interval
                                        
                                        	For NBMA networks, amount of time remaining in seconds before the next poll interval expires and Hello is sent (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: pending_events
                                        
                                        	Number of pending events 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: poll_interval
                                        
                                        	Poll interval (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_changes
                                        
                                        	Number of state changes 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_type = None
                                            self.is_neighbor_filtered = None
                                            self.neighbor_backup_designated_router_address = None
                                            self.neighbor_cost = None
                                            self.neighbor_designated_router_address = None
                                            self.neighbor_ignore_timer = None
                                            self.neighbor_option = None
                                            self.neighbor_retransmission = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail.NeighborRetransmission()
                                            self.neighbor_retransmission.parent = self
                                            self.next_poll_interval = None
                                            self.pending_events = None
                                            self.poll_interval = None
                                            self.state_changes = None


                                        class NeighborRetransmission(object):
                                            """
                                            Retransmission information with this neighbor
                                            
                                            .. attribute:: area_first_flood
                                            
                                            	First flood item for area scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: area_first_flood_index
                                            
                                            	Index of the first flood item for area scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: area_flood_index
                                            
                                            	Area scope LSA's flood index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: area_next_flood
                                            
                                            	Next flood item for area scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: area_next_flood_index
                                            
                                            	Index of next flood item for Area scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_first_flood
                                            
                                            	First flood item for AS scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_first_flood_index
                                            
                                            	Index for first flood item for AS scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_flood_index
                                            
                                            	AS scope LSA's flood index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_next_flood
                                            
                                            	Next flood item for AS scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_next_flood_index
                                            
                                            	Index of next flood item for AS scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: database_descriptor_retransmissions
                                            
                                            	Number of database descriptor retransmissions during last exchange
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: last_retransmission_length
                                            
                                            	Number of LSAs sent in last retransmission
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: last_retransmission_time
                                            
                                            	Last retransmission scan time (ms)
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_first_flood
                                            
                                            	Link first flood information 
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_first_flood_index
                                            
                                            	Link first flood information index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_flood_index
                                            
                                            	Link flood index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_next_flood
                                            
                                            	Link next flood information 
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_next_flood_index
                                            
                                            	Link next flood information index 
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: lsa_retransmission_timer
                                            
                                            	Time until next LSA retransmission (ms)
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: maximum_retransmission_length
                                            
                                            	Maximum number of LSAs sent in a retransmission
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: maximum_retransmission_time
                                            
                                            	Maximum retransmission scan time (ms)
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: neighbor_retransmissions
                                            
                                            	Number of neighbor retransmissions 
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: retransmissions
                                            
                                            	Number of retransmissions for this neighbor
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ipv6-ospfv3-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.area_first_flood = None
                                                self.area_first_flood_index = None
                                                self.area_flood_index = None
                                                self.area_next_flood = None
                                                self.area_next_flood_index = None
                                                self.as_first_flood = None
                                                self.as_first_flood_index = None
                                                self.as_flood_index = None
                                                self.as_next_flood = None
                                                self.as_next_flood_index = None
                                                self.database_descriptor_retransmissions = None
                                                self.last_retransmission_length = None
                                                self.last_retransmission_time = None
                                                self.link_first_flood = None
                                                self.link_first_flood_index = None
                                                self.link_flood_index = None
                                                self.link_next_flood = None
                                                self.link_next_flood_index = None
                                                self.lsa_retransmission_timer = None
                                                self.maximum_retransmission_length = None
                                                self.maximum_retransmission_time = None
                                                self.neighbor_retransmissions = None
                                                self.retransmissions = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-retransmission'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.area_first_flood is not None:
                                                    return True

                                                if self.area_first_flood_index is not None:
                                                    return True

                                                if self.area_flood_index is not None:
                                                    return True

                                                if self.area_next_flood is not None:
                                                    return True

                                                if self.area_next_flood_index is not None:
                                                    return True

                                                if self.as_first_flood is not None:
                                                    return True

                                                if self.as_first_flood_index is not None:
                                                    return True

                                                if self.as_flood_index is not None:
                                                    return True

                                                if self.as_next_flood is not None:
                                                    return True

                                                if self.as_next_flood_index is not None:
                                                    return True

                                                if self.database_descriptor_retransmissions is not None:
                                                    return True

                                                if self.last_retransmission_length is not None:
                                                    return True

                                                if self.last_retransmission_time is not None:
                                                    return True

                                                if self.link_first_flood is not None:
                                                    return True

                                                if self.link_first_flood_index is not None:
                                                    return True

                                                if self.link_flood_index is not None:
                                                    return True

                                                if self.link_next_flood is not None:
                                                    return True

                                                if self.link_next_flood_index is not None:
                                                    return True

                                                if self.lsa_retransmission_timer is not None:
                                                    return True

                                                if self.maximum_retransmission_length is not None:
                                                    return True

                                                if self.maximum_retransmission_time is not None:
                                                    return True

                                                if self.neighbor_retransmissions is not None:
                                                    return True

                                                if self.retransmissions is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail.NeighborRetransmission']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_type is not None:
                                                return True

                                            if self.is_neighbor_filtered is not None:
                                                return True

                                            if self.neighbor_backup_designated_router_address is not None:
                                                return True

                                            if self.neighbor_cost is not None:
                                                return True

                                            if self.neighbor_designated_router_address is not None:
                                                return True

                                            if self.neighbor_ignore_timer is not None:
                                                return True

                                            if self.neighbor_option is not None:
                                                return True

                                            if self.neighbor_retransmission is not None and self.neighbor_retransmission._has_data():
                                                return True

                                            if self.next_poll_interval is not None:
                                                return True

                                            if self.pending_events is not None:
                                                return True

                                            if self.poll_interval is not None:
                                                return True

                                            if self.state_changes is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail']['meta_info']


                                    class NeighborBfdInfo(object):
                                        """
                                        Neighbor BFD information
                                        
                                        .. attribute:: bfd_intf_enable_mode
                                        
                                        	BFD enable mode \- Default/Strict
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bfd_status_flag
                                        
                                        	Status of the BFD Session
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.bfd_intf_enable_mode = None
                                            self.bfd_status_flag = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-bfd-info'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.bfd_intf_enable_mode is not None:
                                                return True

                                            if self.bfd_status_flag is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborBfdInfo']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.is_neighbor_sham_link is not None:
                                            return True

                                        if self.is_neighbor_virtual_link is not None:
                                            return True

                                        if self.neighbor_address is not None:
                                            return True

                                        if self.neighbor_address_xr is not None:
                                            return True

                                        if self.neighbor_bfd_info is not None and self.neighbor_bfd_info._has_data():
                                            return True

                                        if self.neighbor_dead_timer is not None:
                                            return True

                                        if self.neighbor_designated_router is not None:
                                            return True

                                        if self.neighbor_detail is not None and self.neighbor_detail._has_data():
                                            return True

                                        if self.neighbor_dr_priority is not None:
                                            return True

                                        if self.neighbor_interface_id is not None:
                                            return True

                                        if self.neighbor_sham_link_id is not None:
                                            return True

                                        if self.neighbor_state is not None:
                                            return True

                                        if self.neighbor_up_time is not None:
                                            return True

                                        if self.neighbor_virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable.NeighborDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail-table'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.neighbor_detail is not None:
                                        for child_ref in self.neighbor_detail:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborDetailTable']['meta_info']


                            class InterfaceBriefTable(object):
                                """
                                OSPFv3 interface brief information table for
                                an area
                                
                                .. attribute:: interface_brief
                                
                                	Interface brief information
                                	**type**\: list of  :py:class:`InterfaceBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceBriefTable.InterfaceBrief>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_brief = YList()
                                    self.interface_brief.parent = self
                                    self.interface_brief.name = 'interface_brief'


                                class InterfaceBrief(object):
                                    """
                                    Interface brief information
                                    
                                    .. attribute:: interface_name  <key>
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: interface_address
                                    
                                    	Interface IP address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_adjacent_neighbors
                                    
                                    	Total number of adjacent neighbors
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: interface_link_cost
                                    
                                    	Interface link cost
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: interface_neighbors
                                    
                                    	Total number of neighbors 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: network_type
                                    
                                    	Network type
                                    	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                    
                                    .. attribute:: ospf_interface_state
                                    
                                    	Interface OSPF state
                                    	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.interface_address = None
                                        self.interface_adjacent_neighbors = None
                                        self.interface_link_cost = None
                                        self.interface_neighbors = None
                                        self.network_type = None
                                        self.ospf_interface_state = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.interface_name is None:
                                            raise YPYModelError('Key property interface_name is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-brief[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.interface_address is not None:
                                            return True

                                        if self.interface_adjacent_neighbors is not None:
                                            return True

                                        if self.interface_link_cost is not None:
                                            return True

                                        if self.interface_neighbors is not None:
                                            return True

                                        if self.network_type is not None:
                                            return True

                                        if self.ospf_interface_state is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceBriefTable.InterfaceBrief']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-brief-table'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_brief is not None:
                                        for child_ref in self.interface_brief:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceBriefTable']['meta_info']


                            class RequestListTable(object):
                                """
                                OSPFv3 request list information in an area
                                
                                .. attribute:: request
                                
                                	OSPFv3 request list information
                                	**type**\: list of  :py:class:`Request <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RequestListTable.Request>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.request = YList()
                                    self.request.parent = self
                                    self.request.name = 'request'


                                class Request(object):
                                    """
                                    OSPFv3 request list information
                                    
                                    .. attribute:: interface_name
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_request_sham_link
                                    
                                    	If true, sham link is requested 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_request_virtual_link
                                    
                                    	If true, virtual link is requested 
                                    	**type**\:  bool
                                    
                                    .. attribute:: neighbor_address
                                    
                                    	Neighbor address
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: request
                                    
                                    	List of request list entries
                                    	**type**\: list of  :py:class:`Request <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RequestListTable.Request.Request>`
                                    
                                    .. attribute:: request_neighbor_address
                                    
                                    	Neighbor IP address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: request_sham_link_id
                                    
                                    	Request sham link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: request_virtual_link_id
                                    
                                    	Request virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.is_request_sham_link = None
                                        self.is_request_virtual_link = None
                                        self.neighbor_address = None
                                        self.request = YList()
                                        self.request.parent = self
                                        self.request.name = 'request'
                                        self.request_neighbor_address = None
                                        self.request_sham_link_id = None
                                        self.request_virtual_link_id = None


                                    class Request(object):
                                        """
                                        List of request list entries
                                        
                                        .. attribute:: header_advertising_router
                                        
                                        	Router ID of the advertising router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_age
                                        
                                        	Age of the LSA (seconds)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: header_lsa_id
                                        
                                        	LSA ID
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_type
                                        
                                        	LSA type
                                        	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                        
                                        .. attribute:: header_sequence_number
                                        
                                        	Current LSA sequence number
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.header_advertising_router = None
                                            self.header_lsa_age = None
                                            self.header_lsa_id = None
                                            self.header_lsa_type = None
                                            self.header_sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.header_advertising_router is not None:
                                                return True

                                            if self.header_lsa_age is not None:
                                                return True

                                            if self.header_lsa_id is not None:
                                                return True

                                            if self.header_lsa_type is not None:
                                                return True

                                            if self.header_sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RequestListTable.Request.Request']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.is_request_sham_link is not None:
                                            return True

                                        if self.is_request_virtual_link is not None:
                                            return True

                                        if self.neighbor_address is not None:
                                            return True

                                        if self.request is not None:
                                            for child_ref in self.request:
                                                if child_ref._has_data():
                                                    return True

                                        if self.request_neighbor_address is not None:
                                            return True

                                        if self.request_sham_link_id is not None:
                                            return True

                                        if self.request_virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RequestListTable.Request']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request-list-table'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.request is not None:
                                        for child_ref in self.request:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RequestListTable']['meta_info']


                            class NeighborTable(object):
                                """
                                OSPFv3 neighbor information table
                                
                                .. attribute:: neighbor
                                
                                	OSPFv3 neighbor detail information
                                	**type**\: list of  :py:class:`Neighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.neighbor = YList()
                                    self.neighbor.parent = self
                                    self.neighbor.name = 'neighbor'


                                class Neighbor(object):
                                    """
                                    OSPFv3 neighbor detail information
                                    
                                    .. attribute:: interface_name
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_neighbor_sham_link
                                    
                                    	If true, neighbor is on a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_virtual_link
                                    
                                    	If true, neighbor is on a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: neighbor_address
                                    
                                    	Neighbor ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: neighbor_address_xr
                                    
                                    	Neighbor IP Address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: neighbor_bfd_info
                                    
                                    	Neighbor BFD information
                                    	**type**\:  :py:class:`NeighborBfdInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborBfdInfo>`
                                    
                                    .. attribute:: neighbor_dead_timer
                                    
                                    	Time until neighbor's dead timer expires (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_designated_router
                                    
                                    	Designated router 
                                    	**type**\:  str
                                    
                                    	**range:** 0..9
                                    
                                    .. attribute:: neighbor_detail
                                    
                                    	Detailed OSPFv3 neighbor information 
                                    	**type**\:  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail>`
                                    
                                    .. attribute:: neighbor_dr_priority
                                    
                                    	Neighbor's DR priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: neighbor_interface_id
                                    
                                    	Neighbor interface ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_sham_link_id
                                    
                                    	Neighbor sham link id 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_state
                                    
                                    	Neighbor's state
                                    	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                                    
                                    .. attribute:: neighbor_up_time
                                    
                                    	Amount of time since the adjacency is up (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_virtual_link_id
                                    
                                    	Neighbor virtual link id 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.is_neighbor_sham_link = None
                                        self.is_neighbor_virtual_link = None
                                        self.neighbor_address = None
                                        self.neighbor_address_xr = None
                                        self.neighbor_bfd_info = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborBfdInfo()
                                        self.neighbor_bfd_info.parent = self
                                        self.neighbor_dead_timer = None
                                        self.neighbor_designated_router = None
                                        self.neighbor_detail = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail()
                                        self.neighbor_detail.parent = self
                                        self.neighbor_dr_priority = None
                                        self.neighbor_interface_id = None
                                        self.neighbor_sham_link_id = None
                                        self.neighbor_state = None
                                        self.neighbor_up_time = None
                                        self.neighbor_virtual_link_id = None


                                    class NeighborDetail(object):
                                        """
                                        Detailed OSPFv3 neighbor information 
                                        
                                        .. attribute:: interface_type
                                        
                                        	Interface type
                                        	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                        
                                        .. attribute:: is_neighbor_filtered
                                        
                                        	If true, filter outgoing LSAs 
                                        	**type**\:  bool
                                        
                                        .. attribute:: neighbor_backup_designated_router_address
                                        
                                        	Address of backup designated router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: neighbor_cost
                                        
                                        	Cost of path to this neighbor 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: neighbor_designated_router_address
                                        
                                        	Address of designated router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: neighbor_ignore_timer
                                        
                                        	Remaining time when ignore timer is running 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: neighbor_option
                                        
                                        	 This is bitmask of neighbor's option field received 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: neighbor_retransmission
                                        
                                        	Retransmission information with this neighbor
                                        	**type**\:  :py:class:`NeighborRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail.NeighborRetransmission>`
                                        
                                        .. attribute:: next_poll_interval
                                        
                                        	For NBMA networks, amount of time remaining in seconds before the next poll interval expires and Hello is sent (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: pending_events
                                        
                                        	Number of pending events 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: poll_interval
                                        
                                        	Poll interval (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_changes
                                        
                                        	Number of state changes 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_type = None
                                            self.is_neighbor_filtered = None
                                            self.neighbor_backup_designated_router_address = None
                                            self.neighbor_cost = None
                                            self.neighbor_designated_router_address = None
                                            self.neighbor_ignore_timer = None
                                            self.neighbor_option = None
                                            self.neighbor_retransmission = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail.NeighborRetransmission()
                                            self.neighbor_retransmission.parent = self
                                            self.next_poll_interval = None
                                            self.pending_events = None
                                            self.poll_interval = None
                                            self.state_changes = None


                                        class NeighborRetransmission(object):
                                            """
                                            Retransmission information with this neighbor
                                            
                                            .. attribute:: area_first_flood
                                            
                                            	First flood item for area scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: area_first_flood_index
                                            
                                            	Index of the first flood item for area scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: area_flood_index
                                            
                                            	Area scope LSA's flood index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: area_next_flood
                                            
                                            	Next flood item for area scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: area_next_flood_index
                                            
                                            	Index of next flood item for Area scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_first_flood
                                            
                                            	First flood item for AS scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_first_flood_index
                                            
                                            	Index for first flood item for AS scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_flood_index
                                            
                                            	AS scope LSA's flood index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_next_flood
                                            
                                            	Next flood item for AS scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: as_next_flood_index
                                            
                                            	Index of next flood item for AS scope LSAs
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: database_descriptor_retransmissions
                                            
                                            	Number of database descriptor retransmissions during last exchange
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: last_retransmission_length
                                            
                                            	Number of LSAs sent in last retransmission
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: last_retransmission_time
                                            
                                            	Last retransmission scan time (ms)
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_first_flood
                                            
                                            	Link first flood information 
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_first_flood_index
                                            
                                            	Link first flood information index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_flood_index
                                            
                                            	Link flood index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_next_flood
                                            
                                            	Link next flood information 
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: link_next_flood_index
                                            
                                            	Link next flood information index 
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: lsa_retransmission_timer
                                            
                                            	Time until next LSA retransmission (ms)
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: maximum_retransmission_length
                                            
                                            	Maximum number of LSAs sent in a retransmission
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: maximum_retransmission_time
                                            
                                            	Maximum retransmission scan time (ms)
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: neighbor_retransmissions
                                            
                                            	Number of neighbor retransmissions 
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: retransmissions
                                            
                                            	Number of retransmissions for this neighbor
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ipv6-ospfv3-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.area_first_flood = None
                                                self.area_first_flood_index = None
                                                self.area_flood_index = None
                                                self.area_next_flood = None
                                                self.area_next_flood_index = None
                                                self.as_first_flood = None
                                                self.as_first_flood_index = None
                                                self.as_flood_index = None
                                                self.as_next_flood = None
                                                self.as_next_flood_index = None
                                                self.database_descriptor_retransmissions = None
                                                self.last_retransmission_length = None
                                                self.last_retransmission_time = None
                                                self.link_first_flood = None
                                                self.link_first_flood_index = None
                                                self.link_flood_index = None
                                                self.link_next_flood = None
                                                self.link_next_flood_index = None
                                                self.lsa_retransmission_timer = None
                                                self.maximum_retransmission_length = None
                                                self.maximum_retransmission_time = None
                                                self.neighbor_retransmissions = None
                                                self.retransmissions = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-retransmission'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.area_first_flood is not None:
                                                    return True

                                                if self.area_first_flood_index is not None:
                                                    return True

                                                if self.area_flood_index is not None:
                                                    return True

                                                if self.area_next_flood is not None:
                                                    return True

                                                if self.area_next_flood_index is not None:
                                                    return True

                                                if self.as_first_flood is not None:
                                                    return True

                                                if self.as_first_flood_index is not None:
                                                    return True

                                                if self.as_flood_index is not None:
                                                    return True

                                                if self.as_next_flood is not None:
                                                    return True

                                                if self.as_next_flood_index is not None:
                                                    return True

                                                if self.database_descriptor_retransmissions is not None:
                                                    return True

                                                if self.last_retransmission_length is not None:
                                                    return True

                                                if self.last_retransmission_time is not None:
                                                    return True

                                                if self.link_first_flood is not None:
                                                    return True

                                                if self.link_first_flood_index is not None:
                                                    return True

                                                if self.link_flood_index is not None:
                                                    return True

                                                if self.link_next_flood is not None:
                                                    return True

                                                if self.link_next_flood_index is not None:
                                                    return True

                                                if self.lsa_retransmission_timer is not None:
                                                    return True

                                                if self.maximum_retransmission_length is not None:
                                                    return True

                                                if self.maximum_retransmission_time is not None:
                                                    return True

                                                if self.neighbor_retransmissions is not None:
                                                    return True

                                                if self.retransmissions is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail.NeighborRetransmission']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_type is not None:
                                                return True

                                            if self.is_neighbor_filtered is not None:
                                                return True

                                            if self.neighbor_backup_designated_router_address is not None:
                                                return True

                                            if self.neighbor_cost is not None:
                                                return True

                                            if self.neighbor_designated_router_address is not None:
                                                return True

                                            if self.neighbor_ignore_timer is not None:
                                                return True

                                            if self.neighbor_option is not None:
                                                return True

                                            if self.neighbor_retransmission is not None and self.neighbor_retransmission._has_data():
                                                return True

                                            if self.next_poll_interval is not None:
                                                return True

                                            if self.pending_events is not None:
                                                return True

                                            if self.poll_interval is not None:
                                                return True

                                            if self.state_changes is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail']['meta_info']


                                    class NeighborBfdInfo(object):
                                        """
                                        Neighbor BFD information
                                        
                                        .. attribute:: bfd_intf_enable_mode
                                        
                                        	BFD enable mode \- Default/Strict
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bfd_status_flag
                                        
                                        	Status of the BFD Session
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.bfd_intf_enable_mode = None
                                            self.bfd_status_flag = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-bfd-info'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.bfd_intf_enable_mode is not None:
                                                return True

                                            if self.bfd_status_flag is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor.NeighborBfdInfo']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.is_neighbor_sham_link is not None:
                                            return True

                                        if self.is_neighbor_virtual_link is not None:
                                            return True

                                        if self.neighbor_address is not None:
                                            return True

                                        if self.neighbor_address_xr is not None:
                                            return True

                                        if self.neighbor_bfd_info is not None and self.neighbor_bfd_info._has_data():
                                            return True

                                        if self.neighbor_dead_timer is not None:
                                            return True

                                        if self.neighbor_designated_router is not None:
                                            return True

                                        if self.neighbor_detail is not None and self.neighbor_detail._has_data():
                                            return True

                                        if self.neighbor_dr_priority is not None:
                                            return True

                                        if self.neighbor_interface_id is not None:
                                            return True

                                        if self.neighbor_sham_link_id is not None:
                                            return True

                                        if self.neighbor_state is not None:
                                            return True

                                        if self.neighbor_up_time is not None:
                                            return True

                                        if self.neighbor_virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable.Neighbor']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-table'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.neighbor is not None:
                                        for child_ref in self.neighbor:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.NeighborTable']['meta_info']


                            class InterfaceTable(object):
                                """
                                OSPFv3 interface information table for an area
                                
                                .. attribute:: interface
                                
                                	OSPFv3 interface information
                                	**type**\: list of  :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface = YList()
                                    self.interface.parent = self
                                    self.interface.name = 'interface'


                                class Interface(object):
                                    """
                                    OSPFv3 interface information
                                    
                                    .. attribute:: interface_name  <key>
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: active_interface
                                    
                                    	Active interface details 
                                    	**type**\:  :py:class:`ActiveInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface.ActiveInterface>`
                                    
                                    .. attribute:: adjacent_neighbor
                                    
                                    	Number of adjacent neighbors
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: backup_designated_router_address
                                    
                                    	Backup designated router interface address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: backup_designated_router_id
                                    
                                    	Backup designated router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: configured_ldp_sync
                                    
                                    	If true, configured as LDP sync
                                    	**type**\:  bool
                                    
                                    .. attribute:: dead_interval
                                    
                                    	Configured dead interval (s) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: designated_router_address
                                    
                                    	Designated router interface address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: designated_router_id
                                    
                                    	Designated router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: hello_interval
                                    
                                    	Configured hello interval (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_address
                                    
                                    	Interface IPv6 address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_authentication_spi
                                    
                                    	Interface authentication spi 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_authentication_transmit
                                    
                                    	Interface authentication transmit 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_bfd
                                    
                                    	BFD information 
                                    	**type**\:  :py:class:`InterfaceBfd <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface.InterfaceBfd>`
                                    
                                    .. attribute:: interface_dc_bitless_ls_as
                                    
                                    	Number of LSAs with demand circuit bit not set for the area in which the interface is running
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_encrypted_authentication_transmitted
                                    
                                    	Interface encrypted authentication transmitted 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_encryption_spi
                                    
                                    	Interface encryption spi
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_encryption_transmitted
                                    
                                    	Interface encryption transmitted 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_ldp_sync
                                    
                                    	If true, interface LDP sync is achieved
                                    	**type**\:  bool
                                    
                                    .. attribute:: interface_link_cost
                                    
                                    	Interface link cost
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: interface_neighbor
                                    
                                    	Information for neighbors on the interface
                                    	**type**\: list of  :py:class:`InterfaceNeighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface.InterfaceNeighbor>`
                                    
                                    .. attribute:: interface_number
                                    
                                    	Interface number 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_priority
                                    
                                    	Interface priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: interface_references
                                    
                                    	Interface reference count 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_retransmission_interval
                                    
                                    	Configured retransmit interval (s) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_router_id
                                    
                                    	Interface router ID 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_state
                                    
                                    	Interface state
                                    	**type**\:  :py:class:`ImStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.ImStateEnumEnum>`
                                    
                                    .. attribute:: is_demand_circuit_configured
                                    
                                    	If true, configured as demand circuit 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_designated_router
                                    
                                    	If true, designated router
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_interface_demand_circuit
                                    
                                    	If true, interface running as demand circuit
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_interface_encryption_enabled
                                    
                                    	If true, interface encryption is enabled 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_interface_flood_reduction
                                    
                                    	If true, interface flood reduction is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_interface_ip_security_active
                                    
                                    	If true, interface IP security is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_interface_ip_security_required
                                    
                                    	If true, interface IP security is required 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_interface_line_up
                                    
                                    	If true, line protocol is up 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_interface_lsa_filtered
                                    
                                    	Filter is configured for out going LSAs 
                                    	**type**\:  bool
                                    
                                    .. attribute:: network_lsa_flush_timer
                                    
                                    	The amount of time in seconds before flush timer for old network LSA expires 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: network_type
                                    
                                    	Network type
                                    	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                    
                                    .. attribute:: next_hello_time
                                    
                                    	Time until next Hello (s) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ospf_interface_state
                                    
                                    	Interface state
                                    	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                                    
                                    .. attribute:: transmission_delay
                                    
                                    	Interface transmission delay (sec)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: wait_interval
                                    
                                    	Configured wait interval (s) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.active_interface = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface.ActiveInterface()
                                        self.active_interface.parent = self
                                        self.adjacent_neighbor = None
                                        self.backup_designated_router_address = None
                                        self.backup_designated_router_id = None
                                        self.configured_ldp_sync = None
                                        self.dead_interval = None
                                        self.designated_router_address = None
                                        self.designated_router_id = None
                                        self.hello_interval = None
                                        self.interface_address = None
                                        self.interface_authentication_spi = None
                                        self.interface_authentication_transmit = None
                                        self.interface_bfd = Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface.InterfaceBfd()
                                        self.interface_bfd.parent = self
                                        self.interface_dc_bitless_ls_as = None
                                        self.interface_encrypted_authentication_transmitted = None
                                        self.interface_encryption_spi = None
                                        self.interface_encryption_transmitted = None
                                        self.interface_ldp_sync = None
                                        self.interface_link_cost = None
                                        self.interface_neighbor = YList()
                                        self.interface_neighbor.parent = self
                                        self.interface_neighbor.name = 'interface_neighbor'
                                        self.interface_number = None
                                        self.interface_priority = None
                                        self.interface_references = None
                                        self.interface_retransmission_interval = None
                                        self.interface_router_id = None
                                        self.interface_state = None
                                        self.is_demand_circuit_configured = None
                                        self.is_designated_router = None
                                        self.is_interface_demand_circuit = None
                                        self.is_interface_encryption_enabled = None
                                        self.is_interface_flood_reduction = None
                                        self.is_interface_ip_security_active = None
                                        self.is_interface_ip_security_required = None
                                        self.is_interface_line_up = None
                                        self.is_interface_lsa_filtered = None
                                        self.network_lsa_flush_timer = None
                                        self.network_type = None
                                        self.next_hello_time = None
                                        self.ospf_interface_state = None
                                        self.transmission_delay = None
                                        self.wait_interval = None


                                    class ActiveInterface(object):
                                        """
                                        Active interface details 
                                        
                                        .. attribute:: flood_queue_length
                                        
                                        	Flood queue length
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: flood_scan_length
                                        
                                        	Last flood scan length 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_area_flood_index
                                        
                                        	Area scope LSAs flood index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_area_next_flood
                                        
                                        	Next LSA to flood (Area scope)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_area_next_flood_index
                                        
                                        	Index of next LSA to flood (Area scope) 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_as_flood_index
                                        
                                        	AS scope LSAs flood index 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_as_next_flood
                                        
                                        	Next LSA to flood (AS scope)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_as_next_flood_index
                                        
                                        	Index of next LSA to flood (AS scope)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_flood_pacing_timer
                                        
                                        	Time until next flood pacing timer (ms) 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_link_flood_index
                                        
                                        	Interface flood link index 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_link_next_flood
                                        
                                        	Interface link next flood information 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_link_next_index
                                        
                                        	Interface link next information index 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_neighbors
                                        
                                        	Total number of neighbors 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: last_flood_time
                                        
                                        	Last flood scan time (ms)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: maximum_flood_length
                                        
                                        	Maximum flood length 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: maximum_flood_time
                                        
                                        	Maximum flood time (ms) 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: suppressed_hellos
                                        
                                        	Number of neighbors for which hellos are suppressed 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: wait_time
                                        
                                        	Wait time for DR/BDR selection (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.flood_queue_length = None
                                            self.flood_scan_length = None
                                            self.interface_area_flood_index = None
                                            self.interface_area_next_flood = None
                                            self.interface_area_next_flood_index = None
                                            self.interface_as_flood_index = None
                                            self.interface_as_next_flood = None
                                            self.interface_as_next_flood_index = None
                                            self.interface_flood_pacing_timer = None
                                            self.interface_link_flood_index = None
                                            self.interface_link_next_flood = None
                                            self.interface_link_next_index = None
                                            self.interface_neighbors = None
                                            self.last_flood_time = None
                                            self.maximum_flood_length = None
                                            self.maximum_flood_time = None
                                            self.suppressed_hellos = None
                                            self.wait_time = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:active-interface'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.flood_queue_length is not None:
                                                return True

                                            if self.flood_scan_length is not None:
                                                return True

                                            if self.interface_area_flood_index is not None:
                                                return True

                                            if self.interface_area_next_flood is not None:
                                                return True

                                            if self.interface_area_next_flood_index is not None:
                                                return True

                                            if self.interface_as_flood_index is not None:
                                                return True

                                            if self.interface_as_next_flood is not None:
                                                return True

                                            if self.interface_as_next_flood_index is not None:
                                                return True

                                            if self.interface_flood_pacing_timer is not None:
                                                return True

                                            if self.interface_link_flood_index is not None:
                                                return True

                                            if self.interface_link_next_flood is not None:
                                                return True

                                            if self.interface_link_next_index is not None:
                                                return True

                                            if self.interface_neighbors is not None:
                                                return True

                                            if self.last_flood_time is not None:
                                                return True

                                            if self.maximum_flood_length is not None:
                                                return True

                                            if self.maximum_flood_time is not None:
                                                return True

                                            if self.suppressed_hellos is not None:
                                                return True

                                            if self.wait_time is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface.ActiveInterface']['meta_info']


                                    class InterfaceBfd(object):
                                        """
                                        BFD information 
                                        
                                        .. attribute:: bfd_detection_multiplier
                                        
                                        	BFD detection multiplier 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bfd_interval
                                        
                                        	BFD interval (ms) 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bfd_intf_enable_mode
                                        
                                        	BFD Enable Mode on the interface \- Default/Strict
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.bfd_detection_multiplier = None
                                            self.bfd_interval = None
                                            self.bfd_intf_enable_mode = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-bfd'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.bfd_detection_multiplier is not None:
                                                return True

                                            if self.bfd_interval is not None:
                                                return True

                                            if self.bfd_intf_enable_mode is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface.InterfaceBfd']['meta_info']


                                    class InterfaceNeighbor(object):
                                        """
                                        Information for neighbors on the interface
                                        
                                        .. attribute:: interface_neighbor_cost
                                        
                                        	Cost of link to neighbor
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: interface_neighbor_id
                                        
                                        	Neighbor router ID 
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: is_hello_suppressed
                                        
                                        	If true, hello is suppressed 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_bdr
                                        
                                        	If true, backup designated router is found 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_dr
                                        
                                        	If true, designated router is found 
                                        	**type**\:  bool
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_neighbor_cost = None
                                            self.interface_neighbor_id = None
                                            self.is_hello_suppressed = None
                                            self.is_neighbor_bdr = None
                                            self.is_neighbor_dr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-neighbor'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_neighbor_cost is not None:
                                                return True

                                            if self.interface_neighbor_id is not None:
                                                return True

                                            if self.is_hello_suppressed is not None:
                                                return True

                                            if self.is_neighbor_bdr is not None:
                                                return True

                                            if self.is_neighbor_dr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface.InterfaceNeighbor']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.interface_name is None:
                                            raise YPYModelError('Key property interface_name is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.active_interface is not None and self.active_interface._has_data():
                                            return True

                                        if self.adjacent_neighbor is not None:
                                            return True

                                        if self.backup_designated_router_address is not None:
                                            return True

                                        if self.backup_designated_router_id is not None:
                                            return True

                                        if self.configured_ldp_sync is not None:
                                            return True

                                        if self.dead_interval is not None:
                                            return True

                                        if self.designated_router_address is not None:
                                            return True

                                        if self.designated_router_id is not None:
                                            return True

                                        if self.hello_interval is not None:
                                            return True

                                        if self.interface_address is not None:
                                            return True

                                        if self.interface_authentication_spi is not None:
                                            return True

                                        if self.interface_authentication_transmit is not None:
                                            return True

                                        if self.interface_bfd is not None and self.interface_bfd._has_data():
                                            return True

                                        if self.interface_dc_bitless_ls_as is not None:
                                            return True

                                        if self.interface_encrypted_authentication_transmitted is not None:
                                            return True

                                        if self.interface_encryption_spi is not None:
                                            return True

                                        if self.interface_encryption_transmitted is not None:
                                            return True

                                        if self.interface_ldp_sync is not None:
                                            return True

                                        if self.interface_link_cost is not None:
                                            return True

                                        if self.interface_neighbor is not None:
                                            for child_ref in self.interface_neighbor:
                                                if child_ref._has_data():
                                                    return True

                                        if self.interface_number is not None:
                                            return True

                                        if self.interface_priority is not None:
                                            return True

                                        if self.interface_references is not None:
                                            return True

                                        if self.interface_retransmission_interval is not None:
                                            return True

                                        if self.interface_router_id is not None:
                                            return True

                                        if self.interface_state is not None:
                                            return True

                                        if self.is_demand_circuit_configured is not None:
                                            return True

                                        if self.is_designated_router is not None:
                                            return True

                                        if self.is_interface_demand_circuit is not None:
                                            return True

                                        if self.is_interface_encryption_enabled is not None:
                                            return True

                                        if self.is_interface_flood_reduction is not None:
                                            return True

                                        if self.is_interface_ip_security_active is not None:
                                            return True

                                        if self.is_interface_ip_security_required is not None:
                                            return True

                                        if self.is_interface_line_up is not None:
                                            return True

                                        if self.is_interface_lsa_filtered is not None:
                                            return True

                                        if self.network_lsa_flush_timer is not None:
                                            return True

                                        if self.network_type is not None:
                                            return True

                                        if self.next_hello_time is not None:
                                            return True

                                        if self.ospf_interface_state is not None:
                                            return True

                                        if self.transmission_delay is not None:
                                            return True

                                        if self.wait_interval is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable.Interface']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-table'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface is not None:
                                        for child_ref in self.interface:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.InterfaceTable']['meta_info']


                            class FloodListTable(object):
                                """
                                OSPFv3 flood list information table for an
                                area
                                
                                .. attribute:: flood
                                
                                	OSPFv3 flood list information
                                	**type**\: list of  :py:class:`Flood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable.Flood>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.flood = YList()
                                    self.flood.parent = self
                                    self.flood.name = 'flood'


                                class Flood(object):
                                    """
                                    OSPFv3 flood list information
                                    
                                    .. attribute:: interface_name  <key>
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: area_flood
                                    
                                    	Area scope floodlist
                                    	**type**\: list of  :py:class:`AreaFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable.Flood.AreaFlood>`
                                    
                                    .. attribute:: as_flood
                                    
                                    	AS scope floodlist
                                    	**type**\: list of  :py:class:`AsFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable.Flood.AsFlood>`
                                    
                                    .. attribute:: link_flood
                                    
                                    	Link floodlist
                                    	**type**\: list of  :py:class:`LinkFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable.Flood.LinkFlood>`
                                    
                                    .. attribute:: ls_transmission_timer
                                    
                                    	Time until next LS transmission (ms) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: queue_length
                                    
                                    	Number of LSAs currently being flooded 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.area_flood = YList()
                                        self.area_flood.parent = self
                                        self.area_flood.name = 'area_flood'
                                        self.as_flood = YList()
                                        self.as_flood.parent = self
                                        self.as_flood.name = 'as_flood'
                                        self.link_flood = YList()
                                        self.link_flood.parent = self
                                        self.link_flood.name = 'link_flood'
                                        self.ls_transmission_timer = None
                                        self.queue_length = None


                                    class LinkFlood(object):
                                        """
                                        Link floodlist
                                        
                                        .. attribute:: header_advertising_router
                                        
                                        	Router ID of the advertising router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_age
                                        
                                        	Age of the LSA (seconds)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: header_lsa_id
                                        
                                        	LSA ID
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_type
                                        
                                        	LSA type
                                        	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                        
                                        .. attribute:: header_sequence_number
                                        
                                        	Current LSA sequence number
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.header_advertising_router = None
                                            self.header_lsa_age = None
                                            self.header_lsa_id = None
                                            self.header_lsa_type = None
                                            self.header_sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:link-flood'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.header_advertising_router is not None:
                                                return True

                                            if self.header_lsa_age is not None:
                                                return True

                                            if self.header_lsa_id is not None:
                                                return True

                                            if self.header_lsa_type is not None:
                                                return True

                                            if self.header_sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable.Flood.LinkFlood']['meta_info']


                                    class AreaFlood(object):
                                        """
                                        Area scope floodlist
                                        
                                        .. attribute:: header_advertising_router
                                        
                                        	Router ID of the advertising router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_age
                                        
                                        	Age of the LSA (seconds)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: header_lsa_id
                                        
                                        	LSA ID
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_type
                                        
                                        	LSA type
                                        	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                        
                                        .. attribute:: header_sequence_number
                                        
                                        	Current LSA sequence number
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.header_advertising_router = None
                                            self.header_lsa_age = None
                                            self.header_lsa_id = None
                                            self.header_lsa_type = None
                                            self.header_sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-flood'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.header_advertising_router is not None:
                                                return True

                                            if self.header_lsa_age is not None:
                                                return True

                                            if self.header_lsa_id is not None:
                                                return True

                                            if self.header_lsa_type is not None:
                                                return True

                                            if self.header_sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable.Flood.AreaFlood']['meta_info']


                                    class AsFlood(object):
                                        """
                                        AS scope floodlist
                                        
                                        .. attribute:: header_advertising_router
                                        
                                        	Router ID of the advertising router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_age
                                        
                                        	Age of the LSA (seconds)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: header_lsa_id
                                        
                                        	LSA ID
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_type
                                        
                                        	LSA type
                                        	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                        
                                        .. attribute:: header_sequence_number
                                        
                                        	Current LSA sequence number
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.header_advertising_router = None
                                            self.header_lsa_age = None
                                            self.header_lsa_id = None
                                            self.header_lsa_type = None
                                            self.header_sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:as-flood'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.header_advertising_router is not None:
                                                return True

                                            if self.header_lsa_age is not None:
                                                return True

                                            if self.header_lsa_id is not None:
                                                return True

                                            if self.header_lsa_type is not None:
                                                return True

                                            if self.header_sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable.Flood.AsFlood']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.interface_name is None:
                                            raise YPYModelError('Key property interface_name is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:flood[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.area_flood is not None:
                                            for child_ref in self.area_flood:
                                                if child_ref._has_data():
                                                    return True

                                        if self.as_flood is not None:
                                            for child_ref in self.as_flood:
                                                if child_ref._has_data():
                                                    return True

                                        if self.link_flood is not None:
                                            for child_ref in self.link_flood:
                                                if child_ref._has_data():
                                                    return True

                                        if self.ls_transmission_timer is not None:
                                            return True

                                        if self.queue_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable.Flood']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:flood-list-table'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.flood is not None:
                                        for child_ref in self.flood:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.FloodListTable']['meta_info']


                            class RetransmissionListTable(object):
                                """
                                OSPFv3 retransmission list information table
                                in an area
                                
                                .. attribute:: retransmission
                                
                                	OSPFv3 retransmission list information
                                	**type**\: list of  :py:class:`Retransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable.Retransmission>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.retransmission = YList()
                                    self.retransmission.parent = self
                                    self.retransmission.name = 'retransmission'


                                class Retransmission(object):
                                    """
                                    OSPFv3 retransmission list information
                                    
                                    .. attribute:: interface_name
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_retransmission_sham_link
                                    
                                    	If true, sham link is retransmitted 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_retransmissionvirtual_link
                                    
                                    	If true, virtual link is retransmitted 
                                    	**type**\:  bool
                                    
                                    .. attribute:: neighbor_address
                                    
                                    	Neighbor address
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: retransmission_area_db
                                    
                                    	List of area scope entries
                                    	**type**\: list of  :py:class:`RetransmissionAreaDb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionAreaDb>`
                                    
                                    .. attribute:: retransmission_asdb
                                    
                                    	List of AS scope entries
                                    	**type**\: list of  :py:class:`RetransmissionAsdb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionAsdb>`
                                    
                                    .. attribute:: retransmission_length
                                    
                                    	Retransmission queue length
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: retransmission_neighbor_address
                                    
                                    	Neighbor IP address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: retransmission_sham_link_id
                                    
                                    	Retransmission sham link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: retransmission_timer
                                    
                                    	Amount of time remaining on retransmission timer (ms)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: retransmissionvirtual_link_db
                                    
                                    	List of virtual link scope entries 
                                    	**type**\: list of  :py:class:`RetransmissionvirtualLinkDb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionvirtualLinkDb>`
                                    
                                    .. attribute:: retransmissionvirtual_link_id
                                    
                                    	Retransmission virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.is_retransmission_sham_link = None
                                        self.is_retransmissionvirtual_link = None
                                        self.neighbor_address = None
                                        self.retransmission_area_db = YList()
                                        self.retransmission_area_db.parent = self
                                        self.retransmission_area_db.name = 'retransmission_area_db'
                                        self.retransmission_asdb = YList()
                                        self.retransmission_asdb.parent = self
                                        self.retransmission_asdb.name = 'retransmission_asdb'
                                        self.retransmission_length = None
                                        self.retransmission_neighbor_address = None
                                        self.retransmission_sham_link_id = None
                                        self.retransmission_timer = None
                                        self.retransmissionvirtual_link_db = YList()
                                        self.retransmissionvirtual_link_db.parent = self
                                        self.retransmissionvirtual_link_db.name = 'retransmissionvirtual_link_db'
                                        self.retransmissionvirtual_link_id = None


                                    class RetransmissionvirtualLinkDb(object):
                                        """
                                        List of virtual link scope entries 
                                        
                                        .. attribute:: header_advertising_router
                                        
                                        	Router ID of the advertising router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_age
                                        
                                        	Age of the LSA (seconds)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: header_lsa_id
                                        
                                        	LSA ID
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_type
                                        
                                        	LSA type
                                        	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                        
                                        .. attribute:: header_sequence_number
                                        
                                        	Current LSA sequence number
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.header_advertising_router = None
                                            self.header_lsa_age = None
                                            self.header_lsa_id = None
                                            self.header_lsa_type = None
                                            self.header_sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmissionvirtual-link-db'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.header_advertising_router is not None:
                                                return True

                                            if self.header_lsa_age is not None:
                                                return True

                                            if self.header_lsa_id is not None:
                                                return True

                                            if self.header_lsa_type is not None:
                                                return True

                                            if self.header_sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionvirtualLinkDb']['meta_info']


                                    class RetransmissionAreaDb(object):
                                        """
                                        List of area scope entries
                                        
                                        .. attribute:: header_advertising_router
                                        
                                        	Router ID of the advertising router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_age
                                        
                                        	Age of the LSA (seconds)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: header_lsa_id
                                        
                                        	LSA ID
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_type
                                        
                                        	LSA type
                                        	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                        
                                        .. attribute:: header_sequence_number
                                        
                                        	Current LSA sequence number
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.header_advertising_router = None
                                            self.header_lsa_age = None
                                            self.header_lsa_id = None
                                            self.header_lsa_type = None
                                            self.header_sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-area-db'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.header_advertising_router is not None:
                                                return True

                                            if self.header_lsa_age is not None:
                                                return True

                                            if self.header_lsa_id is not None:
                                                return True

                                            if self.header_lsa_type is not None:
                                                return True

                                            if self.header_sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionAreaDb']['meta_info']


                                    class RetransmissionAsdb(object):
                                        """
                                        List of AS scope entries
                                        
                                        .. attribute:: header_advertising_router
                                        
                                        	Router ID of the advertising router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_age
                                        
                                        	Age of the LSA (seconds)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: header_lsa_id
                                        
                                        	LSA ID
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: header_lsa_type
                                        
                                        	LSA type
                                        	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                        
                                        .. attribute:: header_sequence_number
                                        
                                        	Current LSA sequence number
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.header_advertising_router = None
                                            self.header_lsa_age = None
                                            self.header_lsa_id = None
                                            self.header_lsa_type = None
                                            self.header_sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-asdb'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.header_advertising_router is not None:
                                                return True

                                            if self.header_lsa_age is not None:
                                                return True

                                            if self.header_lsa_id is not None:
                                                return True

                                            if self.header_lsa_type is not None:
                                                return True

                                            if self.header_sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionAsdb']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.is_retransmission_sham_link is not None:
                                            return True

                                        if self.is_retransmissionvirtual_link is not None:
                                            return True

                                        if self.neighbor_address is not None:
                                            return True

                                        if self.retransmission_area_db is not None:
                                            for child_ref in self.retransmission_area_db:
                                                if child_ref._has_data():
                                                    return True

                                        if self.retransmission_asdb is not None:
                                            for child_ref in self.retransmission_asdb:
                                                if child_ref._has_data():
                                                    return True

                                        if self.retransmission_length is not None:
                                            return True

                                        if self.retransmission_neighbor_address is not None:
                                            return True

                                        if self.retransmission_sham_link_id is not None:
                                            return True

                                        if self.retransmission_timer is not None:
                                            return True

                                        if self.retransmissionvirtual_link_db is not None:
                                            for child_ref in self.retransmissionvirtual_link_db:
                                                if child_ref._has_data():
                                                    return True

                                        if self.retransmissionvirtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable.Retransmission']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-list-table'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.retransmission is not None:
                                        for child_ref in self.retransmission:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area.RetransmissionListTable']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.area_id is None:
                                    raise YPYModelError('Key property area_id is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_id is not None:
                                    return True

                                if self.flood_list_table is not None and self.flood_list_table._has_data():
                                    return True

                                if self.interface_brief_table is not None and self.interface_brief_table._has_data():
                                    return True

                                if self.interface_table is not None and self.interface_table._has_data():
                                    return True

                                if self.neighbor_detail_table is not None and self.neighbor_detail_table._has_data():
                                    return True

                                if self.neighbor_table is not None and self.neighbor_table._has_data():
                                    return True

                                if self.request_list_table is not None and self.request_list_table._has_data():
                                    return True

                                if self.retransmission_list_table is not None and self.retransmission_list_table._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas.Area']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:areas'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area is not None:
                                for child_ref in self.area:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Areas']['meta_info']


                    class InternalRoutes(object):
                        """
                        OSPFv3 internal route information table
                        
                        .. attribute:: internal_route
                        
                        	OSPFv3 internal route information
                        	**type**\: list of  :py:class:`InternalRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.internal_route = YList()
                            self.internal_route.parent = self
                            self.internal_route.name = 'internal_route'


                        class InternalRoute(object):
                            """
                            OSPFv3 internal route information
                            
                            .. attribute:: prefix
                            
                            	Route prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: route_area_id
                            
                            	Route area ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_path
                            
                            	List of paths to this route
                            	**type**\: list of  :py:class:`RoutePath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RoutePath>`
                            
                            .. attribute:: route_source
                            
                            	List of topology source information
                            	**type**\: list of  :py:class:`RouteSource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RouteSource>`
                            
                            .. attribute:: route_topology
                            
                            	Common Route topology information
                            	**type**\:  :py:class:`RouteTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RouteTopology>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.route_area_id = None
                                self.route_path = YList()
                                self.route_path.parent = self
                                self.route_path.name = 'route_path'
                                self.route_source = YList()
                                self.route_source.parent = self
                                self.route_source.name = 'route_source'
                                self.route_topology = Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RouteTopology()
                                self.route_topology.parent = self


                            class RouteTopology(object):
                                """
                                Common Route topology information
                                
                                .. attribute:: route_cost
                                
                                	Route cost 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: route_distance
                                
                                	Route distance 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: route_id
                                
                                	Route ID 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: route_type
                                
                                	Route type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.route_cost = None
                                    self.route_distance = None
                                    self.route_id = None
                                    self.route_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-topology'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.route_cost is not None:
                                        return True

                                    if self.route_distance is not None:
                                        return True

                                    if self.route_id is not None:
                                        return True

                                    if self.route_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RouteTopology']['meta_info']


                            class RouteSource(object):
                                """
                                List of topology source information
                                
                                .. attribute:: route_source_adversting_router
                                
                                	Route source of the advertising router 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: route_source_id
                                
                                	Route source ID 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: route_source_lsa_type
                                
                                	Type of LSA advertising the prefix, see RFC5340
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.route_source_adversting_router = None
                                    self.route_source_id = None
                                    self.route_source_lsa_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-source'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.route_source_adversting_router is not None:
                                        return True

                                    if self.route_source_id is not None:
                                        return True

                                    if self.route_source_lsa_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RouteSource']['meta_info']


                            class RoutePath(object):
                                """
                                List of paths to this route
                                
                                .. attribute:: interface_name
                                
                                	Route path interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: route_backup_path
                                
                                	Backup Path Info
                                	**type**\:  :py:class:`RouteBackupPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RoutePath.RouteBackupPath>`
                                
                                .. attribute:: route_path_id
                                
                                	Path ID of path
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: route_path_next_hop
                                
                                	Route path next hop 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.route_backup_path = Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RoutePath.RouteBackupPath()
                                    self.route_backup_path.parent = self
                                    self.route_path_id = None
                                    self.route_path_next_hop = None


                                class RouteBackupPath(object):
                                    """
                                    Backup Path Info
                                    
                                    .. attribute:: backup_metric
                                    
                                    	Metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: backup_route_interface_name
                                    
                                    	Next hop Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: backup_route_next_hop_address
                                    
                                    	Nexthop IP address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: backup_route_source
                                    
                                    	IP address of source of route
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: downstream
                                    
                                    	Downstream
                                    	**type**\:  bool
                                    
                                    .. attribute:: line_card_disjoint
                                    
                                    	Line Card Disjoint
                                    	**type**\:  bool
                                    
                                    .. attribute:: node_protect
                                    
                                    	Node Protect
                                    	**type**\:  bool
                                    
                                    .. attribute:: primary_path
                                    
                                    	Primary Path
                                    	**type**\:  bool
                                    
                                    .. attribute:: srlg_disjoint
                                    
                                    	SRLG Disjoint
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_metric = None
                                        self.backup_route_interface_name = None
                                        self.backup_route_next_hop_address = None
                                        self.backup_route_source = None
                                        self.downstream = None
                                        self.line_card_disjoint = None
                                        self.node_protect = None
                                        self.primary_path = None
                                        self.srlg_disjoint = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-backup-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_metric is not None:
                                            return True

                                        if self.backup_route_interface_name is not None:
                                            return True

                                        if self.backup_route_next_hop_address is not None:
                                            return True

                                        if self.backup_route_source is not None:
                                            return True

                                        if self.downstream is not None:
                                            return True

                                        if self.line_card_disjoint is not None:
                                            return True

                                        if self.node_protect is not None:
                                            return True

                                        if self.primary_path is not None:
                                            return True

                                        if self.srlg_disjoint is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RoutePath.RouteBackupPath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-path'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.route_backup_path is not None and self.route_backup_path._has_data():
                                        return True

                                    if self.route_path_id is not None:
                                        return True

                                    if self.route_path_next_hop is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute.RoutePath']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:internal-route'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.route_area_id is not None:
                                    return True

                                if self.route_path is not None:
                                    for child_ref in self.route_path:
                                        if child_ref._has_data():
                                            return True

                                if self.route_source is not None:
                                    for child_ref in self.route_source:
                                        if child_ref._has_data():
                                            return True

                                if self.route_topology is not None and self.route_topology._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes.InternalRoute']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:internal-routes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.internal_route is not None:
                                for child_ref in self.internal_route:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InternalRoutes']['meta_info']


                    class DatabaseSummaryProcessTable(object):
                        """
                        Database summary table at process level
                        
                        .. attribute:: database_summary
                        
                        	Database Summary information
                        	**type**\:  :py:class:`DatabaseSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.database_summary = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary()
                            self.database_summary.parent = self


                        class DatabaseSummary(object):
                            """
                            Database Summary information
                            
                            .. attribute:: area_database
                            
                            	OSPFv3 Area Database list 
                            	**type**\: list of  :py:class:`AreaDatabase <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase>`
                            
                            .. attribute:: database_counters
                            
                            	OSPFv3 database counters 
                            	**type**\:  :py:class:`DatabaseCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary.DatabaseCounters>`
                            
                            .. attribute:: database_router_id
                            
                            	Database router ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: is_opaque_database_capable
                            
                            	If true, opaque database is capable 
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_database = YList()
                                self.area_database.parent = self
                                self.area_database.name = 'area_database'
                                self.database_counters = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary.DatabaseCounters()
                                self.database_counters.parent = self
                                self.database_router_id = None
                                self.is_opaque_database_capable = None


                            class DatabaseCounters(object):
                                """
                                OSPFv3 database counters 
                                
                                .. attribute:: deleted_lsa
                                
                                	deleted lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa
                                
                                	lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_checksum
                                
                                	lsa checksum
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: max_age_lsa
                                
                                	max age lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.deleted_lsa = YLeafList()
                                    self.deleted_lsa.parent = self
                                    self.deleted_lsa.name = 'deleted_lsa'
                                    self.lsa = YLeafList()
                                    self.lsa.parent = self
                                    self.lsa.name = 'lsa'
                                    self.lsa_checksum = YLeafList()
                                    self.lsa_checksum.parent = self
                                    self.lsa_checksum.name = 'lsa_checksum'
                                    self.max_age_lsa = YLeafList()
                                    self.max_age_lsa.parent = self
                                    self.max_age_lsa.name = 'max_age_lsa'

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.deleted_lsa is not None:
                                        for child in self.deleted_lsa:
                                            if child is not None:
                                                return True

                                    if self.lsa is not None:
                                        for child in self.lsa:
                                            if child is not None:
                                                return True

                                    if self.lsa_checksum is not None:
                                        for child in self.lsa_checksum:
                                            if child is not None:
                                                return True

                                    if self.max_age_lsa is not None:
                                        for child in self.max_age_lsa:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary.DatabaseCounters']['meta_info']


                            class AreaDatabase(object):
                                """
                                OSPFv3 Area Database list 
                                
                                .. attribute:: area_database_summary
                                
                                	Area database summary 
                                	**type**\:  :py:class:`AreaDatabaseSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase.AreaDatabaseSummary>`
                                
                                .. attribute:: lsa_area_id
                                
                                	Area ID in decimal or dotted\-decimal format
                                	**type**\:  str
                                
                                	**range:** 0..16
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.area_database_summary = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase.AreaDatabaseSummary()
                                    self.area_database_summary.parent = self
                                    self.lsa_area_id = None


                                class AreaDatabaseSummary(object):
                                    """
                                    Area database summary 
                                    
                                    .. attribute:: deleted_lsa
                                    
                                    	deleted lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa
                                    
                                    	lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_checksum
                                    
                                    	lsa checksum
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: max_age_lsa
                                    
                                    	max age lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.deleted_lsa = YLeafList()
                                        self.deleted_lsa.parent = self
                                        self.deleted_lsa.name = 'deleted_lsa'
                                        self.lsa = YLeafList()
                                        self.lsa.parent = self
                                        self.lsa.name = 'lsa'
                                        self.lsa_checksum = YLeafList()
                                        self.lsa_checksum.parent = self
                                        self.lsa_checksum.name = 'lsa_checksum'
                                        self.max_age_lsa = YLeafList()
                                        self.max_age_lsa.parent = self
                                        self.max_age_lsa.name = 'max_age_lsa'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-database-summary'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.deleted_lsa is not None:
                                            for child in self.deleted_lsa:
                                                if child is not None:
                                                    return True

                                        if self.lsa is not None:
                                            for child in self.lsa:
                                                if child is not None:
                                                    return True

                                        if self.lsa_checksum is not None:
                                            for child in self.lsa_checksum:
                                                if child is not None:
                                                    return True

                                        if self.max_age_lsa is not None:
                                            for child in self.max_age_lsa:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase.AreaDatabaseSummary']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-database'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.area_database_summary is not None and self.area_database_summary._has_data():
                                        return True

                                    if self.lsa_area_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_database is not None:
                                    for child_ref in self.area_database:
                                        if child_ref._has_data():
                                            return True

                                if self.database_counters is not None and self.database_counters._has_data():
                                    return True

                                if self.database_router_id is not None:
                                    return True

                                if self.is_opaque_database_capable is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable.DatabaseSummary']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary-process-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.database_summary is not None and self.database_summary._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryProcessTable']['meta_info']


                    class ProtocolAreas(object):
                        """
                        Protocol area table 
                        
                        .. attribute:: protocol_area
                        
                        	Area information 
                        	**type**\: list of  :py:class:`ProtocolArea <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ProtocolAreas.ProtocolArea>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.protocol_area = YList()
                            self.protocol_area.parent = self
                            self.protocol_area.name = 'protocol_area'


                        class ProtocolArea(object):
                            """
                            Area information 
                            
                            .. attribute:: area_id  <key>
                            
                            	Area ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: distribute_list_in
                            
                            	Distribute List In
                            	**type**\:  str
                            
                            .. attribute:: protocol_area_id
                            
                            	Area ID string in decimal and dotted\-decimal format
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            .. attribute:: protocol_interface
                            
                            	Interface list
                            	**type**\: list of  :py:class:`ProtocolInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ProtocolAreas.ProtocolArea.ProtocolInterface>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_id = None
                                self.distribute_list_in = None
                                self.protocol_area_id = None
                                self.protocol_interface = YList()
                                self.protocol_interface.parent = self
                                self.protocol_interface.name = 'protocol_interface'


                            class ProtocolInterface(object):
                                """
                                Interface list
                                
                                .. attribute:: distribute_list_in
                                
                                	Distribute List In
                                	**type**\:  str
                                
                                .. attribute:: interface_name
                                
                                	Protocol interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.distribute_list_in = None
                                    self.interface_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:protocol-interface'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.distribute_list_in is not None:
                                        return True

                                    if self.interface_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ProtocolAreas.ProtocolArea.ProtocolInterface']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.area_id is None:
                                    raise YPYModelError('Key property area_id is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:protocol-area[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_id is not None:
                                    return True

                                if self.distribute_list_in is not None:
                                    return True

                                if self.protocol_area_id is not None:
                                    return True

                                if self.protocol_interface is not None:
                                    for child_ref in self.protocol_interface:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ProtocolAreas.ProtocolArea']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:protocol-areas'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.protocol_area is not None:
                                for child_ref in self.protocol_area:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ProtocolAreas']['meta_info']


                    class DatabaseExternalLsas(object):
                        """
                        Database external LSA information
                        
                        .. attribute:: database_external_lsa
                        
                        	Database external LSA information
                        	**type**\: list of  :py:class:`DatabaseExternalLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas.DatabaseExternalLsa>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.database_external_lsa = YList()
                            self.database_external_lsa.parent = self
                            self.database_external_lsa.name = 'database_external_lsa'


                        class DatabaseExternalLsa(object):
                            """
                            Database external LSA information
                            
                            .. attribute:: advertising_router
                            
                            	Advertising Router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: external_tag
                            
                            	Route Tag
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: forwarding_address
                            
                            	Forwarding Address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: is_forwarding_address_set
                            
                            	If true, forwarding address is set 
                            	**type**\:  bool
                            
                            .. attribute:: ls_id
                            
                            	Link state ID
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: lsa_detail
                            
                            	Detailed LSA Information
                            	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaDetail>`
                            
                            .. attribute:: lsa_header
                            
                            	Header information 
                            	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaHeader>`
                            
                            .. attribute:: lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                            
                            .. attribute:: metric_type
                            
                            	Metric type 
                            	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: prefix_length_xr
                            
                            	Prefix length 
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: prefix_xr
                            
                            	IPV6 address prefix 
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: priority
                            
                            	Prefix priority
                            	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                            
                            .. attribute:: tos_cost
                            
                            	Type of service cost metric 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.advertising_router = None
                                self.external_tag = None
                                self.forwarding_address = None
                                self.is_forwarding_address_set = None
                                self.ls_id = None
                                self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaDetail()
                                self.lsa_detail.parent = self
                                self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaHeader()
                                self.lsa_header.parent = self
                                self.lsa_type = None
                                self.metric_type = None
                                self.prefix = None
                                self.prefix_length = None
                                self.prefix_length_xr = None
                                self.prefix_xr = None
                                self.priority = None
                                self.tos_cost = None


                            class LsaHeader(object):
                                """
                                Header information 
                                
                                .. attribute:: advertising_router
                                
                                	Router ID of Advertising Router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: checksum
                                
                                	Checksum value
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: is_do_not_age_lsa
                                
                                	If true, Do Not Age this LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_graceful_restart_active
                                
                                	If true, if grace restart is active 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	LS ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_age
                                
                                	LSA's Age (s)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsa_area_id
                                
                                	Area ID in decimal or dotted\-decimal format
                                	**type**\:  str
                                
                                	**range:** 0..16
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: sequence_number
                                
                                	Current Sequence number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.checksum = None
                                    self.is_do_not_age_lsa = None
                                    self.is_graceful_restart_active = None
                                    self.ls_id = None
                                    self.lsa_age = None
                                    self.lsa_area_id = None
                                    self.lsa_type = None
                                    self.sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.checksum is not None:
                                        return True

                                    if self.is_do_not_age_lsa is not None:
                                        return True

                                    if self.is_graceful_restart_active is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_age is not None:
                                        return True

                                    if self.lsa_area_id is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaHeader']['meta_info']


                            class LsaDetail(object):
                                """
                                Detailed LSA Information
                                
                                .. attribute:: free_time
                                
                                	The amount of time since the last check was made to free this LSA (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: is_acknowledged
                                
                                	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                	**type**\:  bool
                                
                                .. attribute:: is_advertising_router_reachable
                                
                                	If true, Advertising Router is reachable
                                	**type**\:  bool
                                
                                .. attribute:: is_deleted
                                
                                	If true, flag is set to delete this LSA 
                                	**type**\:  bool
                                
                                .. attribute:: is_flood_pending
                                
                                	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                	**type**\:  bool
                                
                                .. attribute:: is_maximum_aged
                                
                                	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                	**type**\:  bool
                                
                                .. attribute:: is_neighbor_exchange
                                
                                	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                	**type**\:  bool
                                
                                .. attribute:: is_no_delete
                                
                                	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_nsr_ack_pending
                                
                                	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                	**type**\:  bool
                                
                                .. attribute:: is_partial_spf
                                
                                	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                	**type**\:  bool
                                
                                .. attribute:: is_routing_bit
                                
                                	If true, Routing Bit set on the LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_routing_table
                                
                                	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                	**type**\:  bool
                                
                                .. attribute:: lsa_flood_required_post_fail_over
                                
                                	LSA flood required after FO
                                	**type**\:  bool
                                
                                .. attribute:: lsa_length
                                
                                	Length of the LSA
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsa_sync_state
                                
                                	State of LSA sync with active
                                	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                
                                .. attribute:: minute_table_index
                                
                                	Minute table index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: nsr_flood_required
                                
                                	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                	**type**\:  bool
                                
                                .. attribute:: rate_limit
                                
                                	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                	**type**\:  bool
                                
                                .. attribute:: second_table_index
                                
                                	Second table index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.free_time = None
                                    self.is_acknowledged = None
                                    self.is_advertising_router_reachable = None
                                    self.is_deleted = None
                                    self.is_flood_pending = None
                                    self.is_maximum_aged = None
                                    self.is_neighbor_exchange = None
                                    self.is_no_delete = None
                                    self.is_nsr_ack_pending = None
                                    self.is_partial_spf = None
                                    self.is_routing_bit = None
                                    self.is_routing_table = None
                                    self.lsa_flood_required_post_fail_over = None
                                    self.lsa_length = None
                                    self.lsa_sync_state = None
                                    self.minute_table_index = None
                                    self.nsr_flood_required = None
                                    self.rate_limit = None
                                    self.second_table_index = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.free_time is not None:
                                        return True

                                    if self.is_acknowledged is not None:
                                        return True

                                    if self.is_advertising_router_reachable is not None:
                                        return True

                                    if self.is_deleted is not None:
                                        return True

                                    if self.is_flood_pending is not None:
                                        return True

                                    if self.is_maximum_aged is not None:
                                        return True

                                    if self.is_neighbor_exchange is not None:
                                        return True

                                    if self.is_no_delete is not None:
                                        return True

                                    if self.is_nsr_ack_pending is not None:
                                        return True

                                    if self.is_partial_spf is not None:
                                        return True

                                    if self.is_routing_bit is not None:
                                        return True

                                    if self.is_routing_table is not None:
                                        return True

                                    if self.lsa_flood_required_post_fail_over is not None:
                                        return True

                                    if self.lsa_length is not None:
                                        return True

                                    if self.lsa_sync_state is not None:
                                        return True

                                    if self.minute_table_index is not None:
                                        return True

                                    if self.nsr_flood_required is not None:
                                        return True

                                    if self.rate_limit is not None:
                                        return True

                                    if self.second_table_index is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaDetail']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-external-lsa'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.advertising_router is not None:
                                    return True

                                if self.external_tag is not None:
                                    return True

                                if self.forwarding_address is not None:
                                    return True

                                if self.is_forwarding_address_set is not None:
                                    return True

                                if self.ls_id is not None:
                                    return True

                                if self.lsa_detail is not None and self.lsa_detail._has_data():
                                    return True

                                if self.lsa_header is not None and self.lsa_header._has_data():
                                    return True

                                if self.lsa_type is not None:
                                    return True

                                if self.metric_type is not None:
                                    return True

                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.prefix_length_xr is not None:
                                    return True

                                if self.prefix_xr is not None:
                                    return True

                                if self.priority is not None:
                                    return True

                                if self.tos_cost is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas.DatabaseExternalLsa']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-external-lsas'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.database_external_lsa is not None:
                                for child_ref in self.database_external_lsa:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseExternalLsas']['meta_info']


                    class ConnectedRoutes(object):
                        """
                        OSPFv3 connected route information table
                        
                        .. attribute:: connected_route
                        
                        	OSPFv3 connected route information
                        	**type**\: list of  :py:class:`ConnectedRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.connected_route = YList()
                            self.connected_route.parent = self
                            self.connected_route.name = 'connected_route'


                        class ConnectedRoute(object):
                            """
                            OSPFv3 connected route information
                            
                            .. attribute:: prefix
                            
                            	Route prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: route_path
                            
                            	List of paths to this route
                            	**type**\: list of  :py:class:`RoutePath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute.RoutePath>`
                            
                            .. attribute:: route_topology
                            
                            	Common Route topology information
                            	**type**\:  :py:class:`RouteTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute.RouteTopology>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.route_path = YList()
                                self.route_path.parent = self
                                self.route_path.name = 'route_path'
                                self.route_topology = Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute.RouteTopology()
                                self.route_topology.parent = self


                            class RouteTopology(object):
                                """
                                Common Route topology information
                                
                                .. attribute:: route_cost
                                
                                	Route cost 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: route_distance
                                
                                	Route distance 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: route_id
                                
                                	Route ID 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: route_type
                                
                                	Route type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.route_cost = None
                                    self.route_distance = None
                                    self.route_id = None
                                    self.route_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-topology'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.route_cost is not None:
                                        return True

                                    if self.route_distance is not None:
                                        return True

                                    if self.route_id is not None:
                                        return True

                                    if self.route_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute.RouteTopology']['meta_info']


                            class RoutePath(object):
                                """
                                List of paths to this route
                                
                                .. attribute:: interface_name
                                
                                	Route path interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: route_backup_path
                                
                                	Backup Path Info
                                	**type**\:  :py:class:`RouteBackupPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute.RoutePath.RouteBackupPath>`
                                
                                .. attribute:: route_path_id
                                
                                	Path ID of path
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: route_path_next_hop
                                
                                	Route path next hop 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.route_backup_path = Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute.RoutePath.RouteBackupPath()
                                    self.route_backup_path.parent = self
                                    self.route_path_id = None
                                    self.route_path_next_hop = None


                                class RouteBackupPath(object):
                                    """
                                    Backup Path Info
                                    
                                    .. attribute:: backup_metric
                                    
                                    	Metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: backup_route_interface_name
                                    
                                    	Next hop Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: backup_route_next_hop_address
                                    
                                    	Nexthop IP address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: backup_route_source
                                    
                                    	IP address of source of route
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: downstream
                                    
                                    	Downstream
                                    	**type**\:  bool
                                    
                                    .. attribute:: line_card_disjoint
                                    
                                    	Line Card Disjoint
                                    	**type**\:  bool
                                    
                                    .. attribute:: node_protect
                                    
                                    	Node Protect
                                    	**type**\:  bool
                                    
                                    .. attribute:: primary_path
                                    
                                    	Primary Path
                                    	**type**\:  bool
                                    
                                    .. attribute:: srlg_disjoint
                                    
                                    	SRLG Disjoint
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_metric = None
                                        self.backup_route_interface_name = None
                                        self.backup_route_next_hop_address = None
                                        self.backup_route_source = None
                                        self.downstream = None
                                        self.line_card_disjoint = None
                                        self.node_protect = None
                                        self.primary_path = None
                                        self.srlg_disjoint = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-backup-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_metric is not None:
                                            return True

                                        if self.backup_route_interface_name is not None:
                                            return True

                                        if self.backup_route_next_hop_address is not None:
                                            return True

                                        if self.backup_route_source is not None:
                                            return True

                                        if self.downstream is not None:
                                            return True

                                        if self.line_card_disjoint is not None:
                                            return True

                                        if self.node_protect is not None:
                                            return True

                                        if self.primary_path is not None:
                                            return True

                                        if self.srlg_disjoint is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute.RoutePath.RouteBackupPath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-path'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.route_backup_path is not None and self.route_backup_path._has_data():
                                        return True

                                    if self.route_path_id is not None:
                                        return True

                                    if self.route_path_next_hop is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute.RoutePath']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:connected-route'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.route_path is not None:
                                    for child_ref in self.route_path:
                                        if child_ref._has_data():
                                            return True

                                if self.route_topology is not None and self.route_topology._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes.ConnectedRoute']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:connected-routes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.connected_route is not None:
                                for child_ref in self.connected_route:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.ConnectedRoutes']['meta_info']


                    class Summary(object):
                        """
                        OSPFv3 summary
                        
                        .. attribute:: ospfv3
                        
                        	OSPFv3 summary
                        	**type**\:  :py:class:`Ospfv3 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3>`
                        
                        .. attribute:: protocol
                        
                        	OSPFv3 protocol summary
                        	**type**\:  :py:class:`Protocol <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Protocol>`
                        
                        .. attribute:: route
                        
                        	OSPFv3 route summary
                        	**type**\:  :py:class:`Route <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Route>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.ospfv3 = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3()
                            self.ospfv3.parent = self
                            self.protocol = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Protocol()
                            self.protocol.parent = self
                            self.route = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Route()
                            self.route.parent = self


                        class Protocol(object):
                            """
                            OSPFv3 protocol summary
                            
                            .. attribute:: administrative_distance
                            
                            	Administrative distance
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: administrative_distance_external
                            
                            	Administrative Distance for External routes
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: administrative_distance_inter_area
                            
                            	Administrative Distance for Inter Area routes
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: distribute_list_in
                            
                            	Distribute List In
                            	**type**\:  str
                            
                            .. attribute:: is_graceful_restart
                            
                            	If true, Graceful restart is enabled 
                            	**type**\:  bool
                            
                            .. attribute:: protocol_router_id
                            
                            	Protocol router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.administrative_distance = None
                                self.administrative_distance_external = None
                                self.administrative_distance_inter_area = None
                                self.distribute_list_in = None
                                self.is_graceful_restart = None
                                self.protocol_router_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:protocol'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.administrative_distance is not None:
                                    return True

                                if self.administrative_distance_external is not None:
                                    return True

                                if self.administrative_distance_inter_area is not None:
                                    return True

                                if self.distribute_list_in is not None:
                                    return True

                                if self.is_graceful_restart is not None:
                                    return True

                                if self.protocol_router_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Protocol']['meta_info']


                        class Ospfv3(object):
                            """
                            OSPFv3 summary
                            
                            .. attribute:: areas
                            
                            	Number of areas
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: as_dc_bitless_ls_as
                            
                            	Number of external and AS opaque LSAs with demand circut bit not set
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_do_not_age_ls_as
                            
                            	Number of external and AS opaque LSAs with do not age set 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_ls_as
                            
                            	Number of AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_lsa_flood_list_length
                            
                            	Length of AS LSAs flood list
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: context_name
                            
                            	Context name
                            	**type**\:  str
                            
                            	**range:** 0..32
                            
                            .. attribute:: default_metric
                            
                            	Default metric 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: default_metric_type
                            
                            	Default metric type 
                            	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                            
                            .. attribute:: default_policy_name
                            
                            	Default policy name 
                            	**type**\:  str
                            
                            .. attribute:: default_tag
                            
                            	Default tag 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: domain_id
                            
                            	Domain ID information
                            	**type**\:  :py:class:`DomainId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.DomainId>`
                            
                            .. attribute:: grace_resync_time
                            
                            	Grace time to resync 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: graceful_shutdown_state
                            
                            	Graceful shutdown state
                            	**type**\:  :py:class:`Ospfv3GracefulShutdownStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3GracefulShutdownStateEnum>`
                            
                            .. attribute:: ipfrr_tiebreakers
                            
                            	IPFRR\-Tiebreakers list
                            	**type**\: list of  :py:class:`IpfrrTiebreakers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.IpfrrTiebreakers>`
                            
                            .. attribute:: is_area_border_router
                            
                            	If true, is an area border router
                            	**type**\:  bool
                            
                            .. attribute:: is_as_border_router
                            
                            	If true, is an AS border router
                            	**type**\:  bool
                            
                            .. attribute:: is_auto_cost
                            
                            	If true, auto cost is enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_default_always
                            
                            	If true, default always 
                            	**type**\:  bool
                            
                            .. attribute:: is_default_originated
                            
                            	If true, origin is by default 
                            	**type**\:  bool
                            
                            .. attribute:: is_default_policy
                            
                            	If true, is a default policy 
                            	**type**\:  bool
                            
                            .. attribute:: is_grace_restart_enabled
                            
                            	If true, grace restart is enabled 
                            	**type**\:  bool
                            
                            .. attribute:: is_nsr_enabled
                            
                            	If true, NSR is enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_nsr_switchover_on_restart
                            
                            	Trigger RP Switchover on detectable process restart
                            	**type**\:  bool
                            
                            .. attribute:: is_opaque_capable
                            
                            	Opaque LSA capable 
                            	**type**\:  bool
                            
                            .. attribute:: is_role_standby
                            
                            	If true, the process is running as stanby role
                            	**type**\:  bool
                            
                            .. attribute:: is_router_id_stalled
                            
                            	Stalled Router ID 
                            	**type**\:  bool
                            
                            .. attribute:: last_nsf_time
                            
                            	 Length of time since the last NSF (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_flood_pacing_interval
                            
                            	LSA flood pacing timer (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_group_interval
                            
                            	LSA refresh interval (sec)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_hold_time
                            
                            	Second delay before generating next LSA (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_maximum_time
                            
                            	Maximum delay before generating an LSA (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_retransmission_pacing_interval
                            
                            	LSA retransmission pacing timer (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_start_time
                            
                            	Initial LSA throttle delay (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_interfaces
                            
                            	Maximum number of interfaces
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_paths
                            
                            	Maximum number of paths
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: metric
                            
                            	Redistribution metric 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: minimum_lsa_interval
                            
                            	Minimum time between LSA regeneration (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: normal_areas
                            
                            	Number of normal areas
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: nssa_areas
                            
                            	Number of NSSA areas
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: opaque_lsa_checksum
                            
                            	Sum of opaque LSA checksum
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: opaque_lsas
                            
                            	Number of opaque LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: redistribution_limit
                            
                            	The number of redistributed prefixes allowed
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: redistribution_threshold
                            
                            	When the number of redistributed prefixes reaches this threshold, a warning message is issued 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reference_bandwidth
                            
                            	Reference Bandwdith
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: role
                            
                            	Role, V1/V2 Active/Standby
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_id
                            
                            	Router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: snmp_trap_enabled
                            
                            	If true, snmp trap is enabled
                            	**type**\:  bool
                            
                            .. attribute:: spf_hold_time
                            
                            	Minimum delay time between SPF runs (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: spf_maximum_time
                            
                            	Maximum delay time between SPF runs (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: spf_start_time
                            
                            	Scheduling delay for SPF (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: stub_areas
                            
                            	Number of stub and total stub areas
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: stub_router
                            
                            	Stub Router Information
                            	**type**\: list of  :py:class:`StubRouter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.areas = None
                                self.as_dc_bitless_ls_as = None
                                self.as_do_not_age_ls_as = None
                                self.as_ls_as = None
                                self.as_lsa_flood_list_length = None
                                self.context_name = None
                                self.default_metric = None
                                self.default_metric_type = None
                                self.default_policy_name = None
                                self.default_tag = None
                                self.domain_id = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.DomainId()
                                self.domain_id.parent = self
                                self.grace_resync_time = None
                                self.graceful_shutdown_state = None
                                self.ipfrr_tiebreakers = YList()
                                self.ipfrr_tiebreakers.parent = self
                                self.ipfrr_tiebreakers.name = 'ipfrr_tiebreakers'
                                self.is_area_border_router = None
                                self.is_as_border_router = None
                                self.is_auto_cost = None
                                self.is_default_always = None
                                self.is_default_originated = None
                                self.is_default_policy = None
                                self.is_grace_restart_enabled = None
                                self.is_nsr_enabled = None
                                self.is_nsr_switchover_on_restart = None
                                self.is_opaque_capable = None
                                self.is_role_standby = None
                                self.is_router_id_stalled = None
                                self.last_nsf_time = None
                                self.lsa_flood_pacing_interval = None
                                self.lsa_group_interval = None
                                self.lsa_hold_time = None
                                self.lsa_maximum_time = None
                                self.lsa_retransmission_pacing_interval = None
                                self.lsa_start_time = None
                                self.maximum_interfaces = None
                                self.maximum_paths = None
                                self.metric = None
                                self.minimum_lsa_interval = None
                                self.normal_areas = None
                                self.nssa_areas = None
                                self.opaque_lsa_checksum = None
                                self.opaque_lsas = None
                                self.redistribution_limit = None
                                self.redistribution_threshold = None
                                self.reference_bandwidth = None
                                self.role = None
                                self.router_id = None
                                self.snmp_trap_enabled = None
                                self.spf_hold_time = None
                                self.spf_maximum_time = None
                                self.spf_start_time = None
                                self.stub_areas = None
                                self.stub_router = YList()
                                self.stub_router.parent = self
                                self.stub_router.name = 'stub_router'


                            class DomainId(object):
                                """
                                Domain ID information
                                
                                .. attribute:: primary_domain_id
                                
                                	Primary Domain ID
                                	**type**\:  :py:class:`PrimaryDomainId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.DomainId.PrimaryDomainId>`
                                
                                .. attribute:: secondary_domain_id
                                
                                	List of secondary domain IDs
                                	**type**\: list of  :py:class:`SecondaryDomainId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.DomainId.SecondaryDomainId>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.primary_domain_id = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.DomainId.PrimaryDomainId()
                                    self.primary_domain_id.parent = self
                                    self.secondary_domain_id = YList()
                                    self.secondary_domain_id.parent = self
                                    self.secondary_domain_id.name = 'secondary_domain_id'


                                class PrimaryDomainId(object):
                                    """
                                    Primary Domain ID
                                    
                                    .. attribute:: domain_id_type
                                    
                                    	Domain ID Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: domain_id_value
                                    
                                    	Domain ID value
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.domain_id_type = None
                                        self.domain_id_value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:primary-domain-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.domain_id_type is not None:
                                            return True

                                        if self.domain_id_value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.DomainId.PrimaryDomainId']['meta_info']


                                class SecondaryDomainId(object):
                                    """
                                    List of secondary domain IDs
                                    
                                    .. attribute:: domain_id_type
                                    
                                    	Domain ID Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: domain_id_value
                                    
                                    	Domain ID value
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.domain_id_type = None
                                        self.domain_id_value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:secondary-domain-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.domain_id_type is not None:
                                            return True

                                        if self.domain_id_value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.DomainId.SecondaryDomainId']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:domain-id'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.primary_domain_id is not None and self.primary_domain_id._has_data():
                                        return True

                                    if self.secondary_domain_id is not None:
                                        for child_ref in self.secondary_domain_id:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.DomainId']['meta_info']


                            class StubRouter(object):
                                """
                                Stub Router Information
                                
                                .. attribute:: abr_off_reason
                                
                                	Reason for being in ABR off mode
                                	**type**\:  :py:class:`StubRouterAbrOffReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterAbrOffReasonEnum>`
                                
                                .. attribute:: abr_resume_time
                                
                                	Timestamp (relative to 1970/1/1 00\:00) when ABR duties were resumed
                                	**type**\:  :py:class:`AbrResumeTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.AbrResumeTime>`
                                
                                .. attribute:: active
                                
                                	If true, stub router mode is active
                                	**type**\:  bool
                                
                                .. attribute:: external_lsa_metric
                                
                                	Metric for external LSAs in max\-metric mode
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: include_stub_links
                                
                                	If true, advertise maximum metric for stub links
                                	**type**\:  bool
                                
                                .. attribute:: mode
                                
                                	Stub router mode
                                	**type**\:  :py:class:`StubRouterModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterModeEnum>`
                                
                                .. attribute:: remaining_time
                                
                                	Remaining time (in seconds) in stub router mode
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: set_reason
                                
                                	Reason for entering stub router mode
                                	**type**\:  :py:class:`StubRouterTriggerEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterTriggerEnum>`
                                
                                .. attribute:: start_time
                                
                                	Timestamp (relative to 1970/1/1 00\:00) when stub router mode was activated
                                	**type**\:  :py:class:`StartTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.StartTime>`
                                
                                .. attribute:: summary_lsa_metric
                                
                                	Metric for summary LSAs in max\-metric mode
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: trigger
                                
                                	Triggers for entering stub router mode
                                	**type**\: list of  :py:class:`Trigger <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.Trigger>`
                                
                                .. attribute:: unset_reason
                                
                                	Reason for clearing stub router condition
                                	**type**\:  :py:class:`StubRouterExitReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterExitReasonEnum>`
                                
                                .. attribute:: unset_time
                                
                                	Timestamp (relative to 1970/1/1 00\:00) when stub router condition was cleared
                                	**type**\:  :py:class:`UnsetTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.UnsetTime>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.abr_off_reason = None
                                    self.abr_resume_time = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.AbrResumeTime()
                                    self.abr_resume_time.parent = self
                                    self.active = None
                                    self.external_lsa_metric = None
                                    self.include_stub_links = None
                                    self.mode = None
                                    self.remaining_time = None
                                    self.set_reason = None
                                    self.start_time = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.StartTime()
                                    self.start_time.parent = self
                                    self.summary_lsa_metric = None
                                    self.trigger = YList()
                                    self.trigger.parent = self
                                    self.trigger.name = 'trigger'
                                    self.unset_reason = None
                                    self.unset_time = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.UnsetTime()
                                    self.unset_time.parent = self


                                class UnsetTime(object):
                                    """
                                    Timestamp (relative to 1970/1/1 00\:00) when stub
                                    router condition was cleared
                                    
                                    .. attribute:: nanosecond
                                    
                                    	Nano seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: second
                                    
                                    	Seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.nanosecond = None
                                        self.second = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:unset-time'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.nanosecond is not None:
                                            return True

                                        if self.second is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.UnsetTime']['meta_info']


                                class StartTime(object):
                                    """
                                    Timestamp (relative to 1970/1/1 00\:00) when stub
                                    router mode was activated
                                    
                                    .. attribute:: nanosecond
                                    
                                    	Nano seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: second
                                    
                                    	Seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.nanosecond = None
                                        self.second = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:start-time'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.nanosecond is not None:
                                            return True

                                        if self.second is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.StartTime']['meta_info']


                                class AbrResumeTime(object):
                                    """
                                    Timestamp (relative to 1970/1/1 00\:00) when ABR
                                    duties were resumed
                                    
                                    .. attribute:: nanosecond
                                    
                                    	Nano seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: second
                                    
                                    	Seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.nanosecond = None
                                        self.second = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:abr-resume-time'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.nanosecond is not None:
                                            return True

                                        if self.second is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.AbrResumeTime']['meta_info']


                                class Trigger(object):
                                    """
                                    Triggers for entering stub router mode
                                    
                                    .. attribute:: start_time
                                    
                                    	Timestamp (relative to 1970/1/1 00\:00) when stub router mode was activated
                                    	**type**\:  :py:class:`StartTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.Trigger.StartTime>`
                                    
                                    .. attribute:: time
                                    
                                    	Time (in seconds) to stay in stub router mode
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: trigger
                                    
                                    	Stub Router Trigger type
                                    	**type**\:  :py:class:`StubRouterTriggerEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterTriggerEnum>`
                                    
                                    .. attribute:: unset_reason
                                    
                                    	Reason for clearing stub router condition
                                    	**type**\:  :py:class:`StubRouterExitReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterExitReasonEnum>`
                                    
                                    .. attribute:: unset_time
                                    
                                    	Timestamp (relative to 1970/1/1 00\:00) when stub router condition was cleared
                                    	**type**\:  :py:class:`UnsetTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.Trigger.UnsetTime>`
                                    
                                    .. attribute:: wait_for_bgp
                                    
                                    	If true, stub router is terminated when BGP converges
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.start_time = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.Trigger.StartTime()
                                        self.start_time.parent = self
                                        self.time = None
                                        self.trigger = None
                                        self.unset_reason = None
                                        self.unset_time = Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.Trigger.UnsetTime()
                                        self.unset_time.parent = self
                                        self.wait_for_bgp = None


                                    class UnsetTime(object):
                                        """
                                        Timestamp (relative to 1970/1/1 00\:00) when stub
                                        router condition was cleared
                                        
                                        .. attribute:: nanosecond
                                        
                                        	Nano seconds 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: second
                                        
                                        	Seconds 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.nanosecond = None
                                            self.second = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:unset-time'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.nanosecond is not None:
                                                return True

                                            if self.second is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.Trigger.UnsetTime']['meta_info']


                                    class StartTime(object):
                                        """
                                        Timestamp (relative to 1970/1/1 00\:00) when stub
                                        router mode was activated
                                        
                                        .. attribute:: nanosecond
                                        
                                        	Nano seconds 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: second
                                        
                                        	Seconds 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.nanosecond = None
                                            self.second = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:start-time'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.nanosecond is not None:
                                                return True

                                            if self.second is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.Trigger.StartTime']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:trigger'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.start_time is not None and self.start_time._has_data():
                                            return True

                                        if self.time is not None:
                                            return True

                                        if self.trigger is not None:
                                            return True

                                        if self.unset_reason is not None:
                                            return True

                                        if self.unset_time is not None and self.unset_time._has_data():
                                            return True

                                        if self.wait_for_bgp is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter.Trigger']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:stub-router'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.abr_off_reason is not None:
                                        return True

                                    if self.abr_resume_time is not None and self.abr_resume_time._has_data():
                                        return True

                                    if self.active is not None:
                                        return True

                                    if self.external_lsa_metric is not None:
                                        return True

                                    if self.include_stub_links is not None:
                                        return True

                                    if self.mode is not None:
                                        return True

                                    if self.remaining_time is not None:
                                        return True

                                    if self.set_reason is not None:
                                        return True

                                    if self.start_time is not None and self.start_time._has_data():
                                        return True

                                    if self.summary_lsa_metric is not None:
                                        return True

                                    if self.trigger is not None:
                                        for child_ref in self.trigger:
                                            if child_ref._has_data():
                                                return True

                                    if self.unset_reason is not None:
                                        return True

                                    if self.unset_time is not None and self.unset_time._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.StubRouter']['meta_info']


                            class IpfrrTiebreakers(object):
                                """
                                IPFRR\-Tiebreakers list
                                
                                .. attribute:: tiebreaker_index
                                
                                	Tiebreaker Index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tiebreaker_type
                                
                                	Tiebreaker Type
                                	**type**\:  :py:class:`IpfrrTbrkrEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.IpfrrTbrkrEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.tiebreaker_index = None
                                    self.tiebreaker_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:ipfrr-tiebreakers'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.tiebreaker_index is not None:
                                        return True

                                    if self.tiebreaker_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3.IpfrrTiebreakers']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:ospfv3'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.areas is not None:
                                    return True

                                if self.as_dc_bitless_ls_as is not None:
                                    return True

                                if self.as_do_not_age_ls_as is not None:
                                    return True

                                if self.as_ls_as is not None:
                                    return True

                                if self.as_lsa_flood_list_length is not None:
                                    return True

                                if self.context_name is not None:
                                    return True

                                if self.default_metric is not None:
                                    return True

                                if self.default_metric_type is not None:
                                    return True

                                if self.default_policy_name is not None:
                                    return True

                                if self.default_tag is not None:
                                    return True

                                if self.domain_id is not None and self.domain_id._has_data():
                                    return True

                                if self.grace_resync_time is not None:
                                    return True

                                if self.graceful_shutdown_state is not None:
                                    return True

                                if self.ipfrr_tiebreakers is not None:
                                    for child_ref in self.ipfrr_tiebreakers:
                                        if child_ref._has_data():
                                            return True

                                if self.is_area_border_router is not None:
                                    return True

                                if self.is_as_border_router is not None:
                                    return True

                                if self.is_auto_cost is not None:
                                    return True

                                if self.is_default_always is not None:
                                    return True

                                if self.is_default_originated is not None:
                                    return True

                                if self.is_default_policy is not None:
                                    return True

                                if self.is_grace_restart_enabled is not None:
                                    return True

                                if self.is_nsr_enabled is not None:
                                    return True

                                if self.is_nsr_switchover_on_restart is not None:
                                    return True

                                if self.is_opaque_capable is not None:
                                    return True

                                if self.is_role_standby is not None:
                                    return True

                                if self.is_router_id_stalled is not None:
                                    return True

                                if self.last_nsf_time is not None:
                                    return True

                                if self.lsa_flood_pacing_interval is not None:
                                    return True

                                if self.lsa_group_interval is not None:
                                    return True

                                if self.lsa_hold_time is not None:
                                    return True

                                if self.lsa_maximum_time is not None:
                                    return True

                                if self.lsa_retransmission_pacing_interval is not None:
                                    return True

                                if self.lsa_start_time is not None:
                                    return True

                                if self.maximum_interfaces is not None:
                                    return True

                                if self.maximum_paths is not None:
                                    return True

                                if self.metric is not None:
                                    return True

                                if self.minimum_lsa_interval is not None:
                                    return True

                                if self.normal_areas is not None:
                                    return True

                                if self.nssa_areas is not None:
                                    return True

                                if self.opaque_lsa_checksum is not None:
                                    return True

                                if self.opaque_lsas is not None:
                                    return True

                                if self.redistribution_limit is not None:
                                    return True

                                if self.redistribution_threshold is not None:
                                    return True

                                if self.reference_bandwidth is not None:
                                    return True

                                if self.role is not None:
                                    return True

                                if self.router_id is not None:
                                    return True

                                if self.snmp_trap_enabled is not None:
                                    return True

                                if self.spf_hold_time is not None:
                                    return True

                                if self.spf_maximum_time is not None:
                                    return True

                                if self.spf_start_time is not None:
                                    return True

                                if self.stub_areas is not None:
                                    return True

                                if self.stub_router is not None:
                                    for child_ref in self.stub_router:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Ospfv3']['meta_info']


                        class Route(object):
                            """
                            OSPFv3 route summary
                            
                            .. attribute:: extern_one_route
                            
                            	Extern 1 route summary 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: extern_two_route
                            
                            	Extern 2 route summary 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: inter_area_route
                            
                            	Inter route summary 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: intra_area_route
                            
                            	Intra route summary 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: nssa_one_route
                            
                            	NSSA 1 route summary 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: nssa_two_route
                            
                            	NSSA 2 route summary 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: redistribution_route
                            
                            	Redistribution route summary 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_connected
                            
                            	Route connected 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_id
                            
                            	Route summary of a route ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: total_received_route
                            
                            	Total route received summary
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: total_sent_route
                            
                            	Total route summary 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.extern_one_route = None
                                self.extern_two_route = None
                                self.inter_area_route = None
                                self.intra_area_route = None
                                self.nssa_one_route = None
                                self.nssa_two_route = None
                                self.redistribution_route = None
                                self.route_connected = None
                                self.route_id = None
                                self.total_received_route = None
                                self.total_sent_route = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.extern_one_route is not None:
                                    return True

                                if self.extern_two_route is not None:
                                    return True

                                if self.inter_area_route is not None:
                                    return True

                                if self.intra_area_route is not None:
                                    return True

                                if self.nssa_one_route is not None:
                                    return True

                                if self.nssa_two_route is not None:
                                    return True

                                if self.redistribution_route is not None:
                                    return True

                                if self.route_connected is not None:
                                    return True

                                if self.route_id is not None:
                                    return True

                                if self.total_received_route is not None:
                                    return True

                                if self.total_sent_route is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary.Route']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:summary'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.ospfv3 is not None and self.ospfv3._has_data():
                                return True

                            if self.protocol is not None and self.protocol._has_data():
                                return True

                            if self.route is not None and self.route._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.Summary']['meta_info']


                    class RetransmissionListProcessTable(object):
                        """
                        OSPFv3 retransmission list information table for
                        all areas
                        
                        .. attribute:: retransmission
                        
                        	OSPFv3 retransmission list information
                        	**type**\: list of  :py:class:`Retransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable.Retransmission>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.retransmission = YList()
                            self.retransmission.parent = self
                            self.retransmission.name = 'retransmission'


                        class Retransmission(object):
                            """
                            OSPFv3 retransmission list information
                            
                            .. attribute:: interface_name
                            
                            	Interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_retransmission_sham_link
                            
                            	If true, sham link is retransmitted 
                            	**type**\:  bool
                            
                            .. attribute:: is_retransmissionvirtual_link
                            
                            	If true, virtual link is retransmitted 
                            	**type**\:  bool
                            
                            .. attribute:: neighbor_address
                            
                            	Neighbor address
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: retransmission_area_db
                            
                            	List of area scope entries
                            	**type**\: list of  :py:class:`RetransmissionAreaDb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable.Retransmission.RetransmissionAreaDb>`
                            
                            .. attribute:: retransmission_asdb
                            
                            	List of AS scope entries
                            	**type**\: list of  :py:class:`RetransmissionAsdb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable.Retransmission.RetransmissionAsdb>`
                            
                            .. attribute:: retransmission_length
                            
                            	Retransmission queue length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: retransmission_neighbor_address
                            
                            	Neighbor IP address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: retransmission_sham_link_id
                            
                            	Retransmission sham link ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: retransmission_timer
                            
                            	Amount of time remaining on retransmission timer (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: retransmissionvirtual_link_db
                            
                            	List of virtual link scope entries 
                            	**type**\: list of  :py:class:`RetransmissionvirtualLinkDb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable.Retransmission.RetransmissionvirtualLinkDb>`
                            
                            .. attribute:: retransmissionvirtual_link_id
                            
                            	Retransmission virtual link ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.is_retransmission_sham_link = None
                                self.is_retransmissionvirtual_link = None
                                self.neighbor_address = None
                                self.retransmission_area_db = YList()
                                self.retransmission_area_db.parent = self
                                self.retransmission_area_db.name = 'retransmission_area_db'
                                self.retransmission_asdb = YList()
                                self.retransmission_asdb.parent = self
                                self.retransmission_asdb.name = 'retransmission_asdb'
                                self.retransmission_length = None
                                self.retransmission_neighbor_address = None
                                self.retransmission_sham_link_id = None
                                self.retransmission_timer = None
                                self.retransmissionvirtual_link_db = YList()
                                self.retransmissionvirtual_link_db.parent = self
                                self.retransmissionvirtual_link_db.name = 'retransmissionvirtual_link_db'
                                self.retransmissionvirtual_link_id = None


                            class RetransmissionvirtualLinkDb(object):
                                """
                                List of virtual link scope entries 
                                
                                .. attribute:: header_advertising_router
                                
                                	Router ID of the advertising router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_age
                                
                                	Age of the LSA (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: header_lsa_id
                                
                                	LSA ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                .. attribute:: header_sequence_number
                                
                                	Current LSA sequence number
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.header_advertising_router = None
                                    self.header_lsa_age = None
                                    self.header_lsa_id = None
                                    self.header_lsa_type = None
                                    self.header_sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmissionvirtual-link-db'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.header_advertising_router is not None:
                                        return True

                                    if self.header_lsa_age is not None:
                                        return True

                                    if self.header_lsa_id is not None:
                                        return True

                                    if self.header_lsa_type is not None:
                                        return True

                                    if self.header_sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable.Retransmission.RetransmissionvirtualLinkDb']['meta_info']


                            class RetransmissionAreaDb(object):
                                """
                                List of area scope entries
                                
                                .. attribute:: header_advertising_router
                                
                                	Router ID of the advertising router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_age
                                
                                	Age of the LSA (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: header_lsa_id
                                
                                	LSA ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                .. attribute:: header_sequence_number
                                
                                	Current LSA sequence number
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.header_advertising_router = None
                                    self.header_lsa_age = None
                                    self.header_lsa_id = None
                                    self.header_lsa_type = None
                                    self.header_sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-area-db'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.header_advertising_router is not None:
                                        return True

                                    if self.header_lsa_age is not None:
                                        return True

                                    if self.header_lsa_id is not None:
                                        return True

                                    if self.header_lsa_type is not None:
                                        return True

                                    if self.header_sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable.Retransmission.RetransmissionAreaDb']['meta_info']


                            class RetransmissionAsdb(object):
                                """
                                List of AS scope entries
                                
                                .. attribute:: header_advertising_router
                                
                                	Router ID of the advertising router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_age
                                
                                	Age of the LSA (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: header_lsa_id
                                
                                	LSA ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: header_lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                .. attribute:: header_sequence_number
                                
                                	Current LSA sequence number
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.header_advertising_router = None
                                    self.header_lsa_age = None
                                    self.header_lsa_id = None
                                    self.header_lsa_type = None
                                    self.header_sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-asdb'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.header_advertising_router is not None:
                                        return True

                                    if self.header_lsa_age is not None:
                                        return True

                                    if self.header_lsa_id is not None:
                                        return True

                                    if self.header_lsa_type is not None:
                                        return True

                                    if self.header_sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable.Retransmission.RetransmissionAsdb']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.is_retransmission_sham_link is not None:
                                    return True

                                if self.is_retransmissionvirtual_link is not None:
                                    return True

                                if self.neighbor_address is not None:
                                    return True

                                if self.retransmission_area_db is not None:
                                    for child_ref in self.retransmission_area_db:
                                        if child_ref._has_data():
                                            return True

                                if self.retransmission_asdb is not None:
                                    for child_ref in self.retransmission_asdb:
                                        if child_ref._has_data():
                                            return True

                                if self.retransmission_length is not None:
                                    return True

                                if self.retransmission_neighbor_address is not None:
                                    return True

                                if self.retransmission_sham_link_id is not None:
                                    return True

                                if self.retransmission_timer is not None:
                                    return True

                                if self.retransmissionvirtual_link_db is not None:
                                    for child_ref in self.retransmissionvirtual_link_db:
                                        if child_ref._has_data():
                                            return True

                                if self.retransmissionvirtual_link_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable.Retransmission']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-list-process-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.retransmission is not None:
                                for child_ref in self.retransmission:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.RetransmissionListProcessTable']['meta_info']


                    class DatabaseAreas(object):
                        """
                        Database area table
                        
                        .. attribute:: database_area
                        
                        	Area information
                        	**type**\: list of  :py:class:`DatabaseArea <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.database_area = YList()
                            self.database_area.parent = self
                            self.database_area.name = 'database_area'


                        class DatabaseArea(object):
                            """
                            Area information
                            
                            .. attribute:: area_id  <key>
                            
                            	Area ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: database_grace_lsa_s
                            
                            	Database Grace Information
                            	**type**\:  :py:class:`DatabaseGraceLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS>`
                            
                            .. attribute:: database_int_grace_lsa_s
                            
                            	Internal Grace LSA information
                            	**type**\:  :py:class:`DatabaseIntGraceLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS>`
                            
                            .. attribute:: database_int_inter_area_prefix_lsas
                            
                            	Internal Inter\-area Prefix LSA information
                            	**type**\:  :py:class:`DatabaseIntInterAreaPrefixLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas>`
                            
                            .. attribute:: database_int_inter_area_router_lsas
                            
                            	Internal Inter\-area Router LSA information
                            	**type**\:  :py:class:`DatabaseIntInterAreaRouterLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas>`
                            
                            .. attribute:: database_int_link_lsa_s
                            
                            	Internal Link  LSA information
                            	**type**\:  :py:class:`DatabaseIntLinkLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS>`
                            
                            .. attribute:: database_int_network_lsas
                            
                            	Internal Network LSA information
                            	**type**\:  :py:class:`DatabaseIntNetworkLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas>`
                            
                            .. attribute:: database_int_nssa_lsas
                            
                            	Internal NSSA LSA information
                            	**type**\:  :py:class:`DatabaseIntNssaLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas>`
                            
                            .. attribute:: database_int_prefix_lsas
                            
                            	Internal Prefix LSA information
                            	**type**\:  :py:class:`DatabaseIntPrefixLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas>`
                            
                            .. attribute:: database_int_router_lsas
                            
                            	Internal database Router LSA information
                            	**type**\:  :py:class:`DatabaseIntRouterLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas>`
                            
                            .. attribute:: database_int_unknown_area_lsas
                            
                            	Internal Unknown Area LSA information
                            	**type**\:  :py:class:`DatabaseIntUnknownAreaLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas>`
                            
                            .. attribute:: database_int_unknown_link_lsa_s
                            
                            	Internal Unknown Link  LSA information
                            	**type**\:  :py:class:`DatabaseIntUnknownLinkLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS>`
                            
                            .. attribute:: database_int_unknown_lsas
                            
                            	Internal Unknown LSA information
                            	**type**\:  :py:class:`DatabaseIntUnknownLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas>`
                            
                            .. attribute:: database_inter_area_prefix_lsas
                            
                            	Database Iner\-Area Prefix information
                            	**type**\:  :py:class:`DatabaseInterAreaPrefixLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas>`
                            
                            .. attribute:: database_inter_area_router_lsas
                            
                            	Database Iner\-Area Router information
                            	**type**\:  :py:class:`DatabaseInterAreaRouterLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas>`
                            
                            .. attribute:: database_link_lsa_s
                            
                            	Database Link Information
                            	**type**\:  :py:class:`DatabaseLinkLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS>`
                            
                            .. attribute:: database_lsas
                            
                            	Database LSA information
                            	**type**\:  :py:class:`DatabaseLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas>`
                            
                            .. attribute:: database_network_lsas
                            
                            	Database Network Information
                            	**type**\:  :py:class:`DatabaseNetworkLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas>`
                            
                            .. attribute:: database_nssa_lsas
                            
                            	Database NSSA Information
                            	**type**\:  :py:class:`DatabaseNssaLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas>`
                            
                            .. attribute:: database_prefix_lsas
                            
                            	Database Prefix Information
                            	**type**\:  :py:class:`DatabasePrefixLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas>`
                            
                            .. attribute:: database_router_lsas
                            
                            	Database Router LSA information
                            	**type**\:  :py:class:`DatabaseRouterLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas>`
                            
                            .. attribute:: database_unknown_area_lsas
                            
                            	Database Area Unknown Information
                            	**type**\:  :py:class:`DatabaseUnknownAreaLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas>`
                            
                            .. attribute:: database_unknown_link_lsa_s
                            
                            	Database Unknown Link Information
                            	**type**\:  :py:class:`DatabaseUnknownLinkLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS>`
                            
                            .. attribute:: database_unknown_lsas
                            
                            	Database Unknown Information
                            	**type**\:  :py:class:`DatabaseUnknownLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_id = None
                                self.database_grace_lsa_s = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS()
                                self.database_grace_lsa_s.parent = self
                                self.database_int_grace_lsa_s = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS()
                                self.database_int_grace_lsa_s.parent = self
                                self.database_int_inter_area_prefix_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas()
                                self.database_int_inter_area_prefix_lsas.parent = self
                                self.database_int_inter_area_router_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas()
                                self.database_int_inter_area_router_lsas.parent = self
                                self.database_int_link_lsa_s = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS()
                                self.database_int_link_lsa_s.parent = self
                                self.database_int_network_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas()
                                self.database_int_network_lsas.parent = self
                                self.database_int_nssa_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas()
                                self.database_int_nssa_lsas.parent = self
                                self.database_int_prefix_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas()
                                self.database_int_prefix_lsas.parent = self
                                self.database_int_router_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas()
                                self.database_int_router_lsas.parent = self
                                self.database_int_unknown_area_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas()
                                self.database_int_unknown_area_lsas.parent = self
                                self.database_int_unknown_link_lsa_s = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS()
                                self.database_int_unknown_link_lsa_s.parent = self
                                self.database_int_unknown_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas()
                                self.database_int_unknown_lsas.parent = self
                                self.database_inter_area_prefix_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas()
                                self.database_inter_area_prefix_lsas.parent = self
                                self.database_inter_area_router_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas()
                                self.database_inter_area_router_lsas.parent = self
                                self.database_link_lsa_s = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS()
                                self.database_link_lsa_s.parent = self
                                self.database_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas()
                                self.database_lsas.parent = self
                                self.database_network_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas()
                                self.database_network_lsas.parent = self
                                self.database_nssa_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas()
                                self.database_nssa_lsas.parent = self
                                self.database_prefix_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas()
                                self.database_prefix_lsas.parent = self
                                self.database_router_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas()
                                self.database_router_lsas.parent = self
                                self.database_unknown_area_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas()
                                self.database_unknown_area_lsas.parent = self
                                self.database_unknown_link_lsa_s = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS()
                                self.database_unknown_link_lsa_s.parent = self
                                self.database_unknown_lsas = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas()
                                self.database_unknown_lsas.parent = self


                            class DatabaseLsas(object):
                                """
                                Database LSA information
                                
                                .. attribute:: database_lsa
                                
                                	Database LSA information
                                	**type**\: list of  :py:class:`DatabaseLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_lsa = YList()
                                    self.database_lsa.parent = self
                                    self.database_lsa.name = 'database_lsa'


                                class DatabaseLsa(object):
                                    """
                                    Database LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name
                                    
                                    	LSA interface name 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: links
                                    
                                    	Number of links
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_router_id
                                    
                                    	LSA router ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 address Prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: reference_lsa_id
                                    
                                    	Reference LSA ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: reference_type
                                    
                                    	Reference type 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: router_la_bits
                                    
                                    	Router LA bits 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Sham link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.links = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_router_id = None
                                        self.lsa_type = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.reference_lsa_id = None
                                        self.reference_type = None
                                        self.router_la_bits = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.links is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_router_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.reference_lsa_id is not None:
                                            return True

                                        if self.reference_type is not None:
                                            return True

                                        if self.router_la_bits is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_lsa is not None:
                                        for child_ref in self.database_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLsas']['meta_info']


                            class DatabaseIntInterAreaPrefixLsas(object):
                                """
                                Internal Inter\-area Prefix LSA information
                                
                                .. attribute:: database_int_inter_area_prefix_lsa
                                
                                	Internal database Inter\-Area Prefix LSA information
                                	**type**\: list of  :py:class:`DatabaseIntInterAreaPrefixLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_inter_area_prefix_lsa = YList()
                                    self.database_int_inter_area_prefix_lsa.parent = self
                                    self.database_int_inter_area_prefix_lsa.name = 'database_int_inter_area_prefix_lsa'


                                class DatabaseIntInterAreaPrefixLsa(object):
                                    """
                                    Internal database Inter\-Area Prefix LSA
                                    information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA Information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: prefix
                                    
                                    	Prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: prefix_length_xr
                                    
                                    	Prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: prefix_xr
                                    
                                    	LSA address prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: priority
                                    
                                    	Prefix priority
                                    	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.prefix_length_xr = None
                                        self.prefix_xr = None
                                        self.priority = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA Information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-inter-area-prefix-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.prefix_length_xr is not None:
                                            return True

                                        if self.prefix_xr is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-inter-area-prefix-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_inter_area_prefix_lsa is not None:
                                        for child_ref in self.database_int_inter_area_prefix_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas']['meta_info']


                            class DatabaseIntUnknownAreaLsas(object):
                                """
                                Internal Unknown Area LSA information
                                
                                .. attribute:: database_int_unknown_area_lsa
                                
                                	Internal database Unknown LSA information
                                	**type**\: list of  :py:class:`DatabaseIntUnknownAreaLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_unknown_area_lsa = YList()
                                    self.database_int_unknown_area_lsa.parent = self
                                    self.database_int_unknown_area_lsa.name = 'database_int_unknown_area_lsa'


                                class DatabaseIntUnknownAreaLsa(object):
                                    """
                                    Internal database Unknown LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name_xr
                                    
                                    	LSA interface name 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Shamlink ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name_xr = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-area-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name_xr is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-area-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_unknown_area_lsa is not None:
                                        for child_ref in self.database_int_unknown_area_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas']['meta_info']


                            class DatabaseIntLinkLsaS(object):
                                """
                                Internal Link  LSA information
                                
                                .. attribute:: database_int_link_lsa
                                
                                	Internal database Link LSA information
                                	**type**\: list of  :py:class:`DatabaseIntLinkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_link_lsa = YList()
                                    self.database_int_link_lsa.parent = self
                                    self.database_int_link_lsa.name = 'database_int_link_lsa'


                                class DatabaseIntLinkLsa(object):
                                    """
                                    Internal database Link LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: interface_name_xr
                                    
                                    	LSA interface handle
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_link_local
                                    
                                    	LSA link local 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 prefix 
                                    	**type**\: list of  :py:class:`Prefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.Prefix>`
                                    
                                    .. attribute:: router_priority
                                    
                                    	Router priority 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Sham link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name = None
                                        self.interface_name_xr = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_link_local = None
                                        self.lsa_type = None
                                        self.prefix = YList()
                                        self.prefix.parent = self
                                        self.prefix.name = 'prefix'
                                        self.router_priority = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaDetail']['meta_info']


                                    class Prefix(object):
                                        """
                                        OSPFv3 prefix 
                                        
                                        .. attribute:: ospfv3_prefix_length
                                        
                                        	OSPFv3 prefix length 
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ospfv3_prefix_metric
                                        
                                        	OSPFv3 prefix metric 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: ospfv3_prefix_options
                                        
                                        	OSPFv3 prefix options 
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: prefix
                                        
                                        	OSPFv3 prefix 
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: priority
                                        
                                        	Prefix priority
                                        	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.ospfv3_prefix_length = None
                                            self.ospfv3_prefix_metric = None
                                            self.ospfv3_prefix_options = None
                                            self.prefix = None
                                            self.priority = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:prefix'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.ospfv3_prefix_length is not None:
                                                return True

                                            if self.ospfv3_prefix_metric is not None:
                                                return True

                                            if self.ospfv3_prefix_options is not None:
                                                return True

                                            if self.prefix is not None:
                                                return True

                                            if self.priority is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.Prefix']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-link-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name is not None:
                                            return True

                                        if self.interface_name_xr is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_link_local is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.prefix is not None:
                                            for child_ref in self.prefix:
                                                if child_ref._has_data():
                                                    return True

                                        if self.router_priority is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-link-lsa-s'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_link_lsa is not None:
                                        for child_ref in self.database_int_link_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS']['meta_info']


                            class DatabaseIntInterAreaRouterLsas(object):
                                """
                                Internal Inter\-area Router LSA information
                                
                                .. attribute:: database_int_inter_area_router_lsa
                                
                                	Internal database Inter\-Area Router LSA information
                                	**type**\: list of  :py:class:`DatabaseIntInterAreaRouterLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_inter_area_router_lsa = YList()
                                    self.database_int_inter_area_router_lsa.parent = self
                                    self.database_int_inter_area_router_lsa.name = 'database_int_inter_area_router_lsa'


                                class DatabaseIntInterAreaRouterLsa(object):
                                    """
                                    Internal database Inter\-Area Router LSA
                                    information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: destination_router
                                    
                                    	Destination Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_router_id
                                    
                                    	LSA router ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.destination_router = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_router_id = None
                                        self.lsa_type = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-inter-area-router-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.destination_router is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_router_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-inter-area-router-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_inter_area_router_lsa is not None:
                                        for child_ref in self.database_int_inter_area_router_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas']['meta_info']


                            class DatabaseUnknownAreaLsas(object):
                                """
                                Database Area Unknown Information
                                
                                .. attribute:: database_unknown_area_lsa
                                
                                	Database Unknown LSA information
                                	**type**\: list of  :py:class:`DatabaseUnknownAreaLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_unknown_area_lsa = YList()
                                    self.database_unknown_area_lsa.parent = self
                                    self.database_unknown_area_lsa.name = 'database_unknown_area_lsa'


                                class DatabaseUnknownAreaLsa(object):
                                    """
                                    Database Unknown LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name_xr
                                    
                                    	LSA interface name 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Shamlink ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name_xr = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-area-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name_xr is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-area-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_unknown_area_lsa is not None:
                                        for child_ref in self.database_unknown_area_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas']['meta_info']


                            class DatabaseNssaLsas(object):
                                """
                                Database NSSA Information
                                
                                .. attribute:: database_nssa_lsa
                                
                                	Database NSSA LSA information
                                	**type**\: list of  :py:class:`DatabaseNssaLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_nssa_lsa = YList()
                                    self.database_nssa_lsa.parent = self
                                    self.database_nssa_lsa.name = 'database_nssa_lsa'


                                class DatabaseNssaLsa(object):
                                    """
                                    Database NSSA LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: external_tag
                                    
                                    	Route Tag
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: forwarding_address
                                    
                                    	Forwarding Address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: is_forwarding_address_set
                                    
                                    	If true, forwarding address is set 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA Information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: metric_type
                                    
                                    	Metric type 
                                    	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                                    
                                    .. attribute:: prefix_length_xr
                                    
                                    	Prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: prefix_xr
                                    
                                    	IPV6 address prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: priority
                                    
                                    	Prefix priority
                                    	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                    
                                    .. attribute:: tos_cost
                                    
                                    	Type of service cost metric 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.external_tag = None
                                        self.forwarding_address = None
                                        self.is_forwarding_address_set = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.metric_type = None
                                        self.prefix_length_xr = None
                                        self.prefix_xr = None
                                        self.priority = None
                                        self.tos_cost = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA Information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-nssa-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.external_tag is not None:
                                            return True

                                        if self.forwarding_address is not None:
                                            return True

                                        if self.is_forwarding_address_set is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.metric_type is not None:
                                            return True

                                        if self.prefix_length_xr is not None:
                                            return True

                                        if self.prefix_xr is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        if self.tos_cost is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-nssa-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_nssa_lsa is not None:
                                        for child_ref in self.database_nssa_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas']['meta_info']


                            class DatabaseIntUnknownLsas(object):
                                """
                                Internal Unknown LSA information
                                
                                .. attribute:: database_int_unknown_lsa
                                
                                	Internal database Unknown LSA information
                                	**type**\: list of  :py:class:`DatabaseIntUnknownLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_unknown_lsa = YList()
                                    self.database_int_unknown_lsa.parent = self
                                    self.database_int_unknown_lsa.name = 'database_int_unknown_lsa'


                                class DatabaseIntUnknownLsa(object):
                                    """
                                    Internal database Unknown LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name_xr
                                    
                                    	LSA interface name 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Shamlink ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name_xr = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name_xr is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_unknown_lsa is not None:
                                        for child_ref in self.database_int_unknown_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas']['meta_info']


                            class DatabaseIntNssaLsas(object):
                                """
                                Internal NSSA LSA information
                                
                                .. attribute:: database_int_nssa_lsa
                                
                                	Internal database NSSA LSA information
                                	**type**\: list of  :py:class:`DatabaseIntNssaLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_nssa_lsa = YList()
                                    self.database_int_nssa_lsa.parent = self
                                    self.database_int_nssa_lsa.name = 'database_int_nssa_lsa'


                                class DatabaseIntNssaLsa(object):
                                    """
                                    Internal database NSSA LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: external_tag
                                    
                                    	Route Tag
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: forwarding_address
                                    
                                    	Forwarding Address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: is_forwarding_address_set
                                    
                                    	If true, forwarding address is set 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA Information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: metric_type
                                    
                                    	Metric type 
                                    	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                                    
                                    .. attribute:: prefix_length_xr
                                    
                                    	Prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: prefix_xr
                                    
                                    	IPV6 address prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: priority
                                    
                                    	Prefix priority
                                    	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                    
                                    .. attribute:: tos_cost
                                    
                                    	Type of service cost metric 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.external_tag = None
                                        self.forwarding_address = None
                                        self.is_forwarding_address_set = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.metric_type = None
                                        self.prefix_length_xr = None
                                        self.prefix_xr = None
                                        self.priority = None
                                        self.tos_cost = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA Information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-nssa-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.external_tag is not None:
                                            return True

                                        if self.forwarding_address is not None:
                                            return True

                                        if self.is_forwarding_address_set is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.metric_type is not None:
                                            return True

                                        if self.prefix_length_xr is not None:
                                            return True

                                        if self.prefix_xr is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        if self.tos_cost is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-nssa-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_nssa_lsa is not None:
                                        for child_ref in self.database_int_nssa_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas']['meta_info']


                            class DatabaseIntUnknownLinkLsaS(object):
                                """
                                Internal Unknown Link  LSA information
                                
                                .. attribute:: database_int_unknown_link_lsa
                                
                                	Internal Database Unknown Link LSA information
                                	**type**\: list of  :py:class:`DatabaseIntUnknownLinkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_unknown_link_lsa = YList()
                                    self.database_int_unknown_link_lsa.parent = self
                                    self.database_int_unknown_link_lsa.name = 'database_int_unknown_link_lsa'


                                class DatabaseIntUnknownLinkLsa(object):
                                    """
                                    Internal Database Unknown Link LSA
                                    information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: interface_name_xr
                                    
                                    	LSA interface name 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Shamlink ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name = None
                                        self.interface_name_xr = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-link-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name is not None:
                                            return True

                                        if self.interface_name_xr is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-link-lsa-s'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_unknown_link_lsa is not None:
                                        for child_ref in self.database_int_unknown_link_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS']['meta_info']


                            class DatabaseInterAreaPrefixLsas(object):
                                """
                                Database Iner\-Area Prefix information
                                
                                .. attribute:: database_inter_area_prefix_lsa
                                
                                	Database Inter\-Area Prefix LSA information
                                	**type**\: list of  :py:class:`DatabaseInterAreaPrefixLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_inter_area_prefix_lsa = YList()
                                    self.database_inter_area_prefix_lsa.parent = self
                                    self.database_inter_area_prefix_lsa.name = 'database_inter_area_prefix_lsa'


                                class DatabaseInterAreaPrefixLsa(object):
                                    """
                                    Database Inter\-Area Prefix LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA Information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: prefix
                                    
                                    	Prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: prefix_length_xr
                                    
                                    	Prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: prefix_xr
                                    
                                    	LSA address prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: priority
                                    
                                    	Prefix priority
                                    	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.prefix_length_xr = None
                                        self.prefix_xr = None
                                        self.priority = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA Information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-inter-area-prefix-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.prefix_length_xr is not None:
                                            return True

                                        if self.prefix_xr is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-inter-area-prefix-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_inter_area_prefix_lsa is not None:
                                        for child_ref in self.database_inter_area_prefix_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas']['meta_info']


                            class DatabaseIntNetworkLsas(object):
                                """
                                Internal Network LSA information
                                
                                .. attribute:: database_int_network_lsa
                                
                                	Internal database Network LSA information
                                	**type**\: list of  :py:class:`DatabaseIntNetworkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_network_lsa = YList()
                                    self.database_int_network_lsa.parent = self
                                    self.database_int_network_lsa.name = 'database_int_network_lsa'


                                class DatabaseIntNetworkLsa(object):
                                    """
                                    Internal database Network LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: neighbor_router
                                    
                                    	Neighbor router list
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.neighbor_router = YLeafList()
                                        self.neighbor_router.parent = self
                                        self.neighbor_router.name = 'neighbor_router'


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-network-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.neighbor_router is not None:
                                            for child in self.neighbor_router:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-network-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_network_lsa is not None:
                                        for child_ref in self.database_int_network_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas']['meta_info']


                            class DatabaseUnknownLinkLsaS(object):
                                """
                                Database Unknown Link Information
                                
                                .. attribute:: database_unknown_link_lsa
                                
                                	Database Unknown Link LSA information
                                	**type**\: list of  :py:class:`DatabaseUnknownLinkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_unknown_link_lsa = YList()
                                    self.database_unknown_link_lsa.parent = self
                                    self.database_unknown_link_lsa.name = 'database_unknown_link_lsa'


                                class DatabaseUnknownLinkLsa(object):
                                    """
                                    Database Unknown Link LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: interface_name_xr
                                    
                                    	LSA interface name 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Shamlink ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name = None
                                        self.interface_name_xr = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-link-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name is not None:
                                            return True

                                        if self.interface_name_xr is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-link-lsa-s'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_unknown_link_lsa is not None:
                                        for child_ref in self.database_unknown_link_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS']['meta_info']


                            class DatabaseInterAreaRouterLsas(object):
                                """
                                Database Iner\-Area Router information
                                
                                .. attribute:: database_inter_area_router_lsa
                                
                                	Database Inter\-Area Router LSA information
                                	**type**\: list of  :py:class:`DatabaseInterAreaRouterLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_inter_area_router_lsa = YList()
                                    self.database_inter_area_router_lsa.parent = self
                                    self.database_inter_area_router_lsa.name = 'database_inter_area_router_lsa'


                                class DatabaseInterAreaRouterLsa(object):
                                    """
                                    Database Inter\-Area Router LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: destination_router
                                    
                                    	Destination Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_router_id
                                    
                                    	LSA router ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.destination_router = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_router_id = None
                                        self.lsa_type = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-inter-area-router-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.destination_router is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_router_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-inter-area-router-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_inter_area_router_lsa is not None:
                                        for child_ref in self.database_inter_area_router_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas']['meta_info']


                            class DatabasePrefixLsas(object):
                                """
                                Database Prefix Information
                                
                                .. attribute:: database_prefix_lsa
                                
                                	Database Network LSA information
                                	**type**\: list of  :py:class:`DatabasePrefixLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_prefix_lsa = YList()
                                    self.database_prefix_lsa.parent = self
                                    self.database_prefix_lsa.name = 'database_prefix_lsa'


                                class DatabasePrefixLsa(object):
                                    """
                                    Database Network LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 prefix 
                                    	**type**\: list of  :py:class:`Prefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.Prefix>`
                                    
                                    .. attribute:: reference_advertised_router
                                    
                                    	Reference advertised router 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: reference_lsa_id
                                    
                                    	Reference LSA ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: reference_type
                                    
                                    	Reference type
                                    	**type**\:  :py:class:`Ospfv3PrefixLsaRefEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3PrefixLsaRefEnum>`
                                    
                                    .. attribute:: reference_type_xr
                                    
                                    	Reference type 
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.prefix = YList()
                                        self.prefix.parent = self
                                        self.prefix.name = 'prefix'
                                        self.reference_advertised_router = None
                                        self.reference_lsa_id = None
                                        self.reference_type = None
                                        self.reference_type_xr = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaDetail']['meta_info']


                                    class Prefix(object):
                                        """
                                        OSPFv3 prefix 
                                        
                                        .. attribute:: ospfv3_prefix_length
                                        
                                        	OSPFv3 prefix length 
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ospfv3_prefix_metric
                                        
                                        	OSPFv3 prefix metric 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: ospfv3_prefix_options
                                        
                                        	OSPFv3 prefix options 
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: prefix
                                        
                                        	OSPFv3 prefix 
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: priority
                                        
                                        	Prefix priority
                                        	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.ospfv3_prefix_length = None
                                            self.ospfv3_prefix_metric = None
                                            self.ospfv3_prefix_options = None
                                            self.prefix = None
                                            self.priority = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:prefix'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.ospfv3_prefix_length is not None:
                                                return True

                                            if self.ospfv3_prefix_metric is not None:
                                                return True

                                            if self.ospfv3_prefix_options is not None:
                                                return True

                                            if self.prefix is not None:
                                                return True

                                            if self.priority is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.Prefix']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-prefix-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.prefix is not None:
                                            for child_ref in self.prefix:
                                                if child_ref._has_data():
                                                    return True

                                        if self.reference_advertised_router is not None:
                                            return True

                                        if self.reference_lsa_id is not None:
                                            return True

                                        if self.reference_type is not None:
                                            return True

                                        if self.reference_type_xr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-prefix-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_prefix_lsa is not None:
                                        for child_ref in self.database_prefix_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas']['meta_info']


                            class DatabaseGraceLsaS(object):
                                """
                                Database Grace Information
                                
                                .. attribute:: database_grace_lsa
                                
                                	Database Grace LSA information
                                	**type**\: list of  :py:class:`DatabaseGraceLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_grace_lsa = YList()
                                    self.database_grace_lsa.parent = self
                                    self.database_grace_lsa.name = 'database_grace_lsa'


                                class DatabaseGraceLsa(object):
                                    """
                                    Database Grace LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: grace_period
                                    
                                    	The grace periord where helper routers should wait before advertising it fully adjacent(s) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: grace_reason
                                    
                                    	Reason for router restart
                                    	**type**\:  :py:class:`Ospfv3GracefulRestartReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3GracefulRestartReasonEnum>`
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.grace_period = None
                                        self.grace_reason = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-grace-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.grace_period is not None:
                                            return True

                                        if self.grace_reason is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-grace-lsa-s'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_grace_lsa is not None:
                                        for child_ref in self.database_grace_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS']['meta_info']


                            class DatabaseIntPrefixLsas(object):
                                """
                                Internal Prefix LSA information
                                
                                .. attribute:: database_int_prefix_lsa
                                
                                	Internal database Network LSA information
                                	**type**\: list of  :py:class:`DatabaseIntPrefixLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_prefix_lsa = YList()
                                    self.database_int_prefix_lsa.parent = self
                                    self.database_int_prefix_lsa.name = 'database_int_prefix_lsa'


                                class DatabaseIntPrefixLsa(object):
                                    """
                                    Internal database Network LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 prefix 
                                    	**type**\: list of  :py:class:`Prefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.Prefix>`
                                    
                                    .. attribute:: reference_advertised_router
                                    
                                    	Reference advertised router 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: reference_lsa_id
                                    
                                    	Reference LSA ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: reference_type
                                    
                                    	Reference type
                                    	**type**\:  :py:class:`Ospfv3PrefixLsaRefEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3PrefixLsaRefEnum>`
                                    
                                    .. attribute:: reference_type_xr
                                    
                                    	Reference type 
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.prefix = YList()
                                        self.prefix.parent = self
                                        self.prefix.name = 'prefix'
                                        self.reference_advertised_router = None
                                        self.reference_lsa_id = None
                                        self.reference_type = None
                                        self.reference_type_xr = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaDetail']['meta_info']


                                    class Prefix(object):
                                        """
                                        OSPFv3 prefix 
                                        
                                        .. attribute:: ospfv3_prefix_length
                                        
                                        	OSPFv3 prefix length 
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ospfv3_prefix_metric
                                        
                                        	OSPFv3 prefix metric 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: ospfv3_prefix_options
                                        
                                        	OSPFv3 prefix options 
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: prefix
                                        
                                        	OSPFv3 prefix 
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: priority
                                        
                                        	Prefix priority
                                        	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.ospfv3_prefix_length = None
                                            self.ospfv3_prefix_metric = None
                                            self.ospfv3_prefix_options = None
                                            self.prefix = None
                                            self.priority = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:prefix'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.ospfv3_prefix_length is not None:
                                                return True

                                            if self.ospfv3_prefix_metric is not None:
                                                return True

                                            if self.ospfv3_prefix_options is not None:
                                                return True

                                            if self.prefix is not None:
                                                return True

                                            if self.priority is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.Prefix']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-prefix-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.prefix is not None:
                                            for child_ref in self.prefix:
                                                if child_ref._has_data():
                                                    return True

                                        if self.reference_advertised_router is not None:
                                            return True

                                        if self.reference_lsa_id is not None:
                                            return True

                                        if self.reference_type is not None:
                                            return True

                                        if self.reference_type_xr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-prefix-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_prefix_lsa is not None:
                                        for child_ref in self.database_int_prefix_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas']['meta_info']


                            class DatabaseIntGraceLsaS(object):
                                """
                                Internal Grace LSA information
                                
                                .. attribute:: database_int_grace_lsa
                                
                                	Internal database Grace LSA information
                                	**type**\: list of  :py:class:`DatabaseIntGraceLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_grace_lsa = YList()
                                    self.database_int_grace_lsa.parent = self
                                    self.database_int_grace_lsa.name = 'database_int_grace_lsa'


                                class DatabaseIntGraceLsa(object):
                                    """
                                    Internal database Grace LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: grace_period
                                    
                                    	The grace periord where helper routers should wait before advertising it fully adjacent(s) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: grace_reason
                                    
                                    	Reason for router restart
                                    	**type**\:  :py:class:`Ospfv3GracefulRestartReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3GracefulRestartReasonEnum>`
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.grace_period = None
                                        self.grace_reason = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-grace-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.grace_period is not None:
                                            return True

                                        if self.grace_reason is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-grace-lsa-s'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_grace_lsa is not None:
                                        for child_ref in self.database_int_grace_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS']['meta_info']


                            class DatabaseUnknownLsas(object):
                                """
                                Database Unknown Information
                                
                                .. attribute:: database_unknown_lsa
                                
                                	Database Unknown LSA information
                                	**type**\: list of  :py:class:`DatabaseUnknownLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_unknown_lsa = YList()
                                    self.database_unknown_lsa.parent = self
                                    self.database_unknown_lsa.name = 'database_unknown_lsa'


                                class DatabaseUnknownLsa(object):
                                    """
                                    Database Unknown LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name_xr
                                    
                                    	LSA interface name 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Shamlink ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name_xr = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name_xr is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_unknown_lsa is not None:
                                        for child_ref in self.database_unknown_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas']['meta_info']


                            class DatabaseRouterLsas(object):
                                """
                                Database Router LSA information
                                
                                .. attribute:: database_router_lsa
                                
                                	Database Router LSA information
                                	**type**\: list of  :py:class:`DatabaseRouterLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_router_lsa = YList()
                                    self.database_router_lsa.parent = self
                                    self.database_router_lsa.name = 'database_router_lsa'


                                class DatabaseRouterLsa(object):
                                    """
                                    Database Router LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: link
                                    
                                    	List of links in this LSA
                                    	**type**\: list of  :py:class:`Link <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.Link>`
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: router_la_bits
                                    
                                    	Router LA bits 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: rpf_path
                                    
                                    	Router LSA Reverse\-Path Forwarding information 
                                    	**type**\:  :py:class:`RpfPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.RpfPath>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.link = YList()
                                        self.link.parent = self
                                        self.link.name = 'link'
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.router_la_bits = None
                                        self.rpf_path = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.RpfPath()
                                        self.rpf_path.parent = self


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaDetail']['meta_info']


                                    class RpfPath(object):
                                        """
                                        Router LSA Reverse\-Path Forwarding information 
                                        
                                        .. attribute:: interface_name
                                        
                                        	RPF multicast IDB 
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: rpf_multicast_next_hop
                                        
                                        	RPF multicast next hop 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.rpf_multicast_next_hop = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:rpf-path'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.rpf_multicast_next_hop is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.RpfPath']['meta_info']


                                    class Link(object):
                                        """
                                        List of links in this LSA
                                        
                                        .. attribute:: link_interface_id
                                        
                                        	LSA link interface ID 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_metric
                                        
                                        	LSA link metric 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: link_neighbor_interface_id
                                        
                                        	LSA link neighbor interface ID 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_neighbor_router_id
                                        
                                        	LSA link neigbhor router id 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_type
                                        
                                        	Type of link
                                        	**type**\:  :py:class:`Ospfv3LinkEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LinkEnum>`
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.link_interface_id = None
                                            self.link_metric = None
                                            self.link_neighbor_interface_id = None
                                            self.link_neighbor_router_id = None
                                            self.link_type = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:link'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.link_interface_id is not None:
                                                return True

                                            if self.link_metric is not None:
                                                return True

                                            if self.link_neighbor_interface_id is not None:
                                                return True

                                            if self.link_neighbor_router_id is not None:
                                                return True

                                            if self.link_type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.Link']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-router-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.link is not None:
                                            for child_ref in self.link:
                                                if child_ref._has_data():
                                                    return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.router_la_bits is not None:
                                            return True

                                        if self.rpf_path is not None and self.rpf_path._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-router-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_router_lsa is not None:
                                        for child_ref in self.database_router_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas']['meta_info']


                            class DatabaseLinkLsaS(object):
                                """
                                Database Link Information
                                
                                .. attribute:: database_link_lsa
                                
                                	Database Link LSA information
                                	**type**\: list of  :py:class:`DatabaseLinkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_link_lsa = YList()
                                    self.database_link_lsa.parent = self
                                    self.database_link_lsa.name = 'database_link_lsa'


                                class DatabaseLinkLsa(object):
                                    """
                                    Database Link LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: interface_name
                                    
                                    	Interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: interface_name_xr
                                    
                                    	LSA interface handle
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: is_sham_link
                                    
                                    	If true, it is a sham link
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_virtual_link
                                    
                                    	If true, it is a virtual link
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_link_local
                                    
                                    	LSA link local 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 prefix 
                                    	**type**\: list of  :py:class:`Prefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.Prefix>`
                                    
                                    .. attribute:: router_priority
                                    
                                    	Router priority 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: sham_link_id
                                    
                                    	Sham link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: virtual_link_id
                                    
                                    	Virtual link ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.interface_name = None
                                        self.interface_name_xr = None
                                        self.is_sham_link = None
                                        self.is_virtual_link = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_link_local = None
                                        self.lsa_type = None
                                        self.prefix = YList()
                                        self.prefix.parent = self
                                        self.prefix.name = 'prefix'
                                        self.router_priority = None
                                        self.sham_link_id = None
                                        self.virtual_link_id = None


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaDetail']['meta_info']


                                    class Prefix(object):
                                        """
                                        OSPFv3 prefix 
                                        
                                        .. attribute:: ospfv3_prefix_length
                                        
                                        	OSPFv3 prefix length 
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ospfv3_prefix_metric
                                        
                                        	OSPFv3 prefix metric 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: ospfv3_prefix_options
                                        
                                        	OSPFv3 prefix options 
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: prefix
                                        
                                        	OSPFv3 prefix 
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: priority
                                        
                                        	Prefix priority
                                        	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.ospfv3_prefix_length = None
                                            self.ospfv3_prefix_metric = None
                                            self.ospfv3_prefix_options = None
                                            self.prefix = None
                                            self.priority = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:prefix'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.ospfv3_prefix_length is not None:
                                                return True

                                            if self.ospfv3_prefix_metric is not None:
                                                return True

                                            if self.ospfv3_prefix_options is not None:
                                                return True

                                            if self.prefix is not None:
                                                return True

                                            if self.priority is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.Prefix']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-link-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.interface_name is not None:
                                            return True

                                        if self.interface_name_xr is not None:
                                            return True

                                        if self.is_sham_link is not None:
                                            return True

                                        if self.is_virtual_link is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_link_local is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.prefix is not None:
                                            for child_ref in self.prefix:
                                                if child_ref._has_data():
                                                    return True

                                        if self.router_priority is not None:
                                            return True

                                        if self.sham_link_id is not None:
                                            return True

                                        if self.virtual_link_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-link-lsa-s'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_link_lsa is not None:
                                        for child_ref in self.database_link_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS']['meta_info']


                            class DatabaseIntRouterLsas(object):
                                """
                                Internal database Router LSA information
                                
                                .. attribute:: database_int_router_lsa
                                
                                	Inernal database Router LSA information
                                	**type**\: list of  :py:class:`DatabaseIntRouterLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_int_router_lsa = YList()
                                    self.database_int_router_lsa.parent = self
                                    self.database_int_router_lsa.name = 'database_int_router_lsa'


                                class DatabaseIntRouterLsa(object):
                                    """
                                    Inernal database Router LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: link
                                    
                                    	List of links in this LSA
                                    	**type**\: list of  :py:class:`Link <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.Link>`
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: router_la_bits
                                    
                                    	Router LA bits 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: rpf_path
                                    
                                    	Router LSA Reverse\-Path Forwarding information 
                                    	**type**\:  :py:class:`RpfPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.RpfPath>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.link = YList()
                                        self.link.parent = self
                                        self.link.name = 'link'
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.router_la_bits = None
                                        self.rpf_path = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.RpfPath()
                                        self.rpf_path.parent = self


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaDetail']['meta_info']


                                    class RpfPath(object):
                                        """
                                        Router LSA Reverse\-Path Forwarding information 
                                        
                                        .. attribute:: interface_name
                                        
                                        	RPF multicast IDB 
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: rpf_multicast_next_hop
                                        
                                        	RPF multicast next hop 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.rpf_multicast_next_hop = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:rpf-path'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.rpf_multicast_next_hop is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.RpfPath']['meta_info']


                                    class Link(object):
                                        """
                                        List of links in this LSA
                                        
                                        .. attribute:: link_interface_id
                                        
                                        	LSA link interface ID 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_metric
                                        
                                        	LSA link metric 
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: link_neighbor_interface_id
                                        
                                        	LSA link neighbor interface ID 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_neighbor_router_id
                                        
                                        	LSA link neigbhor router id 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_type
                                        
                                        	Type of link
                                        	**type**\:  :py:class:`Ospfv3LinkEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LinkEnum>`
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.link_interface_id = None
                                            self.link_metric = None
                                            self.link_neighbor_interface_id = None
                                            self.link_neighbor_router_id = None
                                            self.link_type = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:link'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.link_interface_id is not None:
                                                return True

                                            if self.link_metric is not None:
                                                return True

                                            if self.link_neighbor_interface_id is not None:
                                                return True

                                            if self.link_neighbor_router_id is not None:
                                                return True

                                            if self.link_type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.Link']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-router-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.link is not None:
                                            for child_ref in self.link:
                                                if child_ref._has_data():
                                                    return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.router_la_bits is not None:
                                            return True

                                        if self.rpf_path is not None and self.rpf_path._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-router-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_int_router_lsa is not None:
                                        for child_ref in self.database_int_router_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas']['meta_info']


                            class DatabaseNetworkLsas(object):
                                """
                                Database Network Information
                                
                                .. attribute:: database_network_lsa
                                
                                	Database Network LSA information
                                	**type**\: list of  :py:class:`DatabaseNetworkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.database_network_lsa = YList()
                                    self.database_network_lsa.parent = self
                                    self.database_network_lsa.name = 'database_network_lsa'


                                class DatabaseNetworkLsa(object):
                                    """
                                    Database Network LSA information
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Advertising Router ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ls_id
                                    
                                    	Link state ID
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: lsa_detail
                                    
                                    	Detailed LSA information
                                    	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaDetail>`
                                    
                                    .. attribute:: lsa_header
                                    
                                    	Header information 
                                    	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaHeader>`
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                    
                                    .. attribute:: neighbor_router
                                    
                                    	Neighbor router list
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.ls_id = None
                                        self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaDetail()
                                        self.lsa_detail.parent = self
                                        self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaHeader()
                                        self.lsa_header.parent = self
                                        self.lsa_type = None
                                        self.neighbor_router = YLeafList()
                                        self.neighbor_router.parent = self
                                        self.neighbor_router.name = 'neighbor_router'


                                    class LsaHeader(object):
                                        """
                                        Header information 
                                        
                                        .. attribute:: advertising_router
                                        
                                        	Router ID of Advertising Router
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: checksum
                                        
                                        	Checksum value
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: is_do_not_age_lsa
                                        
                                        	If true, Do Not Age this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_graceful_restart_active
                                        
                                        	If true, if grace restart is active 
                                        	**type**\:  bool
                                        
                                        .. attribute:: ls_id
                                        
                                        	LS ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_age
                                        
                                        	LSA's Age (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_area_id
                                        
                                        	Area ID in decimal or dotted\-decimal format
                                        	**type**\:  str
                                        
                                        	**range:** 0..16
                                        
                                        .. attribute:: lsa_type
                                        
                                        	LSA type
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: sequence_number
                                        
                                        	Current Sequence number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.advertising_router = None
                                            self.checksum = None
                                            self.is_do_not_age_lsa = None
                                            self.is_graceful_restart_active = None
                                            self.ls_id = None
                                            self.lsa_age = None
                                            self.lsa_area_id = None
                                            self.lsa_type = None
                                            self.sequence_number = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.advertising_router is not None:
                                                return True

                                            if self.checksum is not None:
                                                return True

                                            if self.is_do_not_age_lsa is not None:
                                                return True

                                            if self.is_graceful_restart_active is not None:
                                                return True

                                            if self.ls_id is not None:
                                                return True

                                            if self.lsa_age is not None:
                                                return True

                                            if self.lsa_area_id is not None:
                                                return True

                                            if self.lsa_type is not None:
                                                return True

                                            if self.sequence_number is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaHeader']['meta_info']


                                    class LsaDetail(object):
                                        """
                                        Detailed LSA information
                                        
                                        .. attribute:: free_time
                                        
                                        	The amount of time since the last check was made to free this LSA (s)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: is_acknowledged
                                        
                                        	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_advertising_router_reachable
                                        
                                        	If true, Advertising Router is reachable
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_deleted
                                        
                                        	If true, flag is set to delete this LSA 
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_flood_pending
                                        
                                        	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_maximum_aged
                                        
                                        	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_neighbor_exchange
                                        
                                        	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_no_delete
                                        
                                        	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_nsr_ack_pending
                                        
                                        	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_partial_spf
                                        
                                        	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_bit
                                        
                                        	If true, Routing Bit set on the LSA
                                        	**type**\:  bool
                                        
                                        .. attribute:: is_routing_table
                                        
                                        	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_flood_required_post_fail_over
                                        
                                        	LSA flood required after FO
                                        	**type**\:  bool
                                        
                                        .. attribute:: lsa_length
                                        
                                        	Length of the LSA
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: lsa_sync_state
                                        
                                        	State of LSA sync with active
                                        	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                        
                                        .. attribute:: minute_table_index
                                        
                                        	Minute table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: nsr_flood_required
                                        
                                        	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                        	**type**\:  bool
                                        
                                        .. attribute:: rate_limit
                                        
                                        	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                        	**type**\:  bool
                                        
                                        .. attribute:: second_table_index
                                        
                                        	Second table index
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.free_time = None
                                            self.is_acknowledged = None
                                            self.is_advertising_router_reachable = None
                                            self.is_deleted = None
                                            self.is_flood_pending = None
                                            self.is_maximum_aged = None
                                            self.is_neighbor_exchange = None
                                            self.is_no_delete = None
                                            self.is_nsr_ack_pending = None
                                            self.is_partial_spf = None
                                            self.is_routing_bit = None
                                            self.is_routing_table = None
                                            self.lsa_flood_required_post_fail_over = None
                                            self.lsa_length = None
                                            self.lsa_sync_state = None
                                            self.minute_table_index = None
                                            self.nsr_flood_required = None
                                            self.rate_limit = None
                                            self.second_table_index = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.free_time is not None:
                                                return True

                                            if self.is_acknowledged is not None:
                                                return True

                                            if self.is_advertising_router_reachable is not None:
                                                return True

                                            if self.is_deleted is not None:
                                                return True

                                            if self.is_flood_pending is not None:
                                                return True

                                            if self.is_maximum_aged is not None:
                                                return True

                                            if self.is_neighbor_exchange is not None:
                                                return True

                                            if self.is_no_delete is not None:
                                                return True

                                            if self.is_nsr_ack_pending is not None:
                                                return True

                                            if self.is_partial_spf is not None:
                                                return True

                                            if self.is_routing_bit is not None:
                                                return True

                                            if self.is_routing_table is not None:
                                                return True

                                            if self.lsa_flood_required_post_fail_over is not None:
                                                return True

                                            if self.lsa_length is not None:
                                                return True

                                            if self.lsa_sync_state is not None:
                                                return True

                                            if self.minute_table_index is not None:
                                                return True

                                            if self.nsr_flood_required is not None:
                                                return True

                                            if self.rate_limit is not None:
                                                return True

                                            if self.second_table_index is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaDetail']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-network-lsa'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_detail is not None and self.lsa_detail._has_data():
                                            return True

                                        if self.lsa_header is not None and self.lsa_header._has_data():
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.neighbor_router is not None:
                                            for child in self.neighbor_router:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-network-lsas'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.database_network_lsa is not None:
                                        for child_ref in self.database_network_lsa:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.area_id is None:
                                    raise YPYModelError('Key property area_id is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-area[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_id is not None:
                                    return True

                                if self.database_grace_lsa_s is not None and self.database_grace_lsa_s._has_data():
                                    return True

                                if self.database_int_grace_lsa_s is not None and self.database_int_grace_lsa_s._has_data():
                                    return True

                                if self.database_int_inter_area_prefix_lsas is not None and self.database_int_inter_area_prefix_lsas._has_data():
                                    return True

                                if self.database_int_inter_area_router_lsas is not None and self.database_int_inter_area_router_lsas._has_data():
                                    return True

                                if self.database_int_link_lsa_s is not None and self.database_int_link_lsa_s._has_data():
                                    return True

                                if self.database_int_network_lsas is not None and self.database_int_network_lsas._has_data():
                                    return True

                                if self.database_int_nssa_lsas is not None and self.database_int_nssa_lsas._has_data():
                                    return True

                                if self.database_int_prefix_lsas is not None and self.database_int_prefix_lsas._has_data():
                                    return True

                                if self.database_int_router_lsas is not None and self.database_int_router_lsas._has_data():
                                    return True

                                if self.database_int_unknown_area_lsas is not None and self.database_int_unknown_area_lsas._has_data():
                                    return True

                                if self.database_int_unknown_link_lsa_s is not None and self.database_int_unknown_link_lsa_s._has_data():
                                    return True

                                if self.database_int_unknown_lsas is not None and self.database_int_unknown_lsas._has_data():
                                    return True

                                if self.database_inter_area_prefix_lsas is not None and self.database_inter_area_prefix_lsas._has_data():
                                    return True

                                if self.database_inter_area_router_lsas is not None and self.database_inter_area_router_lsas._has_data():
                                    return True

                                if self.database_link_lsa_s is not None and self.database_link_lsa_s._has_data():
                                    return True

                                if self.database_lsas is not None and self.database_lsas._has_data():
                                    return True

                                if self.database_network_lsas is not None and self.database_network_lsas._has_data():
                                    return True

                                if self.database_nssa_lsas is not None and self.database_nssa_lsas._has_data():
                                    return True

                                if self.database_prefix_lsas is not None and self.database_prefix_lsas._has_data():
                                    return True

                                if self.database_router_lsas is not None and self.database_router_lsas._has_data():
                                    return True

                                if self.database_unknown_area_lsas is not None and self.database_unknown_area_lsas._has_data():
                                    return True

                                if self.database_unknown_link_lsa_s is not None and self.database_unknown_link_lsa_s._has_data():
                                    return True

                                if self.database_unknown_lsas is not None and self.database_unknown_lsas._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas.DatabaseArea']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-areas'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.database_area is not None:
                                for child_ref in self.database_area:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseAreas']['meta_info']


                    class BadChecksums(object):
                        """
                        Bad Checksum Packets information table
                        
                        .. attribute:: bad_checksum
                        
                        	Bad Checksum Packet information
                        	**type**\: list of  :py:class:`BadChecksum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.BadChecksums.BadChecksum>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bad_checksum = YList()
                            self.bad_checksum.parent = self
                            self.bad_checksum.name = 'bad_checksum'


                        class BadChecksum(object):
                            """
                            Bad Checksum Packet information
                            
                            .. attribute:: packet_number  <key>
                            
                            	Bad Checksum Packets number
                            	**type**\:  int
                            
                            	**range:** 0..9
                            
                            .. attribute:: computed_checksum
                            
                            	Computed Checksum
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: received_checksum
                            
                            	Received Checksum
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: received_data
                            
                            	Received Hexadecimal Data
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: timestamp
                            
                            	Packet Timestamp (relative to 1970/1/1 00\:00)
                            	**type**\:  :py:class:`Timestamp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.BadChecksums.BadChecksum.Timestamp>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.packet_number = None
                                self.computed_checksum = None
                                self.received_checksum = None
                                self.received_data = None
                                self.timestamp = Ospfv3.Processes.Process.Vrfs.Vrf.BadChecksums.BadChecksum.Timestamp()
                                self.timestamp.parent = self


                            class Timestamp(object):
                                """
                                Packet Timestamp (relative to 1970/1/1 00\:00)
                                
                                .. attribute:: nanosecond
                                
                                	Nano seconds 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: second
                                
                                	Seconds 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.nanosecond = None
                                    self.second = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:timestamp'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.nanosecond is not None:
                                        return True

                                    if self.second is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.BadChecksums.BadChecksum.Timestamp']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.packet_number is None:
                                    raise YPYModelError('Key property packet_number is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:bad-checksum[Cisco-IOS-XR-ipv6-ospfv3-oper:packet-number = ' + str(self.packet_number) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.packet_number is not None:
                                    return True

                                if self.computed_checksum is not None:
                                    return True

                                if self.received_checksum is not None:
                                    return True

                                if self.received_data is not None:
                                    return True

                                if self.timestamp is not None and self.timestamp._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.BadChecksums.BadChecksum']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:bad-checksums'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bad_checksum is not None:
                                for child_ref in self.bad_checksum:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.BadChecksums']['meta_info']


                    class DatabaseSummaryAreas(object):
                        """
                        Database summary table
                        
                        .. attribute:: database_summary_area
                        
                        	Database summary area table
                        	**type**\: list of  :py:class:`DatabaseSummaryArea <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.database_summary_area = YList()
                            self.database_summary_area.parent = self
                            self.database_summary_area.name = 'database_summary_area'


                        class DatabaseSummaryArea(object):
                            """
                            Database summary area table
                            
                            .. attribute:: area_id  <key>
                            
                            	Area ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: database_summary
                            
                            	Database Summary information
                            	**type**\:  :py:class:`DatabaseSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_id = None
                                self.database_summary = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary()
                                self.database_summary.parent = self


                            class DatabaseSummary(object):
                                """
                                Database Summary information
                                
                                .. attribute:: area_database
                                
                                	OSPFv3 Area Database list 
                                	**type**\: list of  :py:class:`AreaDatabase <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase>`
                                
                                .. attribute:: database_counters
                                
                                	OSPFv3 database counters 
                                	**type**\:  :py:class:`DatabaseCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.DatabaseCounters>`
                                
                                .. attribute:: database_router_id
                                
                                	Database router ID 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: is_opaque_database_capable
                                
                                	If true, opaque database is capable 
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.area_database = YList()
                                    self.area_database.parent = self
                                    self.area_database.name = 'area_database'
                                    self.database_counters = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.DatabaseCounters()
                                    self.database_counters.parent = self
                                    self.database_router_id = None
                                    self.is_opaque_database_capable = None


                                class DatabaseCounters(object):
                                    """
                                    OSPFv3 database counters 
                                    
                                    .. attribute:: deleted_lsa
                                    
                                    	deleted lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa
                                    
                                    	lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_checksum
                                    
                                    	lsa checksum
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: max_age_lsa
                                    
                                    	max age lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.deleted_lsa = YLeafList()
                                        self.deleted_lsa.parent = self
                                        self.deleted_lsa.name = 'deleted_lsa'
                                        self.lsa = YLeafList()
                                        self.lsa.parent = self
                                        self.lsa.name = 'lsa'
                                        self.lsa_checksum = YLeafList()
                                        self.lsa_checksum.parent = self
                                        self.lsa_checksum.name = 'lsa_checksum'
                                        self.max_age_lsa = YLeafList()
                                        self.max_age_lsa.parent = self
                                        self.max_age_lsa.name = 'max_age_lsa'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-counters'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.deleted_lsa is not None:
                                            for child in self.deleted_lsa:
                                                if child is not None:
                                                    return True

                                        if self.lsa is not None:
                                            for child in self.lsa:
                                                if child is not None:
                                                    return True

                                        if self.lsa_checksum is not None:
                                            for child in self.lsa_checksum:
                                                if child is not None:
                                                    return True

                                        if self.max_age_lsa is not None:
                                            for child in self.max_age_lsa:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.DatabaseCounters']['meta_info']


                                class AreaDatabase(object):
                                    """
                                    OSPFv3 Area Database list 
                                    
                                    .. attribute:: area_database_summary
                                    
                                    	Area database summary 
                                    	**type**\:  :py:class:`AreaDatabaseSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase.AreaDatabaseSummary>`
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.area_database_summary = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase.AreaDatabaseSummary()
                                        self.area_database_summary.parent = self
                                        self.lsa_area_id = None


                                    class AreaDatabaseSummary(object):
                                        """
                                        Area database summary 
                                        
                                        .. attribute:: deleted_lsa
                                        
                                        	deleted lsa
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa
                                        
                                        	lsa
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_checksum
                                        
                                        	lsa checksum
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: max_age_lsa
                                        
                                        	max age lsa
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.deleted_lsa = YLeafList()
                                            self.deleted_lsa.parent = self
                                            self.deleted_lsa.name = 'deleted_lsa'
                                            self.lsa = YLeafList()
                                            self.lsa.parent = self
                                            self.lsa.name = 'lsa'
                                            self.lsa_checksum = YLeafList()
                                            self.lsa_checksum.parent = self
                                            self.lsa_checksum.name = 'lsa_checksum'
                                            self.max_age_lsa = YLeafList()
                                            self.max_age_lsa.parent = self
                                            self.max_age_lsa.name = 'max_age_lsa'

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-database-summary'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.deleted_lsa is not None:
                                                for child in self.deleted_lsa:
                                                    if child is not None:
                                                        return True

                                            if self.lsa is not None:
                                                for child in self.lsa:
                                                    if child is not None:
                                                        return True

                                            if self.lsa_checksum is not None:
                                                for child in self.lsa_checksum:
                                                    if child is not None:
                                                        return True

                                            if self.max_age_lsa is not None:
                                                for child in self.max_age_lsa:
                                                    if child is not None:
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase.AreaDatabaseSummary']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-database'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.area_database_summary is not None and self.area_database_summary._has_data():
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.area_database is not None:
                                        for child_ref in self.area_database:
                                            if child_ref._has_data():
                                                return True

                                    if self.database_counters is not None and self.database_counters._has_data():
                                        return True

                                    if self.database_router_id is not None:
                                        return True

                                    if self.is_opaque_database_capable is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.area_id is None:
                                    raise YPYModelError('Key property area_id is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary-area[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_id is not None:
                                    return True

                                if self.database_summary is not None and self.database_summary._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas.DatabaseSummaryArea']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary-areas'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.database_summary_area is not None:
                                for child_ref in self.database_summary_area:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseSummaryAreas']['meta_info']


                    class NeighborProcessTable(object):
                        """
                        OSPFv3 neighbor information table for all areas
                        
                        .. attribute:: neighbor
                        
                        	OSPFv3 neighbor detail information
                        	**type**\: list of  :py:class:`Neighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.neighbor = YList()
                            self.neighbor.parent = self
                            self.neighbor.name = 'neighbor'


                        class Neighbor(object):
                            """
                            OSPFv3 neighbor detail information
                            
                            .. attribute:: interface_name
                            
                            	Interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_neighbor_sham_link
                            
                            	If true, neighbor is on a sham link 
                            	**type**\:  bool
                            
                            .. attribute:: is_neighbor_virtual_link
                            
                            	If true, neighbor is on a virtual link 
                            	**type**\:  bool
                            
                            .. attribute:: neighbor_address
                            
                            	Neighbor ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: neighbor_address_xr
                            
                            	Neighbor IP Address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: neighbor_bfd_info
                            
                            	Neighbor BFD information
                            	**type**\:  :py:class:`NeighborBfdInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborBfdInfo>`
                            
                            .. attribute:: neighbor_dead_timer
                            
                            	Time until neighbor's dead timer expires (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_designated_router
                            
                            	Designated router 
                            	**type**\:  str
                            
                            	**range:** 0..9
                            
                            .. attribute:: neighbor_detail
                            
                            	Detailed OSPFv3 neighbor information 
                            	**type**\:  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborDetail>`
                            
                            .. attribute:: neighbor_dr_priority
                            
                            	Neighbor's DR priority
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: neighbor_interface_id
                            
                            	Neighbor interface ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_sham_link_id
                            
                            	Neighbor sham link id 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_state
                            
                            	Neighbor's state
                            	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                            
                            .. attribute:: neighbor_up_time
                            
                            	Amount of time since the adjacency is up (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_virtual_link_id
                            
                            	Neighbor virtual link id 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.is_neighbor_sham_link = None
                                self.is_neighbor_virtual_link = None
                                self.neighbor_address = None
                                self.neighbor_address_xr = None
                                self.neighbor_bfd_info = Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborBfdInfo()
                                self.neighbor_bfd_info.parent = self
                                self.neighbor_dead_timer = None
                                self.neighbor_designated_router = None
                                self.neighbor_detail = Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborDetail()
                                self.neighbor_detail.parent = self
                                self.neighbor_dr_priority = None
                                self.neighbor_interface_id = None
                                self.neighbor_sham_link_id = None
                                self.neighbor_state = None
                                self.neighbor_up_time = None
                                self.neighbor_virtual_link_id = None


                            class NeighborDetail(object):
                                """
                                Detailed OSPFv3 neighbor information 
                                
                                .. attribute:: interface_type
                                
                                	Interface type
                                	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                
                                .. attribute:: is_neighbor_filtered
                                
                                	If true, filter outgoing LSAs 
                                	**type**\:  bool
                                
                                .. attribute:: neighbor_backup_designated_router_address
                                
                                	Address of backup designated router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: neighbor_cost
                                
                                	Cost of path to this neighbor 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: neighbor_designated_router_address
                                
                                	Address of designated router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: neighbor_ignore_timer
                                
                                	Remaining time when ignore timer is running 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_option
                                
                                	 This is bitmask of neighbor's option field received 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_retransmission
                                
                                	Retransmission information with this neighbor
                                	**type**\:  :py:class:`NeighborRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborDetail.NeighborRetransmission>`
                                
                                .. attribute:: next_poll_interval
                                
                                	For NBMA networks, amount of time remaining in seconds before the next poll interval expires and Hello is sent (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pending_events
                                
                                	Number of pending events 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: poll_interval
                                
                                	Poll interval (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_changes
                                
                                	Number of state changes 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_type = None
                                    self.is_neighbor_filtered = None
                                    self.neighbor_backup_designated_router_address = None
                                    self.neighbor_cost = None
                                    self.neighbor_designated_router_address = None
                                    self.neighbor_ignore_timer = None
                                    self.neighbor_option = None
                                    self.neighbor_retransmission = Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborDetail.NeighborRetransmission()
                                    self.neighbor_retransmission.parent = self
                                    self.next_poll_interval = None
                                    self.pending_events = None
                                    self.poll_interval = None
                                    self.state_changes = None


                                class NeighborRetransmission(object):
                                    """
                                    Retransmission information with this neighbor
                                    
                                    .. attribute:: area_first_flood
                                    
                                    	First flood item for area scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: area_first_flood_index
                                    
                                    	Index of the first flood item for area scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: area_flood_index
                                    
                                    	Area scope LSA's flood index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: area_next_flood
                                    
                                    	Next flood item for area scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: area_next_flood_index
                                    
                                    	Index of next flood item for Area scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_first_flood
                                    
                                    	First flood item for AS scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_first_flood_index
                                    
                                    	Index for first flood item for AS scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_flood_index
                                    
                                    	AS scope LSA's flood index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_next_flood
                                    
                                    	Next flood item for AS scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_next_flood_index
                                    
                                    	Index of next flood item for AS scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: database_descriptor_retransmissions
                                    
                                    	Number of database descriptor retransmissions during last exchange
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: last_retransmission_length
                                    
                                    	Number of LSAs sent in last retransmission
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: last_retransmission_time
                                    
                                    	Last retransmission scan time (ms)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_first_flood
                                    
                                    	Link first flood information 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_first_flood_index
                                    
                                    	Link first flood information index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_flood_index
                                    
                                    	Link flood index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_next_flood
                                    
                                    	Link next flood information 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_next_flood_index
                                    
                                    	Link next flood information index 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_retransmission_timer
                                    
                                    	Time until next LSA retransmission (ms)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: maximum_retransmission_length
                                    
                                    	Maximum number of LSAs sent in a retransmission
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: maximum_retransmission_time
                                    
                                    	Maximum retransmission scan time (ms)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_retransmissions
                                    
                                    	Number of neighbor retransmissions 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: retransmissions
                                    
                                    	Number of retransmissions for this neighbor
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.area_first_flood = None
                                        self.area_first_flood_index = None
                                        self.area_flood_index = None
                                        self.area_next_flood = None
                                        self.area_next_flood_index = None
                                        self.as_first_flood = None
                                        self.as_first_flood_index = None
                                        self.as_flood_index = None
                                        self.as_next_flood = None
                                        self.as_next_flood_index = None
                                        self.database_descriptor_retransmissions = None
                                        self.last_retransmission_length = None
                                        self.last_retransmission_time = None
                                        self.link_first_flood = None
                                        self.link_first_flood_index = None
                                        self.link_flood_index = None
                                        self.link_next_flood = None
                                        self.link_next_flood_index = None
                                        self.lsa_retransmission_timer = None
                                        self.maximum_retransmission_length = None
                                        self.maximum_retransmission_time = None
                                        self.neighbor_retransmissions = None
                                        self.retransmissions = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-retransmission'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.area_first_flood is not None:
                                            return True

                                        if self.area_first_flood_index is not None:
                                            return True

                                        if self.area_flood_index is not None:
                                            return True

                                        if self.area_next_flood is not None:
                                            return True

                                        if self.area_next_flood_index is not None:
                                            return True

                                        if self.as_first_flood is not None:
                                            return True

                                        if self.as_first_flood_index is not None:
                                            return True

                                        if self.as_flood_index is not None:
                                            return True

                                        if self.as_next_flood is not None:
                                            return True

                                        if self.as_next_flood_index is not None:
                                            return True

                                        if self.database_descriptor_retransmissions is not None:
                                            return True

                                        if self.last_retransmission_length is not None:
                                            return True

                                        if self.last_retransmission_time is not None:
                                            return True

                                        if self.link_first_flood is not None:
                                            return True

                                        if self.link_first_flood_index is not None:
                                            return True

                                        if self.link_flood_index is not None:
                                            return True

                                        if self.link_next_flood is not None:
                                            return True

                                        if self.link_next_flood_index is not None:
                                            return True

                                        if self.lsa_retransmission_timer is not None:
                                            return True

                                        if self.maximum_retransmission_length is not None:
                                            return True

                                        if self.maximum_retransmission_time is not None:
                                            return True

                                        if self.neighbor_retransmissions is not None:
                                            return True

                                        if self.retransmissions is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborDetail.NeighborRetransmission']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_type is not None:
                                        return True

                                    if self.is_neighbor_filtered is not None:
                                        return True

                                    if self.neighbor_backup_designated_router_address is not None:
                                        return True

                                    if self.neighbor_cost is not None:
                                        return True

                                    if self.neighbor_designated_router_address is not None:
                                        return True

                                    if self.neighbor_ignore_timer is not None:
                                        return True

                                    if self.neighbor_option is not None:
                                        return True

                                    if self.neighbor_retransmission is not None and self.neighbor_retransmission._has_data():
                                        return True

                                    if self.next_poll_interval is not None:
                                        return True

                                    if self.pending_events is not None:
                                        return True

                                    if self.poll_interval is not None:
                                        return True

                                    if self.state_changes is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborDetail']['meta_info']


                            class NeighborBfdInfo(object):
                                """
                                Neighbor BFD information
                                
                                .. attribute:: bfd_intf_enable_mode
                                
                                	BFD enable mode \- Default/Strict
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: bfd_status_flag
                                
                                	Status of the BFD Session
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bfd_intf_enable_mode = None
                                    self.bfd_status_flag = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-bfd-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bfd_intf_enable_mode is not None:
                                        return True

                                    if self.bfd_status_flag is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor.NeighborBfdInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.is_neighbor_sham_link is not None:
                                    return True

                                if self.is_neighbor_virtual_link is not None:
                                    return True

                                if self.neighbor_address is not None:
                                    return True

                                if self.neighbor_address_xr is not None:
                                    return True

                                if self.neighbor_bfd_info is not None and self.neighbor_bfd_info._has_data():
                                    return True

                                if self.neighbor_dead_timer is not None:
                                    return True

                                if self.neighbor_designated_router is not None:
                                    return True

                                if self.neighbor_detail is not None and self.neighbor_detail._has_data():
                                    return True

                                if self.neighbor_dr_priority is not None:
                                    return True

                                if self.neighbor_interface_id is not None:
                                    return True

                                if self.neighbor_sham_link_id is not None:
                                    return True

                                if self.neighbor_state is not None:
                                    return True

                                if self.neighbor_up_time is not None:
                                    return True

                                if self.neighbor_virtual_link_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable.Neighbor']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-process-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.neighbor is not None:
                                for child_ref in self.neighbor:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborProcessTable']['meta_info']


                    class FastReroutes(object):
                        """
                        OSPFv3 fast reroute topology information table
                        
                        .. attribute:: fast_reroute
                        
                        	OSPFv3 fast reroute topology information
                        	**type**\: list of  :py:class:`FastReroute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.FastReroutes.FastReroute>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.fast_reroute = YList()
                            self.fast_reroute.parent = self
                            self.fast_reroute.name = 'fast_reroute'


                        class FastReroute(object):
                            """
                            OSPFv3 fast reroute topology information
                            
                            .. attribute:: area_id
                            
                            	AreaID
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: ipfrr_area_revision
                            
                            	IPFRR Topology Revision
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: ipfrr_router_id
                            
                            	OSPF Router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipfrr_topo
                            
                            	IPFRR Topology entries
                            	**type**\: list of  :py:class:`IpfrrTopo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.FastReroutes.FastReroute.IpfrrTopo>`
                            
                            .. attribute:: ipfrr_topo_area_id
                            
                            	Area ID string in decimal or dotted decimal format
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            .. attribute:: router_id
                            
                            	Router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_id = None
                                self.ipfrr_area_revision = None
                                self.ipfrr_router_id = None
                                self.ipfrr_topo = YList()
                                self.ipfrr_topo.parent = self
                                self.ipfrr_topo.name = 'ipfrr_topo'
                                self.ipfrr_topo_area_id = None
                                self.router_id = None


                            class IpfrrTopo(object):
                                """
                                IPFRR Topology entries
                                
                                .. attribute:: distance
                                
                                	IPFRR Topology Distance
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: dr
                                
                                	IPFRR Topology DR entry
                                	**type**\:  bool
                                
                                .. attribute:: lsaid
                                
                                	IPFRR Topology LSA ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_sourced
                                
                                	IPFRR Topology Neighbor Sourced
                                	**type**\:  bool
                                
                                .. attribute:: node_id
                                
                                	IPFRR Topology Node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: revision
                                
                                	IPFRR Topology Revision
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: type4
                                
                                	IPFRR Topoogy Type\-4 entry
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.distance = None
                                    self.dr = None
                                    self.lsaid = None
                                    self.neighbor_sourced = None
                                    self.node_id = None
                                    self.revision = None
                                    self.type4 = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:ipfrr-topo'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.distance is not None:
                                        return True

                                    if self.dr is not None:
                                        return True

                                    if self.lsaid is not None:
                                        return True

                                    if self.neighbor_sourced is not None:
                                        return True

                                    if self.node_id is not None:
                                        return True

                                    if self.revision is not None:
                                        return True

                                    if self.type4 is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.FastReroutes.FastReroute.IpfrrTopo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:fast-reroute'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_id is not None:
                                    return True

                                if self.ipfrr_area_revision is not None:
                                    return True

                                if self.ipfrr_router_id is not None:
                                    return True

                                if self.ipfrr_topo is not None:
                                    for child_ref in self.ipfrr_topo:
                                        if child_ref._has_data():
                                            return True

                                if self.ipfrr_topo_area_id is not None:
                                    return True

                                if self.router_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.FastReroutes.FastReroute']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:fast-reroutes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.fast_reroute is not None:
                                for child_ref in self.fast_reroute:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.FastReroutes']['meta_info']


                    class DatabaseUnknownAsLsas(object):
                        """
                        Database AS Unknown Information
                        
                        .. attribute:: database_unknown_as_lsa
                        
                        	Database Unknown LSA information
                        	**type**\: list of  :py:class:`DatabaseUnknownAsLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.database_unknown_as_lsa = YList()
                            self.database_unknown_as_lsa.parent = self
                            self.database_unknown_as_lsa.name = 'database_unknown_as_lsa'


                        class DatabaseUnknownAsLsa(object):
                            """
                            Database Unknown LSA information
                            
                            .. attribute:: advertising_router
                            
                            	Advertising Router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: interface_name_xr
                            
                            	LSA interface name 
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_sham_link
                            
                            	If true, it is a sham link 
                            	**type**\:  bool
                            
                            .. attribute:: is_virtual_link
                            
                            	If true, it is a virtual link 
                            	**type**\:  bool
                            
                            .. attribute:: ls_id
                            
                            	Link state ID
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: lsa_detail
                            
                            	Detailed LSA information
                            	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaDetail>`
                            
                            .. attribute:: lsa_header
                            
                            	Header information 
                            	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaHeader>`
                            
                            .. attribute:: lsa_type
                            
                            	LSA type
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: sham_link_id
                            
                            	Shamlink ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: virtual_link_id
                            
                            	Virtual link ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.advertising_router = None
                                self.interface_name_xr = None
                                self.is_sham_link = None
                                self.is_virtual_link = None
                                self.ls_id = None
                                self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaDetail()
                                self.lsa_detail.parent = self
                                self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaHeader()
                                self.lsa_header.parent = self
                                self.lsa_type = None
                                self.sham_link_id = None
                                self.virtual_link_id = None


                            class LsaHeader(object):
                                """
                                Header information 
                                
                                .. attribute:: advertising_router
                                
                                	Router ID of Advertising Router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: checksum
                                
                                	Checksum value
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: is_do_not_age_lsa
                                
                                	If true, Do Not Age this LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_graceful_restart_active
                                
                                	If true, if grace restart is active 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	LS ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_age
                                
                                	LSA's Age (s)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsa_area_id
                                
                                	Area ID in decimal or dotted\-decimal format
                                	**type**\:  str
                                
                                	**range:** 0..16
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: sequence_number
                                
                                	Current Sequence number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.checksum = None
                                    self.is_do_not_age_lsa = None
                                    self.is_graceful_restart_active = None
                                    self.ls_id = None
                                    self.lsa_age = None
                                    self.lsa_area_id = None
                                    self.lsa_type = None
                                    self.sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.checksum is not None:
                                        return True

                                    if self.is_do_not_age_lsa is not None:
                                        return True

                                    if self.is_graceful_restart_active is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_age is not None:
                                        return True

                                    if self.lsa_area_id is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaHeader']['meta_info']


                            class LsaDetail(object):
                                """
                                Detailed LSA information
                                
                                .. attribute:: free_time
                                
                                	The amount of time since the last check was made to free this LSA (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: is_acknowledged
                                
                                	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                	**type**\:  bool
                                
                                .. attribute:: is_advertising_router_reachable
                                
                                	If true, Advertising Router is reachable
                                	**type**\:  bool
                                
                                .. attribute:: is_deleted
                                
                                	If true, flag is set to delete this LSA 
                                	**type**\:  bool
                                
                                .. attribute:: is_flood_pending
                                
                                	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                	**type**\:  bool
                                
                                .. attribute:: is_maximum_aged
                                
                                	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                	**type**\:  bool
                                
                                .. attribute:: is_neighbor_exchange
                                
                                	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                	**type**\:  bool
                                
                                .. attribute:: is_no_delete
                                
                                	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_nsr_ack_pending
                                
                                	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                	**type**\:  bool
                                
                                .. attribute:: is_partial_spf
                                
                                	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                	**type**\:  bool
                                
                                .. attribute:: is_routing_bit
                                
                                	If true, Routing Bit set on the LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_routing_table
                                
                                	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                	**type**\:  bool
                                
                                .. attribute:: lsa_flood_required_post_fail_over
                                
                                	LSA flood required after FO
                                	**type**\:  bool
                                
                                .. attribute:: lsa_length
                                
                                	Length of the LSA
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsa_sync_state
                                
                                	State of LSA sync with active
                                	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                
                                .. attribute:: minute_table_index
                                
                                	Minute table index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: nsr_flood_required
                                
                                	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                	**type**\:  bool
                                
                                .. attribute:: rate_limit
                                
                                	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                	**type**\:  bool
                                
                                .. attribute:: second_table_index
                                
                                	Second table index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.free_time = None
                                    self.is_acknowledged = None
                                    self.is_advertising_router_reachable = None
                                    self.is_deleted = None
                                    self.is_flood_pending = None
                                    self.is_maximum_aged = None
                                    self.is_neighbor_exchange = None
                                    self.is_no_delete = None
                                    self.is_nsr_ack_pending = None
                                    self.is_partial_spf = None
                                    self.is_routing_bit = None
                                    self.is_routing_table = None
                                    self.lsa_flood_required_post_fail_over = None
                                    self.lsa_length = None
                                    self.lsa_sync_state = None
                                    self.minute_table_index = None
                                    self.nsr_flood_required = None
                                    self.rate_limit = None
                                    self.second_table_index = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.free_time is not None:
                                        return True

                                    if self.is_acknowledged is not None:
                                        return True

                                    if self.is_advertising_router_reachable is not None:
                                        return True

                                    if self.is_deleted is not None:
                                        return True

                                    if self.is_flood_pending is not None:
                                        return True

                                    if self.is_maximum_aged is not None:
                                        return True

                                    if self.is_neighbor_exchange is not None:
                                        return True

                                    if self.is_no_delete is not None:
                                        return True

                                    if self.is_nsr_ack_pending is not None:
                                        return True

                                    if self.is_partial_spf is not None:
                                        return True

                                    if self.is_routing_bit is not None:
                                        return True

                                    if self.is_routing_table is not None:
                                        return True

                                    if self.lsa_flood_required_post_fail_over is not None:
                                        return True

                                    if self.lsa_length is not None:
                                        return True

                                    if self.lsa_sync_state is not None:
                                        return True

                                    if self.minute_table_index is not None:
                                        return True

                                    if self.nsr_flood_required is not None:
                                        return True

                                    if self.rate_limit is not None:
                                        return True

                                    if self.second_table_index is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaDetail']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-as-lsa'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.advertising_router is not None:
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_sham_link is not None:
                                    return True

                                if self.is_virtual_link is not None:
                                    return True

                                if self.ls_id is not None:
                                    return True

                                if self.lsa_detail is not None and self.lsa_detail._has_data():
                                    return True

                                if self.lsa_header is not None and self.lsa_header._has_data():
                                    return True

                                if self.lsa_type is not None:
                                    return True

                                if self.sham_link_id is not None:
                                    return True

                                if self.virtual_link_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-as-lsas'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.database_unknown_as_lsa is not None:
                                for child_ref in self.database_unknown_as_lsa:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseUnknownAsLsas']['meta_info']


                    class InterfaceBriefProcessTable(object):
                        """
                        OSPFv3 interface brief information table for all
                        areas
                        
                        .. attribute:: interface_brief
                        
                        	Interface brief information
                        	**type**\: list of  :py:class:`InterfaceBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceBriefProcessTable.InterfaceBrief>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_brief = YList()
                            self.interface_brief.parent = self
                            self.interface_brief.name = 'interface_brief'


                        class InterfaceBrief(object):
                            """
                            Interface brief information
                            
                            .. attribute:: interface_name  <key>
                            
                            	Interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: interface_address
                            
                            	Interface IP address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: interface_adjacent_neighbors
                            
                            	Total number of adjacent neighbors
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: interface_link_cost
                            
                            	Interface link cost
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: interface_neighbors
                            
                            	Total number of neighbors 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: network_type
                            
                            	Network type
                            	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                            
                            .. attribute:: ospf_interface_state
                            
                            	Interface OSPF state
                            	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.interface_address = None
                                self.interface_adjacent_neighbors = None
                                self.interface_link_cost = None
                                self.interface_neighbors = None
                                self.network_type = None
                                self.ospf_interface_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.interface_name is None:
                                    raise YPYModelError('Key property interface_name is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-brief[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.interface_address is not None:
                                    return True

                                if self.interface_adjacent_neighbors is not None:
                                    return True

                                if self.interface_link_cost is not None:
                                    return True

                                if self.interface_neighbors is not None:
                                    return True

                                if self.network_type is not None:
                                    return True

                                if self.ospf_interface_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceBriefProcessTable.InterfaceBrief']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-brief-process-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_brief is not None:
                                for child_ref in self.interface_brief:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.InterfaceBriefProcessTable']['meta_info']


                    class NeighborDetailProcessTable(object):
                        """
                        OSPFv3 neighbor information table for all areas
                        
                        .. attribute:: neighbor_detail
                        
                        	OSPFv3 neighbor detail information
                        	**type**\: list of  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.neighbor_detail = YList()
                            self.neighbor_detail.parent = self
                            self.neighbor_detail.name = 'neighbor_detail'


                        class NeighborDetail(object):
                            """
                            OSPFv3 neighbor detail information
                            
                            .. attribute:: interface_name
                            
                            	Interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_neighbor_sham_link
                            
                            	If true, neighbor is on a sham link 
                            	**type**\:  bool
                            
                            .. attribute:: is_neighbor_virtual_link
                            
                            	If true, neighbor is on a virtual link 
                            	**type**\:  bool
                            
                            .. attribute:: neighbor_address
                            
                            	Neighbor ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: neighbor_address_xr
                            
                            	Neighbor IP Address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: neighbor_bfd_info
                            
                            	Neighbor BFD information
                            	**type**\:  :py:class:`NeighborBfdInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborBfdInfo>`
                            
                            .. attribute:: neighbor_dead_timer
                            
                            	Time until neighbor's dead timer expires (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_designated_router
                            
                            	Designated router 
                            	**type**\:  str
                            
                            	**range:** 0..9
                            
                            .. attribute:: neighbor_detail
                            
                            	Detailed OSPFv3 neighbor information 
                            	**type**\:  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail>`
                            
                            .. attribute:: neighbor_dr_priority
                            
                            	Neighbor's DR priority
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: neighbor_interface_id
                            
                            	Neighbor interface ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_sham_link_id
                            
                            	Neighbor sham link id 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_state
                            
                            	Neighbor's state
                            	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                            
                            .. attribute:: neighbor_up_time
                            
                            	Amount of time since the adjacency is up (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_virtual_link_id
                            
                            	Neighbor virtual link id 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.is_neighbor_sham_link = None
                                self.is_neighbor_virtual_link = None
                                self.neighbor_address = None
                                self.neighbor_address_xr = None
                                self.neighbor_bfd_info = Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborBfdInfo()
                                self.neighbor_bfd_info.parent = self
                                self.neighbor_dead_timer = None
                                self.neighbor_designated_router = None
                                self.neighbor_detail = Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail()
                                self.neighbor_detail.parent = self
                                self.neighbor_dr_priority = None
                                self.neighbor_interface_id = None
                                self.neighbor_sham_link_id = None
                                self.neighbor_state = None
                                self.neighbor_up_time = None
                                self.neighbor_virtual_link_id = None


                            class NeighborDetail(object):
                                """
                                Detailed OSPFv3 neighbor information 
                                
                                .. attribute:: interface_type
                                
                                	Interface type
                                	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                
                                .. attribute:: is_neighbor_filtered
                                
                                	If true, filter outgoing LSAs 
                                	**type**\:  bool
                                
                                .. attribute:: neighbor_backup_designated_router_address
                                
                                	Address of backup designated router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: neighbor_cost
                                
                                	Cost of path to this neighbor 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: neighbor_designated_router_address
                                
                                	Address of designated router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: neighbor_ignore_timer
                                
                                	Remaining time when ignore timer is running 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_option
                                
                                	 This is bitmask of neighbor's option field received 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_retransmission
                                
                                	Retransmission information with this neighbor
                                	**type**\:  :py:class:`NeighborRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail.NeighborRetransmission>`
                                
                                .. attribute:: next_poll_interval
                                
                                	For NBMA networks, amount of time remaining in seconds before the next poll interval expires and Hello is sent (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pending_events
                                
                                	Number of pending events 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: poll_interval
                                
                                	Poll interval (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_changes
                                
                                	Number of state changes 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_type = None
                                    self.is_neighbor_filtered = None
                                    self.neighbor_backup_designated_router_address = None
                                    self.neighbor_cost = None
                                    self.neighbor_designated_router_address = None
                                    self.neighbor_ignore_timer = None
                                    self.neighbor_option = None
                                    self.neighbor_retransmission = Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail.NeighborRetransmission()
                                    self.neighbor_retransmission.parent = self
                                    self.next_poll_interval = None
                                    self.pending_events = None
                                    self.poll_interval = None
                                    self.state_changes = None


                                class NeighborRetransmission(object):
                                    """
                                    Retransmission information with this neighbor
                                    
                                    .. attribute:: area_first_flood
                                    
                                    	First flood item for area scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: area_first_flood_index
                                    
                                    	Index of the first flood item for area scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: area_flood_index
                                    
                                    	Area scope LSA's flood index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: area_next_flood
                                    
                                    	Next flood item for area scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: area_next_flood_index
                                    
                                    	Index of next flood item for Area scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_first_flood
                                    
                                    	First flood item for AS scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_first_flood_index
                                    
                                    	Index for first flood item for AS scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_flood_index
                                    
                                    	AS scope LSA's flood index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_next_flood
                                    
                                    	Next flood item for AS scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: as_next_flood_index
                                    
                                    	Index of next flood item for AS scope LSAs
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: database_descriptor_retransmissions
                                    
                                    	Number of database descriptor retransmissions during last exchange
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: last_retransmission_length
                                    
                                    	Number of LSAs sent in last retransmission
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: last_retransmission_time
                                    
                                    	Last retransmission scan time (ms)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_first_flood
                                    
                                    	Link first flood information 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_first_flood_index
                                    
                                    	Link first flood information index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_flood_index
                                    
                                    	Link flood index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_next_flood
                                    
                                    	Link next flood information 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_next_flood_index
                                    
                                    	Link next flood information index 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_retransmission_timer
                                    
                                    	Time until next LSA retransmission (ms)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: maximum_retransmission_length
                                    
                                    	Maximum number of LSAs sent in a retransmission
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: maximum_retransmission_time
                                    
                                    	Maximum retransmission scan time (ms)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_retransmissions
                                    
                                    	Number of neighbor retransmissions 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: retransmissions
                                    
                                    	Number of retransmissions for this neighbor
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.area_first_flood = None
                                        self.area_first_flood_index = None
                                        self.area_flood_index = None
                                        self.area_next_flood = None
                                        self.area_next_flood_index = None
                                        self.as_first_flood = None
                                        self.as_first_flood_index = None
                                        self.as_flood_index = None
                                        self.as_next_flood = None
                                        self.as_next_flood_index = None
                                        self.database_descriptor_retransmissions = None
                                        self.last_retransmission_length = None
                                        self.last_retransmission_time = None
                                        self.link_first_flood = None
                                        self.link_first_flood_index = None
                                        self.link_flood_index = None
                                        self.link_next_flood = None
                                        self.link_next_flood_index = None
                                        self.lsa_retransmission_timer = None
                                        self.maximum_retransmission_length = None
                                        self.maximum_retransmission_time = None
                                        self.neighbor_retransmissions = None
                                        self.retransmissions = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-retransmission'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.area_first_flood is not None:
                                            return True

                                        if self.area_first_flood_index is not None:
                                            return True

                                        if self.area_flood_index is not None:
                                            return True

                                        if self.area_next_flood is not None:
                                            return True

                                        if self.area_next_flood_index is not None:
                                            return True

                                        if self.as_first_flood is not None:
                                            return True

                                        if self.as_first_flood_index is not None:
                                            return True

                                        if self.as_flood_index is not None:
                                            return True

                                        if self.as_next_flood is not None:
                                            return True

                                        if self.as_next_flood_index is not None:
                                            return True

                                        if self.database_descriptor_retransmissions is not None:
                                            return True

                                        if self.last_retransmission_length is not None:
                                            return True

                                        if self.last_retransmission_time is not None:
                                            return True

                                        if self.link_first_flood is not None:
                                            return True

                                        if self.link_first_flood_index is not None:
                                            return True

                                        if self.link_flood_index is not None:
                                            return True

                                        if self.link_next_flood is not None:
                                            return True

                                        if self.link_next_flood_index is not None:
                                            return True

                                        if self.lsa_retransmission_timer is not None:
                                            return True

                                        if self.maximum_retransmission_length is not None:
                                            return True

                                        if self.maximum_retransmission_time is not None:
                                            return True

                                        if self.neighbor_retransmissions is not None:
                                            return True

                                        if self.retransmissions is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail.NeighborRetransmission']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_type is not None:
                                        return True

                                    if self.is_neighbor_filtered is not None:
                                        return True

                                    if self.neighbor_backup_designated_router_address is not None:
                                        return True

                                    if self.neighbor_cost is not None:
                                        return True

                                    if self.neighbor_designated_router_address is not None:
                                        return True

                                    if self.neighbor_ignore_timer is not None:
                                        return True

                                    if self.neighbor_option is not None:
                                        return True

                                    if self.neighbor_retransmission is not None and self.neighbor_retransmission._has_data():
                                        return True

                                    if self.next_poll_interval is not None:
                                        return True

                                    if self.pending_events is not None:
                                        return True

                                    if self.poll_interval is not None:
                                        return True

                                    if self.state_changes is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail']['meta_info']


                            class NeighborBfdInfo(object):
                                """
                                Neighbor BFD information
                                
                                .. attribute:: bfd_intf_enable_mode
                                
                                	BFD enable mode \- Default/Strict
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: bfd_status_flag
                                
                                	Status of the BFD Session
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bfd_intf_enable_mode = None
                                    self.bfd_status_flag = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-bfd-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bfd_intf_enable_mode is not None:
                                        return True

                                    if self.bfd_status_flag is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail.NeighborBfdInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.is_neighbor_sham_link is not None:
                                    return True

                                if self.is_neighbor_virtual_link is not None:
                                    return True

                                if self.neighbor_address is not None:
                                    return True

                                if self.neighbor_address_xr is not None:
                                    return True

                                if self.neighbor_bfd_info is not None and self.neighbor_bfd_info._has_data():
                                    return True

                                if self.neighbor_dead_timer is not None:
                                    return True

                                if self.neighbor_designated_router is not None:
                                    return True

                                if self.neighbor_detail is not None and self.neighbor_detail._has_data():
                                    return True

                                if self.neighbor_dr_priority is not None:
                                    return True

                                if self.neighbor_interface_id is not None:
                                    return True

                                if self.neighbor_sham_link_id is not None:
                                    return True

                                if self.neighbor_state is not None:
                                    return True

                                if self.neighbor_up_time is not None:
                                    return True

                                if self.neighbor_virtual_link_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable.NeighborDetail']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail-process-table'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.neighbor_detail is not None:
                                for child_ref in self.neighbor_detail:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.NeighborDetailProcessTable']['meta_info']


                    class DatabaseIntExternalLsas(object):
                        """
                        Internal database external LSA information
                        
                        .. attribute:: database_int_external_lsa
                        
                        	Internal database for external LSA information
                        	**type**\: list of  :py:class:`DatabaseIntExternalLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.database_int_external_lsa = YList()
                            self.database_int_external_lsa.parent = self
                            self.database_int_external_lsa.name = 'database_int_external_lsa'


                        class DatabaseIntExternalLsa(object):
                            """
                            Internal database for external LSA information
                            
                            .. attribute:: advertising_router
                            
                            	Advertising Router ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: external_tag
                            
                            	Route Tag
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: forwarding_address
                            
                            	Forwarding Address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: is_forwarding_address_set
                            
                            	If true, forwarding address is set 
                            	**type**\:  bool
                            
                            .. attribute:: ls_id
                            
                            	Link state ID
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: lsa_detail
                            
                            	Detailed LSA Information
                            	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaDetail>`
                            
                            .. attribute:: lsa_header
                            
                            	Header information 
                            	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaHeader>`
                            
                            .. attribute:: lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                            
                            .. attribute:: metric_type
                            
                            	Metric type 
                            	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: prefix_length_xr
                            
                            	Prefix length 
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: prefix_xr
                            
                            	IPV6 address prefix 
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: priority
                            
                            	Prefix priority
                            	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                            
                            .. attribute:: tos_cost
                            
                            	Type of service cost metric 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.advertising_router = None
                                self.external_tag = None
                                self.forwarding_address = None
                                self.is_forwarding_address_set = None
                                self.ls_id = None
                                self.lsa_detail = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaDetail()
                                self.lsa_detail.parent = self
                                self.lsa_header = Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaHeader()
                                self.lsa_header.parent = self
                                self.lsa_type = None
                                self.metric_type = None
                                self.prefix = None
                                self.prefix_length = None
                                self.prefix_length_xr = None
                                self.prefix_xr = None
                                self.priority = None
                                self.tos_cost = None


                            class LsaHeader(object):
                                """
                                Header information 
                                
                                .. attribute:: advertising_router
                                
                                	Router ID of Advertising Router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: checksum
                                
                                	Checksum value
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: is_do_not_age_lsa
                                
                                	If true, Do Not Age this LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_graceful_restart_active
                                
                                	If true, if grace restart is active 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	LS ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_age
                                
                                	LSA's Age (s)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsa_area_id
                                
                                	Area ID in decimal or dotted\-decimal format
                                	**type**\:  str
                                
                                	**range:** 0..16
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: sequence_number
                                
                                	Current Sequence number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.checksum = None
                                    self.is_do_not_age_lsa = None
                                    self.is_graceful_restart_active = None
                                    self.ls_id = None
                                    self.lsa_age = None
                                    self.lsa_area_id = None
                                    self.lsa_type = None
                                    self.sequence_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.checksum is not None:
                                        return True

                                    if self.is_do_not_age_lsa is not None:
                                        return True

                                    if self.is_graceful_restart_active is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_age is not None:
                                        return True

                                    if self.lsa_area_id is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sequence_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaHeader']['meta_info']


                            class LsaDetail(object):
                                """
                                Detailed LSA Information
                                
                                .. attribute:: free_time
                                
                                	The amount of time since the last check was made to free this LSA (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: is_acknowledged
                                
                                	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                	**type**\:  bool
                                
                                .. attribute:: is_advertising_router_reachable
                                
                                	If true, Advertising Router is reachable
                                	**type**\:  bool
                                
                                .. attribute:: is_deleted
                                
                                	If true, flag is set to delete this LSA 
                                	**type**\:  bool
                                
                                .. attribute:: is_flood_pending
                                
                                	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                	**type**\:  bool
                                
                                .. attribute:: is_maximum_aged
                                
                                	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                	**type**\:  bool
                                
                                .. attribute:: is_neighbor_exchange
                                
                                	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                	**type**\:  bool
                                
                                .. attribute:: is_no_delete
                                
                                	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_nsr_ack_pending
                                
                                	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                	**type**\:  bool
                                
                                .. attribute:: is_partial_spf
                                
                                	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                	**type**\:  bool
                                
                                .. attribute:: is_routing_bit
                                
                                	If true, Routing Bit set on the LSA
                                	**type**\:  bool
                                
                                .. attribute:: is_routing_table
                                
                                	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                	**type**\:  bool
                                
                                .. attribute:: lsa_flood_required_post_fail_over
                                
                                	LSA flood required after FO
                                	**type**\:  bool
                                
                                .. attribute:: lsa_length
                                
                                	Length of the LSA
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsa_sync_state
                                
                                	State of LSA sync with active
                                	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                
                                .. attribute:: minute_table_index
                                
                                	Minute table index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: nsr_flood_required
                                
                                	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                	**type**\:  bool
                                
                                .. attribute:: rate_limit
                                
                                	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                	**type**\:  bool
                                
                                .. attribute:: second_table_index
                                
                                	Second table index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.free_time = None
                                    self.is_acknowledged = None
                                    self.is_advertising_router_reachable = None
                                    self.is_deleted = None
                                    self.is_flood_pending = None
                                    self.is_maximum_aged = None
                                    self.is_neighbor_exchange = None
                                    self.is_no_delete = None
                                    self.is_nsr_ack_pending = None
                                    self.is_partial_spf = None
                                    self.is_routing_bit = None
                                    self.is_routing_table = None
                                    self.lsa_flood_required_post_fail_over = None
                                    self.lsa_length = None
                                    self.lsa_sync_state = None
                                    self.minute_table_index = None
                                    self.nsr_flood_required = None
                                    self.rate_limit = None
                                    self.second_table_index = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.free_time is not None:
                                        return True

                                    if self.is_acknowledged is not None:
                                        return True

                                    if self.is_advertising_router_reachable is not None:
                                        return True

                                    if self.is_deleted is not None:
                                        return True

                                    if self.is_flood_pending is not None:
                                        return True

                                    if self.is_maximum_aged is not None:
                                        return True

                                    if self.is_neighbor_exchange is not None:
                                        return True

                                    if self.is_no_delete is not None:
                                        return True

                                    if self.is_nsr_ack_pending is not None:
                                        return True

                                    if self.is_partial_spf is not None:
                                        return True

                                    if self.is_routing_bit is not None:
                                        return True

                                    if self.is_routing_table is not None:
                                        return True

                                    if self.lsa_flood_required_post_fail_over is not None:
                                        return True

                                    if self.lsa_length is not None:
                                        return True

                                    if self.lsa_sync_state is not None:
                                        return True

                                    if self.minute_table_index is not None:
                                        return True

                                    if self.nsr_flood_required is not None:
                                        return True

                                    if self.rate_limit is not None:
                                        return True

                                    if self.second_table_index is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaDetail']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-external-lsa'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.advertising_router is not None:
                                    return True

                                if self.external_tag is not None:
                                    return True

                                if self.forwarding_address is not None:
                                    return True

                                if self.is_forwarding_address_set is not None:
                                    return True

                                if self.ls_id is not None:
                                    return True

                                if self.lsa_detail is not None and self.lsa_detail._has_data():
                                    return True

                                if self.lsa_header is not None and self.lsa_header._has_data():
                                    return True

                                if self.lsa_type is not None:
                                    return True

                                if self.metric_type is not None:
                                    return True

                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.prefix_length_xr is not None:
                                    return True

                                if self.prefix_xr is not None:
                                    return True

                                if self.priority is not None:
                                    return True

                                if self.tos_cost is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-external-lsas'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.database_int_external_lsa is not None:
                                for child_ref in self.database_int_external_lsa:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf.DatabaseIntExternalLsas']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.vrf_name is None:
                            raise YPYModelError('Key property vrf_name is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:vrf[Cisco-IOS-XR-ipv6-ospfv3-oper:vrf-name = ' + str(self.vrf_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.vrf_name is not None:
                            return True

                        if self.area_informations is not None and self.area_informations._has_data():
                            return True

                        if self.areas is not None and self.areas._has_data():
                            return True

                        if self.bad_checksums is not None and self.bad_checksums._has_data():
                            return True

                        if self.border_routers is not None and self.border_routers._has_data():
                            return True

                        if self.connected_routes is not None and self.connected_routes._has_data():
                            return True

                        if self.database_areas is not None and self.database_areas._has_data():
                            return True

                        if self.database_external_lsas is not None and self.database_external_lsas._has_data():
                            return True

                        if self.database_int_external_lsas is not None and self.database_int_external_lsas._has_data():
                            return True

                        if self.database_int_unknown_as_lsas is not None and self.database_int_unknown_as_lsas._has_data():
                            return True

                        if self.database_summary_areas is not None and self.database_summary_areas._has_data():
                            return True

                        if self.database_summary_process_table is not None and self.database_summary_process_table._has_data():
                            return True

                        if self.database_unknown_as_lsas is not None and self.database_unknown_as_lsas._has_data():
                            return True

                        if self.external_routes is not None and self.external_routes._has_data():
                            return True

                        if self.fast_reroutes is not None and self.fast_reroutes._has_data():
                            return True

                        if self.flood_list_process_table is not None and self.flood_list_process_table._has_data():
                            return True

                        if self.interface_brief_process_table is not None and self.interface_brief_process_table._has_data():
                            return True

                        if self.interface_process_table is not None and self.interface_process_table._has_data():
                            return True

                        if self.internal_routes is not None and self.internal_routes._has_data():
                            return True

                        if self.neighbor_detail_process_table is not None and self.neighbor_detail_process_table._has_data():
                            return True

                        if self.neighbor_process_table is not None and self.neighbor_process_table._has_data():
                            return True

                        if self.protocol_areas is not None and self.protocol_areas._has_data():
                            return True

                        if self.redistributions is not None and self.redistributions._has_data():
                            return True

                        if self.request_list_process_table is not None and self.request_list_process_table._has_data():
                            return True

                        if self.retransmission_list_process_table is not None and self.retransmission_list_process_table._has_data():
                            return True

                        if self.route_summary is not None and self.route_summary._has_data():
                            return True

                        if self.sham_link_table is not None and self.sham_link_table._has_data():
                            return True

                        if self.summary is not None and self.summary._has_data():
                            return True

                        if self.summary_prefixes is not None and self.summary_prefixes._has_data():
                            return True

                        if self.virtual_link is not None and self.virtual_link._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.Vrfs.Vrf']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:vrfs'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.vrf is not None:
                        for child_ref in self.vrf:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                    return meta._meta_table['Ospfv3.Processes.Process.Vrfs']['meta_info']


            class DefaultVrf(object):
                """
                Operational data for the default VRF
                (instance) in the OSPFv3 process
                
                .. attribute:: area_informations
                
                	OSPFv3 area information table
                	**type**\:  :py:class:`AreaInformations <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.AreaInformations>`
                
                .. attribute:: areas
                
                	OSPFv3 area table
                	**type**\:  :py:class:`Areas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas>`
                
                .. attribute:: bad_checksums
                
                	Bad Checksum Packets information table
                	**type**\:  :py:class:`BadChecksums <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.BadChecksums>`
                
                .. attribute:: border_routers
                
                	OSPFv3 border router information table
                	**type**\:  :py:class:`BorderRouters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.BorderRouters>`
                
                .. attribute:: connected_routes
                
                	OSPFv3 connected route information table
                	**type**\:  :py:class:`ConnectedRoutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes>`
                
                .. attribute:: database_areas
                
                	Database area table
                	**type**\:  :py:class:`DatabaseAreas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas>`
                
                .. attribute:: database_external_lsas
                
                	Database external LSA information
                	**type**\:  :py:class:`DatabaseExternalLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas>`
                
                .. attribute:: database_int_external_lsas
                
                	Internal database external LSA information
                	**type**\:  :py:class:`DatabaseIntExternalLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas>`
                
                .. attribute:: database_int_unknown_as_lsas
                
                	Internal Unknown Area LSA information
                	**type**\:  :py:class:`DatabaseIntUnknownAsLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas>`
                
                .. attribute:: database_summary_areas
                
                	Database summary table
                	**type**\:  :py:class:`DatabaseSummaryAreas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas>`
                
                .. attribute:: database_summary_process_table
                
                	Database summary table at process level
                	**type**\:  :py:class:`DatabaseSummaryProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable>`
                
                .. attribute:: database_unknown_as_lsas
                
                	Database AS Unknown Information
                	**type**\:  :py:class:`DatabaseUnknownAsLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas>`
                
                .. attribute:: external_routes
                
                	OSPFv3 external route information table
                	**type**\:  :py:class:`ExternalRoutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes>`
                
                .. attribute:: fast_reroutes
                
                	OSPFv3 fast reroute topology information table
                	**type**\:  :py:class:`FastReroutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.FastReroutes>`
                
                .. attribute:: flood_list_process_table
                
                	OSPFv3 flood list information table for all areas
                	**type**\:  :py:class:`FloodListProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable>`
                
                .. attribute:: interface_brief_process_table
                
                	OSPFv3 interface brief information table for all areas
                	**type**\:  :py:class:`InterfaceBriefProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InterfaceBriefProcessTable>`
                
                .. attribute:: interface_process_table
                
                	OSPFv3 interface information table for all areas
                	**type**\:  :py:class:`InterfaceProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable>`
                
                .. attribute:: internal_routes
                
                	OSPFv3 internal route information table
                	**type**\:  :py:class:`InternalRoutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InternalRoutes>`
                
                .. attribute:: neighbor_detail_process_table
                
                	OSPFv3 neighbor information table for all areas
                	**type**\:  :py:class:`NeighborDetailProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable>`
                
                .. attribute:: neighbor_process_table
                
                	OSPFv3 neighbor information table for all areas
                	**type**\:  :py:class:`NeighborProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable>`
                
                .. attribute:: protocol_areas
                
                	Protocol area table 
                	**type**\:  :py:class:`ProtocolAreas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ProtocolAreas>`
                
                .. attribute:: redistributions
                
                	Redistribution information table
                	**type**\:  :py:class:`Redistributions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Redistributions>`
                
                .. attribute:: request_list_process_table
                
                	OSPFv3 request list information for all areas
                	**type**\:  :py:class:`RequestListProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RequestListProcessTable>`
                
                .. attribute:: retransmission_list_process_table
                
                	OSPFv3 retransmission list information table for all areas
                	**type**\:  :py:class:`RetransmissionListProcessTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable>`
                
                .. attribute:: route_summary
                
                	Summarize OSPFv3 local RIB tables
                	**type**\:  :py:class:`RouteSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RouteSummary>`
                
                .. attribute:: sham_link_table
                
                	Sham link information
                	**type**\:  :py:class:`ShamLinkTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable>`
                
                .. attribute:: summary
                
                	OSPFv3 summary
                	**type**\:  :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary>`
                
                .. attribute:: summary_prefixes
                
                	Summary prefix information table
                	**type**\:  :py:class:`SummaryPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.SummaryPrefixes>`
                
                .. attribute:: virtual_link
                
                	Virtual link information
                	**type**\:  :py:class:`VirtualLink <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.VirtualLink>`
                
                

                """

                _prefix = 'ipv6-ospfv3-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.area_informations = Ospfv3.Processes.Process.DefaultVrf.AreaInformations()
                    self.area_informations.parent = self
                    self.areas = Ospfv3.Processes.Process.DefaultVrf.Areas()
                    self.areas.parent = self
                    self.bad_checksums = Ospfv3.Processes.Process.DefaultVrf.BadChecksums()
                    self.bad_checksums.parent = self
                    self.border_routers = Ospfv3.Processes.Process.DefaultVrf.BorderRouters()
                    self.border_routers.parent = self
                    self.connected_routes = Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes()
                    self.connected_routes.parent = self
                    self.database_areas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas()
                    self.database_areas.parent = self
                    self.database_external_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas()
                    self.database_external_lsas.parent = self
                    self.database_int_external_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas()
                    self.database_int_external_lsas.parent = self
                    self.database_int_unknown_as_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas()
                    self.database_int_unknown_as_lsas.parent = self
                    self.database_summary_areas = Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas()
                    self.database_summary_areas.parent = self
                    self.database_summary_process_table = Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable()
                    self.database_summary_process_table.parent = self
                    self.database_unknown_as_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas()
                    self.database_unknown_as_lsas.parent = self
                    self.external_routes = Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes()
                    self.external_routes.parent = self
                    self.fast_reroutes = Ospfv3.Processes.Process.DefaultVrf.FastReroutes()
                    self.fast_reroutes.parent = self
                    self.flood_list_process_table = Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable()
                    self.flood_list_process_table.parent = self
                    self.interface_brief_process_table = Ospfv3.Processes.Process.DefaultVrf.InterfaceBriefProcessTable()
                    self.interface_brief_process_table.parent = self
                    self.interface_process_table = Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable()
                    self.interface_process_table.parent = self
                    self.internal_routes = Ospfv3.Processes.Process.DefaultVrf.InternalRoutes()
                    self.internal_routes.parent = self
                    self.neighbor_detail_process_table = Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable()
                    self.neighbor_detail_process_table.parent = self
                    self.neighbor_process_table = Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable()
                    self.neighbor_process_table.parent = self
                    self.protocol_areas = Ospfv3.Processes.Process.DefaultVrf.ProtocolAreas()
                    self.protocol_areas.parent = self
                    self.redistributions = Ospfv3.Processes.Process.DefaultVrf.Redistributions()
                    self.redistributions.parent = self
                    self.request_list_process_table = Ospfv3.Processes.Process.DefaultVrf.RequestListProcessTable()
                    self.request_list_process_table.parent = self
                    self.retransmission_list_process_table = Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable()
                    self.retransmission_list_process_table.parent = self
                    self.route_summary = Ospfv3.Processes.Process.DefaultVrf.RouteSummary()
                    self.route_summary.parent = self
                    self.sham_link_table = Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable()
                    self.sham_link_table.parent = self
                    self.summary = Ospfv3.Processes.Process.DefaultVrf.Summary()
                    self.summary.parent = self
                    self.summary_prefixes = Ospfv3.Processes.Process.DefaultVrf.SummaryPrefixes()
                    self.summary_prefixes.parent = self
                    self.virtual_link = Ospfv3.Processes.Process.DefaultVrf.VirtualLink()
                    self.virtual_link.parent = self


                class SummaryPrefixes(object):
                    """
                    Summary prefix information table
                    
                    .. attribute:: summary_prefix
                    
                    	Summary prefix information
                    	**type**\: list of  :py:class:`SummaryPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.SummaryPrefixes.SummaryPrefix>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.summary_prefix = YList()
                        self.summary_prefix.parent = self
                        self.summary_prefix.name = 'summary_prefix'


                    class SummaryPrefix(object):
                        """
                        Summary prefix information
                        
                        .. attribute:: prefix
                        
                        	Summary prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..128
                        
                        .. attribute:: prefix_metric
                        
                        	Prefix metric
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: prefix_metric_type
                        
                        	Prefix metric type
                        	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                        
                        .. attribute:: tag
                        
                        	Tag
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.prefix_length = None
                            self.prefix_metric = None
                            self.prefix_metric_type = None
                            self.tag = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:summary-prefix'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.prefix_metric is not None:
                                return True

                            if self.prefix_metric_type is not None:
                                return True

                            if self.tag is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.SummaryPrefixes.SummaryPrefix']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:summary-prefixes'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.summary_prefix is not None:
                            for child_ref in self.summary_prefix:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.SummaryPrefixes']['meta_info']


                class BorderRouters(object):
                    """
                    OSPFv3 border router information table
                    
                    .. attribute:: border_router
                    
                    	OSPFv3 border router information
                    	**type**\: list of  :py:class:`BorderRouter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.BorderRouters.BorderRouter>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.border_router = YList()
                        self.border_router.parent = self
                        self.border_router.name = 'border_router'


                    class BorderRouter(object):
                        """
                        OSPFv3 border router information
                        
                        .. attribute:: border_router_id  <key>
                        
                        	Router address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: border_router_path
                        
                        	List of border router paths
                        	**type**\: list of  :py:class:`BorderRouterPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.BorderRouters.BorderRouter.BorderRouterPath>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.border_router_id = None
                            self.border_router_path = YList()
                            self.border_router_path.parent = self
                            self.border_router_path.name = 'border_router_path'


                        class BorderRouterPath(object):
                            """
                            List of border router paths
                            
                            .. attribute:: border_router_area_id
                            
                            	Area string in decimal or dotted\-decimal format 
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            .. attribute:: border_router_next_hop
                            
                            	Next hop address 
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: border_router_route_metric
                            
                            	Metric
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: border_router_type
                            
                            	Border router type 
                            	**type**\:  :py:class:`Ospfv3BorderRouteEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3BorderRouteEnum>`
                            
                            .. attribute:: interface_name
                            
                            	Next hop interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_intra_area_router
                            
                            	If true, intra\-area router else inter\-area router
                            	**type**\:  bool
                            
                            .. attribute:: spf_version
                            
                            	SPF version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.border_router_area_id = None
                                self.border_router_next_hop = None
                                self.border_router_route_metric = None
                                self.border_router_type = None
                                self.interface_name = None
                                self.is_intra_area_router = None
                                self.spf_version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:border-router-path'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.border_router_area_id is not None:
                                    return True

                                if self.border_router_next_hop is not None:
                                    return True

                                if self.border_router_route_metric is not None:
                                    return True

                                if self.border_router_type is not None:
                                    return True

                                if self.interface_name is not None:
                                    return True

                                if self.is_intra_area_router is not None:
                                    return True

                                if self.spf_version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.BorderRouters.BorderRouter.BorderRouterPath']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.border_router_id is None:
                                raise YPYModelError('Key property border_router_id is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:border-router[Cisco-IOS-XR-ipv6-ospfv3-oper:border-router-id = ' + str(self.border_router_id) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.border_router_id is not None:
                                return True

                            if self.border_router_path is not None:
                                for child_ref in self.border_router_path:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.BorderRouters.BorderRouter']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:border-routers'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.border_router is not None:
                            for child_ref in self.border_router:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.BorderRouters']['meta_info']


                class ShamLinkTable(object):
                    """
                    Sham link information
                    
                    .. attribute:: is_sham_link_authentication_enabled
                    
                    	If true, sham link authentication is enabled 
                    	**type**\:  bool
                    
                    .. attribute:: is_sham_link_encryption_enabled
                    
                    	If true, sham link encryption is enabled 
                    	**type**\:  bool
                    
                    .. attribute:: is_sham_link_ip_security_active
                    
                    	If true, Sham link IP security is active 
                    	**type**\:  bool
                    
                    .. attribute:: is_sham_link_ip_security_required
                    
                    	If true, sham link IP security is required 
                    	**type**\:  bool
                    
                    .. attribute:: sham_link_area
                    
                    	Area id
                    	**type**\:  str
                    
                    .. attribute:: sham_link_authentication_transmit
                    
                    	Sham link authentication transmit 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_cost
                    
                    	Cost of the sham link
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: sham_link_dc_bitless_lsa
                    
                    	Number of LSA's with demand circuit bit not set
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_dead_interval
                    
                    	Dead interval (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_demand_circuit
                    
                    	If true, the link runs as demand circuit
                    	**type**\:  bool
                    
                    .. attribute:: sham_link_dest_address
                    
                    	Sham\-link dest
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: sham_link_encrypted_authentication_transmitted
                    
                    	Sham link encrypted authentication transmitted 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_encryption_spi
                    
                    	Sham link encryption spi
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_encryption_transmitted
                    
                    	Sham link encryption transmitted 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_gr
                    
                    	If true, Gracefule restart in progress
                    	**type**\:  bool
                    
                    .. attribute:: sham_link_gr_enabled
                    
                    	If true,  enabled
                    	**type**\:  bool
                    
                    .. attribute:: sham_link_hello_interval
                    
                    	Hello interval (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_ifindex
                    
                    	Sham\-link ifindex
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_last_gr
                    
                    	Time in seconds since last GR
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_neighbor
                    
                    	Neighbor information
                    	**type**\:  :py:class:`ShamLinkNeighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable.ShamLinkNeighbor>`
                    
                    .. attribute:: sham_link_neighbor_id
                    
                    	Neighbor on other end of this sham link
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: sham_link_next_hello
                    
                    	Time until next hello (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_passive
                    
                    	If true, interface is passive
                    	**type**\:  bool
                    
                    .. attribute:: sham_link_retransmission_interval
                    
                    	Retransmission interval (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sham_link_source_address
                    
                    	Sham\-link source
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: sham_link_state
                    
                    	OSPF interface state for the sham link
                    	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                    
                    .. attribute:: sham_link_transmission_delay
                    
                    	Transmission delay in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: sham_link_wait_interval
                    
                    	Wait interval (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_authentication_spi
                    
                    	Sham link authentication spi 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.is_sham_link_authentication_enabled = None
                        self.is_sham_link_encryption_enabled = None
                        self.is_sham_link_ip_security_active = None
                        self.is_sham_link_ip_security_required = None
                        self.sham_link_area = None
                        self.sham_link_authentication_transmit = None
                        self.sham_link_cost = None
                        self.sham_link_dc_bitless_lsa = None
                        self.sham_link_dead_interval = None
                        self.sham_link_demand_circuit = None
                        self.sham_link_dest_address = None
                        self.sham_link_encrypted_authentication_transmitted = None
                        self.sham_link_encryption_spi = None
                        self.sham_link_encryption_transmitted = None
                        self.sham_link_gr = None
                        self.sham_link_gr_enabled = None
                        self.sham_link_hello_interval = None
                        self.sham_link_ifindex = None
                        self.sham_link_last_gr = None
                        self.sham_link_neighbor = Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable.ShamLinkNeighbor()
                        self.sham_link_neighbor.parent = self
                        self.sham_link_neighbor_id = None
                        self.sham_link_next_hello = None
                        self.sham_link_passive = None
                        self.sham_link_retransmission_interval = None
                        self.sham_link_source_address = None
                        self.sham_link_state = None
                        self.sham_link_transmission_delay = None
                        self.sham_link_wait_interval = None
                        self.virtual_link_authentication_spi = None


                    class ShamLinkNeighbor(object):
                        """
                        Neighbor information
                        
                        .. attribute:: sham_link_retransmission
                        
                        	Neighbor retransmission info
                        	**type**\:  :py:class:`ShamLinkRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable.ShamLinkNeighbor.ShamLinkRetransmission>`
                        
                        .. attribute:: sham_link_state
                        
                        	Adjacency state
                        	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                        
                        .. attribute:: sham_link_suppress_hello
                        
                        	If true Hellos suppressed
                        	**type**\:  bool
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.sham_link_retransmission = Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable.ShamLinkNeighbor.ShamLinkRetransmission()
                            self.sham_link_retransmission.parent = self
                            self.sham_link_state = None
                            self.sham_link_suppress_hello = None


                        class ShamLinkRetransmission(object):
                            """
                            Neighbor retransmission info
                            
                            .. attribute:: area_first_flood
                            
                            	First flood item for area scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_first_flood_index
                            
                            	Index of the first flood item for area scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_flood_index
                            
                            	Area scope LSA's flood index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_next_flood
                            
                            	Next flood item for area scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_next_flood_index
                            
                            	Index of next flood item for Area scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_first_flood
                            
                            	First flood item for AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_first_flood_index
                            
                            	Index for first flood item for AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_flood_index
                            
                            	AS scope LSA's flood index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_next_flood
                            
                            	Next flood item for AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_next_flood_index
                            
                            	Index of next flood item for AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: database_descriptor_retransmissions
                            
                            	Number of database descriptor retransmissions during last exchange
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_retransmission_length
                            
                            	Number of LSAs sent in last retransmission
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_retransmission_time
                            
                            	Last retransmission scan time (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_first_flood
                            
                            	Link first flood information 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_first_flood_index
                            
                            	Link first flood information index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_flood_index
                            
                            	Link flood index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_next_flood
                            
                            	Link next flood information 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_next_flood_index
                            
                            	Link next flood information index 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_retransmission_timer
                            
                            	Time until next LSA retransmission (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_retransmission_length
                            
                            	Maximum number of LSAs sent in a retransmission
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_retransmission_time
                            
                            	Maximum retransmission scan time (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_retransmissions
                            
                            	Number of neighbor retransmissions 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: retransmissions
                            
                            	Number of retransmissions for this neighbor
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_first_flood = None
                                self.area_first_flood_index = None
                                self.area_flood_index = None
                                self.area_next_flood = None
                                self.area_next_flood_index = None
                                self.as_first_flood = None
                                self.as_first_flood_index = None
                                self.as_flood_index = None
                                self.as_next_flood = None
                                self.as_next_flood_index = None
                                self.database_descriptor_retransmissions = None
                                self.last_retransmission_length = None
                                self.last_retransmission_time = None
                                self.link_first_flood = None
                                self.link_first_flood_index = None
                                self.link_flood_index = None
                                self.link_next_flood = None
                                self.link_next_flood_index = None
                                self.lsa_retransmission_timer = None
                                self.maximum_retransmission_length = None
                                self.maximum_retransmission_time = None
                                self.neighbor_retransmissions = None
                                self.retransmissions = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:sham-link-retransmission'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_first_flood is not None:
                                    return True

                                if self.area_first_flood_index is not None:
                                    return True

                                if self.area_flood_index is not None:
                                    return True

                                if self.area_next_flood is not None:
                                    return True

                                if self.area_next_flood_index is not None:
                                    return True

                                if self.as_first_flood is not None:
                                    return True

                                if self.as_first_flood_index is not None:
                                    return True

                                if self.as_flood_index is not None:
                                    return True

                                if self.as_next_flood is not None:
                                    return True

                                if self.as_next_flood_index is not None:
                                    return True

                                if self.database_descriptor_retransmissions is not None:
                                    return True

                                if self.last_retransmission_length is not None:
                                    return True

                                if self.last_retransmission_time is not None:
                                    return True

                                if self.link_first_flood is not None:
                                    return True

                                if self.link_first_flood_index is not None:
                                    return True

                                if self.link_flood_index is not None:
                                    return True

                                if self.link_next_flood is not None:
                                    return True

                                if self.link_next_flood_index is not None:
                                    return True

                                if self.lsa_retransmission_timer is not None:
                                    return True

                                if self.maximum_retransmission_length is not None:
                                    return True

                                if self.maximum_retransmission_time is not None:
                                    return True

                                if self.neighbor_retransmissions is not None:
                                    return True

                                if self.retransmissions is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable.ShamLinkNeighbor.ShamLinkRetransmission']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:sham-link-neighbor'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.sham_link_retransmission is not None and self.sham_link_retransmission._has_data():
                                return True

                            if self.sham_link_state is not None:
                                return True

                            if self.sham_link_suppress_hello is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable.ShamLinkNeighbor']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:sham-link-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.is_sham_link_authentication_enabled is not None:
                            return True

                        if self.is_sham_link_encryption_enabled is not None:
                            return True

                        if self.is_sham_link_ip_security_active is not None:
                            return True

                        if self.is_sham_link_ip_security_required is not None:
                            return True

                        if self.sham_link_area is not None:
                            return True

                        if self.sham_link_authentication_transmit is not None:
                            return True

                        if self.sham_link_cost is not None:
                            return True

                        if self.sham_link_dc_bitless_lsa is not None:
                            return True

                        if self.sham_link_dead_interval is not None:
                            return True

                        if self.sham_link_demand_circuit is not None:
                            return True

                        if self.sham_link_dest_address is not None:
                            return True

                        if self.sham_link_encrypted_authentication_transmitted is not None:
                            return True

                        if self.sham_link_encryption_spi is not None:
                            return True

                        if self.sham_link_encryption_transmitted is not None:
                            return True

                        if self.sham_link_gr is not None:
                            return True

                        if self.sham_link_gr_enabled is not None:
                            return True

                        if self.sham_link_hello_interval is not None:
                            return True

                        if self.sham_link_ifindex is not None:
                            return True

                        if self.sham_link_last_gr is not None:
                            return True

                        if self.sham_link_neighbor is not None and self.sham_link_neighbor._has_data():
                            return True

                        if self.sham_link_neighbor_id is not None:
                            return True

                        if self.sham_link_next_hello is not None:
                            return True

                        if self.sham_link_passive is not None:
                            return True

                        if self.sham_link_retransmission_interval is not None:
                            return True

                        if self.sham_link_source_address is not None:
                            return True

                        if self.sham_link_state is not None:
                            return True

                        if self.sham_link_transmission_delay is not None:
                            return True

                        if self.sham_link_wait_interval is not None:
                            return True

                        if self.virtual_link_authentication_spi is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ShamLinkTable']['meta_info']


                class DatabaseIntUnknownAsLsas(object):
                    """
                    Internal Unknown Area LSA information
                    
                    .. attribute:: database_int_unknown_as_lsa
                    
                    	Internal database Unknown LSA information
                    	**type**\: list of  :py:class:`DatabaseIntUnknownAsLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.database_int_unknown_as_lsa = YList()
                        self.database_int_unknown_as_lsa.parent = self
                        self.database_int_unknown_as_lsa.name = 'database_int_unknown_as_lsa'


                    class DatabaseIntUnknownAsLsa(object):
                        """
                        Internal database Unknown LSA information
                        
                        .. attribute:: advertising_router
                        
                        	Advertising Router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: interface_name_xr
                        
                        	LSA interface name 
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_sham_link
                        
                        	If true, it is a sham link 
                        	**type**\:  bool
                        
                        .. attribute:: is_virtual_link
                        
                        	If true, it is a virtual link 
                        	**type**\:  bool
                        
                        .. attribute:: ls_id
                        
                        	Link state ID
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: lsa_detail
                        
                        	Detailed LSA information
                        	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaDetail>`
                        
                        .. attribute:: lsa_header
                        
                        	Header information 
                        	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaHeader>`
                        
                        .. attribute:: lsa_type
                        
                        	LSA type
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: sham_link_id
                        
                        	Shamlink ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_id
                        
                        	Virtual link ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.advertising_router = None
                            self.interface_name_xr = None
                            self.is_sham_link = None
                            self.is_virtual_link = None
                            self.ls_id = None
                            self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaDetail()
                            self.lsa_detail.parent = self
                            self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaHeader()
                            self.lsa_header.parent = self
                            self.lsa_type = None
                            self.sham_link_id = None
                            self.virtual_link_id = None


                        class LsaHeader(object):
                            """
                            Header information 
                            
                            .. attribute:: advertising_router
                            
                            	Router ID of Advertising Router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: checksum
                            
                            	Checksum value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: is_do_not_age_lsa
                            
                            	If true, Do Not Age this LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_graceful_restart_active
                            
                            	If true, if grace restart is active 
                            	**type**\:  bool
                            
                            .. attribute:: ls_id
                            
                            	LS ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_age
                            
                            	LSA's Age (s)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsa_area_id
                            
                            	Area ID in decimal or dotted\-decimal format
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            .. attribute:: lsa_type
                            
                            	LSA type
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: sequence_number
                            
                            	Current Sequence number
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.advertising_router = None
                                self.checksum = None
                                self.is_do_not_age_lsa = None
                                self.is_graceful_restart_active = None
                                self.ls_id = None
                                self.lsa_age = None
                                self.lsa_area_id = None
                                self.lsa_type = None
                                self.sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.advertising_router is not None:
                                    return True

                                if self.checksum is not None:
                                    return True

                                if self.is_do_not_age_lsa is not None:
                                    return True

                                if self.is_graceful_restart_active is not None:
                                    return True

                                if self.ls_id is not None:
                                    return True

                                if self.lsa_age is not None:
                                    return True

                                if self.lsa_area_id is not None:
                                    return True

                                if self.lsa_type is not None:
                                    return True

                                if self.sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaHeader']['meta_info']


                        class LsaDetail(object):
                            """
                            Detailed LSA information
                            
                            .. attribute:: free_time
                            
                            	The amount of time since the last check was made to free this LSA (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: is_acknowledged
                            
                            	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                            	**type**\:  bool
                            
                            .. attribute:: is_advertising_router_reachable
                            
                            	If true, Advertising Router is reachable
                            	**type**\:  bool
                            
                            .. attribute:: is_deleted
                            
                            	If true, flag is set to delete this LSA 
                            	**type**\:  bool
                            
                            .. attribute:: is_flood_pending
                            
                            	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                            	**type**\:  bool
                            
                            .. attribute:: is_maximum_aged
                            
                            	If true, the reason not to delete this LSA is because it is in Maxage Queue
                            	**type**\:  bool
                            
                            .. attribute:: is_neighbor_exchange
                            
                            	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                            	**type**\:  bool
                            
                            .. attribute:: is_no_delete
                            
                            	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_nsr_ack_pending
                            
                            	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                            	**type**\:  bool
                            
                            .. attribute:: is_partial_spf
                            
                            	If true, the reason not to delete this LSA is because it is in partial SPF queue
                            	**type**\:  bool
                            
                            .. attribute:: is_routing_bit
                            
                            	If true, Routing Bit set on the LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_routing_table
                            
                            	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                            	**type**\:  bool
                            
                            .. attribute:: lsa_flood_required_post_fail_over
                            
                            	LSA flood required after FO
                            	**type**\:  bool
                            
                            .. attribute:: lsa_length
                            
                            	Length of the LSA
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsa_sync_state
                            
                            	State of LSA sync with active
                            	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                            
                            .. attribute:: minute_table_index
                            
                            	Minute table index
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: nsr_flood_required
                            
                            	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                            	**type**\:  bool
                            
                            .. attribute:: rate_limit
                            
                            	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                            	**type**\:  bool
                            
                            .. attribute:: second_table_index
                            
                            	Second table index
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.free_time = None
                                self.is_acknowledged = None
                                self.is_advertising_router_reachable = None
                                self.is_deleted = None
                                self.is_flood_pending = None
                                self.is_maximum_aged = None
                                self.is_neighbor_exchange = None
                                self.is_no_delete = None
                                self.is_nsr_ack_pending = None
                                self.is_partial_spf = None
                                self.is_routing_bit = None
                                self.is_routing_table = None
                                self.lsa_flood_required_post_fail_over = None
                                self.lsa_length = None
                                self.lsa_sync_state = None
                                self.minute_table_index = None
                                self.nsr_flood_required = None
                                self.rate_limit = None
                                self.second_table_index = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.free_time is not None:
                                    return True

                                if self.is_acknowledged is not None:
                                    return True

                                if self.is_advertising_router_reachable is not None:
                                    return True

                                if self.is_deleted is not None:
                                    return True

                                if self.is_flood_pending is not None:
                                    return True

                                if self.is_maximum_aged is not None:
                                    return True

                                if self.is_neighbor_exchange is not None:
                                    return True

                                if self.is_no_delete is not None:
                                    return True

                                if self.is_nsr_ack_pending is not None:
                                    return True

                                if self.is_partial_spf is not None:
                                    return True

                                if self.is_routing_bit is not None:
                                    return True

                                if self.is_routing_table is not None:
                                    return True

                                if self.lsa_flood_required_post_fail_over is not None:
                                    return True

                                if self.lsa_length is not None:
                                    return True

                                if self.lsa_sync_state is not None:
                                    return True

                                if self.minute_table_index is not None:
                                    return True

                                if self.nsr_flood_required is not None:
                                    return True

                                if self.rate_limit is not None:
                                    return True

                                if self.second_table_index is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa.LsaDetail']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-as-lsa'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.advertising_router is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_sham_link is not None:
                                return True

                            if self.is_virtual_link is not None:
                                return True

                            if self.ls_id is not None:
                                return True

                            if self.lsa_detail is not None and self.lsa_detail._has_data():
                                return True

                            if self.lsa_header is not None and self.lsa_header._has_data():
                                return True

                            if self.lsa_type is not None:
                                return True

                            if self.sham_link_id is not None:
                                return True

                            if self.virtual_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas.DatabaseIntUnknownAsLsa']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-as-lsas'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.database_int_unknown_as_lsa is not None:
                            for child_ref in self.database_int_unknown_as_lsa:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseIntUnknownAsLsas']['meta_info']


                class AreaInformations(object):
                    """
                    OSPFv3 area information table
                    
                    .. attribute:: area_information
                    
                    	OSPFv3 area information
                    	**type**\: list of  :py:class:`AreaInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.AreaInformations.AreaInformation>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.area_information = YList()
                        self.area_information.parent = self
                        self.area_information.name = 'area_information'


                    class AreaInformation(object):
                        """
                        OSPFv3 area information
                        
                        .. attribute:: area_id  <key>
                        
                        	Area ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: area_dc_bitless_ls_as
                        
                        	Number of LSA with demand circuit bit not set
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: area_interfaces
                        
                        	Number of interfaces in the area
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: area_lfa_interface_count
                        
                        	Number of LFA enabled interfaces
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: area_lfa_revision
                        
                        	Area LFA revision
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: area_opaque_lsa_checksum
                        
                        	Sum of opaque LSA checksums
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: area_opaque_lsas
                        
                        	Number of opaque LSAs in the area
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: area_per_prefix_lfa_interface_count
                        
                        	Number of Per Prefix LFA enabled interfaces
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: area_range
                        
                        	List of ranges to summarize
                        	**type**\: list of  :py:class:`AreaRange <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.AreaInformations.AreaInformation.AreaRange>`
                        
                        .. attribute:: do_not_age_ls_as
                        
                        	Number of do not age LSAs
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: flood_list_length
                        
                        	Number of LSAs which need to be flooded
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: indication_ls_as
                        
                        	Number of indication LSAs
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: is_area_nssa
                        
                        	If true, area is a NSSA
                        	**type**\:  bool
                        
                        .. attribute:: is_area_stubbed
                        
                        	If true, stub area
                        	**type**\:  bool
                        
                        .. attribute:: is_area_total_stubbed
                        
                        	If true, totally stubby area
                        	**type**\:  bool
                        
                        .. attribute:: is_backbone_area_active
                        
                        	If true, Backbone area is active
                        	**type**\:  bool
                        
                        .. attribute:: is_nssa_default
                        
                        	If true, generate NSSA default route
                        	**type**\:  bool
                        
                        .. attribute:: is_nssa_translated
                        
                        	If true, perform 7/5 translation
                        	**type**\:  bool
                        
                        .. attribute:: is_rrr_enabled
                        
                        	If true, RRR is enabled
                        	**type**\:  bool
                        
                        .. attribute:: nssa_no_redistribution
                        
                        	If true, No redistribution into this NSSA area
                        	**type**\:  bool
                        
                        .. attribute:: sp_fs
                        
                        	Number of SPF calculations run
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: stub_default_cost
                        
                        	Default cost for Stub or NSSA area
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area_id = None
                            self.area_dc_bitless_ls_as = None
                            self.area_interfaces = None
                            self.area_lfa_interface_count = None
                            self.area_lfa_revision = None
                            self.area_opaque_lsa_checksum = None
                            self.area_opaque_lsas = None
                            self.area_per_prefix_lfa_interface_count = None
                            self.area_range = YList()
                            self.area_range.parent = self
                            self.area_range.name = 'area_range'
                            self.do_not_age_ls_as = None
                            self.flood_list_length = None
                            self.indication_ls_as = None
                            self.is_area_nssa = None
                            self.is_area_stubbed = None
                            self.is_area_total_stubbed = None
                            self.is_backbone_area_active = None
                            self.is_nssa_default = None
                            self.is_nssa_translated = None
                            self.is_rrr_enabled = None
                            self.nssa_no_redistribution = None
                            self.sp_fs = None
                            self.stub_default_cost = None


                        class AreaRange(object):
                            """
                            List of ranges to summarize
                            
                            .. attribute:: is_cost_configured
                            
                            	If true, cost is configured 
                            	**type**\:  bool
                            
                            .. attribute:: net_cost
                            
                            	Net cost 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: range_prefix
                            
                            	IP prefix for summarization
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: range_prefix_length
                            
                            	IP prefix length for summarization
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: status
                            
                            	Area range status 
                            	**type**\:  :py:class:`Ospfv3AreaRangeStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3AreaRangeStatusEnum>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.is_cost_configured = None
                                self.net_cost = None
                                self.range_prefix = None
                                self.range_prefix_length = None
                                self.status = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-range'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.is_cost_configured is not None:
                                    return True

                                if self.net_cost is not None:
                                    return True

                                if self.range_prefix is not None:
                                    return True

                                if self.range_prefix_length is not None:
                                    return True

                                if self.status is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.AreaInformations.AreaInformation.AreaRange']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.area_id is None:
                                raise YPYModelError('Key property area_id is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-information[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area_id is not None:
                                return True

                            if self.area_dc_bitless_ls_as is not None:
                                return True

                            if self.area_interfaces is not None:
                                return True

                            if self.area_lfa_interface_count is not None:
                                return True

                            if self.area_lfa_revision is not None:
                                return True

                            if self.area_opaque_lsa_checksum is not None:
                                return True

                            if self.area_opaque_lsas is not None:
                                return True

                            if self.area_per_prefix_lfa_interface_count is not None:
                                return True

                            if self.area_range is not None:
                                for child_ref in self.area_range:
                                    if child_ref._has_data():
                                        return True

                            if self.do_not_age_ls_as is not None:
                                return True

                            if self.flood_list_length is not None:
                                return True

                            if self.indication_ls_as is not None:
                                return True

                            if self.is_area_nssa is not None:
                                return True

                            if self.is_area_stubbed is not None:
                                return True

                            if self.is_area_total_stubbed is not None:
                                return True

                            if self.is_backbone_area_active is not None:
                                return True

                            if self.is_nssa_default is not None:
                                return True

                            if self.is_nssa_translated is not None:
                                return True

                            if self.is_rrr_enabled is not None:
                                return True

                            if self.nssa_no_redistribution is not None:
                                return True

                            if self.sp_fs is not None:
                                return True

                            if self.stub_default_cost is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.AreaInformations.AreaInformation']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-informations'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.area_information is not None:
                            for child_ref in self.area_information:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.AreaInformations']['meta_info']


                class InterfaceProcessTable(object):
                    """
                    OSPFv3 interface information table for all areas
                    
                    .. attribute:: interface
                    
                    	OSPFv3 interface information
                    	**type**\: list of  :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        OSPFv3 interface information
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: active_interface
                        
                        	Active interface details 
                        	**type**\:  :py:class:`ActiveInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface.ActiveInterface>`
                        
                        .. attribute:: adjacent_neighbor
                        
                        	Number of adjacent neighbors
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: backup_designated_router_address
                        
                        	Backup designated router interface address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: backup_designated_router_id
                        
                        	Backup designated router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: configured_ldp_sync
                        
                        	If true, configured as LDP sync
                        	**type**\:  bool
                        
                        .. attribute:: dead_interval
                        
                        	Configured dead interval (s) 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: designated_router_address
                        
                        	Designated router interface address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: designated_router_id
                        
                        	Designated router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: hello_interval
                        
                        	Configured hello interval (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_address
                        
                        	Interface IPv6 address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: interface_authentication_spi
                        
                        	Interface authentication spi 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_authentication_transmit
                        
                        	Interface authentication transmit 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_bfd
                        
                        	BFD information 
                        	**type**\:  :py:class:`InterfaceBfd <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface.InterfaceBfd>`
                        
                        .. attribute:: interface_dc_bitless_ls_as
                        
                        	Number of LSAs with demand circuit bit not set for the area in which the interface is running
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_encrypted_authentication_transmitted
                        
                        	Interface encrypted authentication transmitted 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_encryption_spi
                        
                        	Interface encryption spi
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_encryption_transmitted
                        
                        	Interface encryption transmitted 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_ldp_sync
                        
                        	If true, interface LDP sync is achieved
                        	**type**\:  bool
                        
                        .. attribute:: interface_link_cost
                        
                        	Interface link cost
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: interface_neighbor
                        
                        	Information for neighbors on the interface
                        	**type**\: list of  :py:class:`InterfaceNeighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface.InterfaceNeighbor>`
                        
                        .. attribute:: interface_number
                        
                        	Interface number 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_priority
                        
                        	Interface priority
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_references
                        
                        	Interface reference count 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_retransmission_interval
                        
                        	Configured retransmit interval (s) 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_router_id
                        
                        	Interface router ID 
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: interface_state
                        
                        	Interface state
                        	**type**\:  :py:class:`ImStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.ImStateEnumEnum>`
                        
                        .. attribute:: is_demand_circuit_configured
                        
                        	If true, configured as demand circuit 
                        	**type**\:  bool
                        
                        .. attribute:: is_designated_router
                        
                        	If true, designated router
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_demand_circuit
                        
                        	If true, interface running as demand circuit
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_encryption_enabled
                        
                        	If true, interface encryption is enabled 
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_flood_reduction
                        
                        	If true, interface flood reduction is active 
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_ip_security_active
                        
                        	If true, interface IP security is active 
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_ip_security_required
                        
                        	If true, interface IP security is required 
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_line_up
                        
                        	If true, line protocol is up 
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_lsa_filtered
                        
                        	Filter is configured for out going LSAs 
                        	**type**\:  bool
                        
                        .. attribute:: network_lsa_flush_timer
                        
                        	The amount of time in seconds before flush timer for old network LSA expires 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: network_type
                        
                        	Network type
                        	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                        
                        .. attribute:: next_hello_time
                        
                        	Time until next Hello (s) 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ospf_interface_state
                        
                        	Interface state
                        	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                        
                        .. attribute:: transmission_delay
                        
                        	Interface transmission delay (sec)
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: wait_interval
                        
                        	Configured wait interval (s) 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.active_interface = Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface.ActiveInterface()
                            self.active_interface.parent = self
                            self.adjacent_neighbor = None
                            self.backup_designated_router_address = None
                            self.backup_designated_router_id = None
                            self.configured_ldp_sync = None
                            self.dead_interval = None
                            self.designated_router_address = None
                            self.designated_router_id = None
                            self.hello_interval = None
                            self.interface_address = None
                            self.interface_authentication_spi = None
                            self.interface_authentication_transmit = None
                            self.interface_bfd = Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface.InterfaceBfd()
                            self.interface_bfd.parent = self
                            self.interface_dc_bitless_ls_as = None
                            self.interface_encrypted_authentication_transmitted = None
                            self.interface_encryption_spi = None
                            self.interface_encryption_transmitted = None
                            self.interface_ldp_sync = None
                            self.interface_link_cost = None
                            self.interface_neighbor = YList()
                            self.interface_neighbor.parent = self
                            self.interface_neighbor.name = 'interface_neighbor'
                            self.interface_number = None
                            self.interface_priority = None
                            self.interface_references = None
                            self.interface_retransmission_interval = None
                            self.interface_router_id = None
                            self.interface_state = None
                            self.is_demand_circuit_configured = None
                            self.is_designated_router = None
                            self.is_interface_demand_circuit = None
                            self.is_interface_encryption_enabled = None
                            self.is_interface_flood_reduction = None
                            self.is_interface_ip_security_active = None
                            self.is_interface_ip_security_required = None
                            self.is_interface_line_up = None
                            self.is_interface_lsa_filtered = None
                            self.network_lsa_flush_timer = None
                            self.network_type = None
                            self.next_hello_time = None
                            self.ospf_interface_state = None
                            self.transmission_delay = None
                            self.wait_interval = None


                        class ActiveInterface(object):
                            """
                            Active interface details 
                            
                            .. attribute:: flood_queue_length
                            
                            	Flood queue length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: flood_scan_length
                            
                            	Last flood scan length 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_area_flood_index
                            
                            	Area scope LSAs flood index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_area_next_flood
                            
                            	Next LSA to flood (Area scope)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_area_next_flood_index
                            
                            	Index of next LSA to flood (Area scope) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_as_flood_index
                            
                            	AS scope LSAs flood index 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_as_next_flood
                            
                            	Next LSA to flood (AS scope)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_as_next_flood_index
                            
                            	Index of next LSA to flood (AS scope)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_flood_pacing_timer
                            
                            	Time until next flood pacing timer (ms) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_link_flood_index
                            
                            	Interface flood link index 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_link_next_flood
                            
                            	Interface link next flood information 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_link_next_index
                            
                            	Interface link next information index 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_neighbors
                            
                            	Total number of neighbors 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: last_flood_time
                            
                            	Last flood scan time (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_flood_length
                            
                            	Maximum flood length 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_flood_time
                            
                            	Maximum flood time (ms) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: suppressed_hellos
                            
                            	Number of neighbors for which hellos are suppressed 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: wait_time
                            
                            	Wait time for DR/BDR selection (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.flood_queue_length = None
                                self.flood_scan_length = None
                                self.interface_area_flood_index = None
                                self.interface_area_next_flood = None
                                self.interface_area_next_flood_index = None
                                self.interface_as_flood_index = None
                                self.interface_as_next_flood = None
                                self.interface_as_next_flood_index = None
                                self.interface_flood_pacing_timer = None
                                self.interface_link_flood_index = None
                                self.interface_link_next_flood = None
                                self.interface_link_next_index = None
                                self.interface_neighbors = None
                                self.last_flood_time = None
                                self.maximum_flood_length = None
                                self.maximum_flood_time = None
                                self.suppressed_hellos = None
                                self.wait_time = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:active-interface'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.flood_queue_length is not None:
                                    return True

                                if self.flood_scan_length is not None:
                                    return True

                                if self.interface_area_flood_index is not None:
                                    return True

                                if self.interface_area_next_flood is not None:
                                    return True

                                if self.interface_area_next_flood_index is not None:
                                    return True

                                if self.interface_as_flood_index is not None:
                                    return True

                                if self.interface_as_next_flood is not None:
                                    return True

                                if self.interface_as_next_flood_index is not None:
                                    return True

                                if self.interface_flood_pacing_timer is not None:
                                    return True

                                if self.interface_link_flood_index is not None:
                                    return True

                                if self.interface_link_next_flood is not None:
                                    return True

                                if self.interface_link_next_index is not None:
                                    return True

                                if self.interface_neighbors is not None:
                                    return True

                                if self.last_flood_time is not None:
                                    return True

                                if self.maximum_flood_length is not None:
                                    return True

                                if self.maximum_flood_time is not None:
                                    return True

                                if self.suppressed_hellos is not None:
                                    return True

                                if self.wait_time is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface.ActiveInterface']['meta_info']


                        class InterfaceBfd(object):
                            """
                            BFD information 
                            
                            .. attribute:: bfd_detection_multiplier
                            
                            	BFD detection multiplier 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: bfd_interval
                            
                            	BFD interval (ms) 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: bfd_intf_enable_mode
                            
                            	BFD Enable Mode on the interface \- Default/Strict
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bfd_detection_multiplier = None
                                self.bfd_interval = None
                                self.bfd_intf_enable_mode = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-bfd'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bfd_detection_multiplier is not None:
                                    return True

                                if self.bfd_interval is not None:
                                    return True

                                if self.bfd_intf_enable_mode is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface.InterfaceBfd']['meta_info']


                        class InterfaceNeighbor(object):
                            """
                            Information for neighbors on the interface
                            
                            .. attribute:: interface_neighbor_cost
                            
                            	Cost of link to neighbor
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_neighbor_id
                            
                            	Neighbor router ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: is_hello_suppressed
                            
                            	If true, hello is suppressed 
                            	**type**\:  bool
                            
                            .. attribute:: is_neighbor_bdr
                            
                            	If true, backup designated router is found 
                            	**type**\:  bool
                            
                            .. attribute:: is_neighbor_dr
                            
                            	If true, designated router is found 
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_neighbor_cost = None
                                self.interface_neighbor_id = None
                                self.is_hello_suppressed = None
                                self.is_neighbor_bdr = None
                                self.is_neighbor_dr = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-neighbor'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_neighbor_cost is not None:
                                    return True

                                if self.interface_neighbor_id is not None:
                                    return True

                                if self.is_hello_suppressed is not None:
                                    return True

                                if self.is_neighbor_bdr is not None:
                                    return True

                                if self.is_neighbor_dr is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface.InterfaceNeighbor']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.active_interface is not None and self.active_interface._has_data():
                                return True

                            if self.adjacent_neighbor is not None:
                                return True

                            if self.backup_designated_router_address is not None:
                                return True

                            if self.backup_designated_router_id is not None:
                                return True

                            if self.configured_ldp_sync is not None:
                                return True

                            if self.dead_interval is not None:
                                return True

                            if self.designated_router_address is not None:
                                return True

                            if self.designated_router_id is not None:
                                return True

                            if self.hello_interval is not None:
                                return True

                            if self.interface_address is not None:
                                return True

                            if self.interface_authentication_spi is not None:
                                return True

                            if self.interface_authentication_transmit is not None:
                                return True

                            if self.interface_bfd is not None and self.interface_bfd._has_data():
                                return True

                            if self.interface_dc_bitless_ls_as is not None:
                                return True

                            if self.interface_encrypted_authentication_transmitted is not None:
                                return True

                            if self.interface_encryption_spi is not None:
                                return True

                            if self.interface_encryption_transmitted is not None:
                                return True

                            if self.interface_ldp_sync is not None:
                                return True

                            if self.interface_link_cost is not None:
                                return True

                            if self.interface_neighbor is not None:
                                for child_ref in self.interface_neighbor:
                                    if child_ref._has_data():
                                        return True

                            if self.interface_number is not None:
                                return True

                            if self.interface_priority is not None:
                                return True

                            if self.interface_references is not None:
                                return True

                            if self.interface_retransmission_interval is not None:
                                return True

                            if self.interface_router_id is not None:
                                return True

                            if self.interface_state is not None:
                                return True

                            if self.is_demand_circuit_configured is not None:
                                return True

                            if self.is_designated_router is not None:
                                return True

                            if self.is_interface_demand_circuit is not None:
                                return True

                            if self.is_interface_encryption_enabled is not None:
                                return True

                            if self.is_interface_flood_reduction is not None:
                                return True

                            if self.is_interface_ip_security_active is not None:
                                return True

                            if self.is_interface_ip_security_required is not None:
                                return True

                            if self.is_interface_line_up is not None:
                                return True

                            if self.is_interface_lsa_filtered is not None:
                                return True

                            if self.network_lsa_flush_timer is not None:
                                return True

                            if self.network_type is not None:
                                return True

                            if self.next_hello_time is not None:
                                return True

                            if self.ospf_interface_state is not None:
                                return True

                            if self.transmission_delay is not None:
                                return True

                            if self.wait_interval is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-process-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InterfaceProcessTable']['meta_info']


                class Redistributions(object):
                    """
                    Redistribution information table
                    
                    .. attribute:: redistribution
                    
                    	Redistribution information
                    	**type**\: list of  :py:class:`Redistribution <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Redistributions.Redistribution>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.redistribution = YList()
                        self.redistribution.parent = self
                        self.redistribution.name = 'redistribution'


                    class Redistribution(object):
                        """
                        Redistribution information
                        
                        .. attribute:: policy_name
                        
                        	Route policy name 
                        	**type**\:  str
                        
                        .. attribute:: process_id
                        
                        	Process ID 
                        	**type**\:  str
                        
                        	**range:** 0..40
                        
                        .. attribute:: process_name
                        
                        	Process name of a protocolbeing redistributed 
                        	**type**\:  str
                        
                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                        
                        .. attribute:: protocol_name
                        
                        	Protocol name that is redistributed
                        	**type**\:  str
                        
                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                        
                        .. attribute:: protocol_name_xr
                        
                        	Protocol name 
                        	**type**\:  str
                        
                        	**range:** 0..40
                        
                        .. attribute:: red_metric
                        
                        	red metric
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: red_metric_flag
                        
                        	red metric flag
                        	**type**\:  bool
                        
                        .. attribute:: red_metric_type
                        
                        	red metric type
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: red_mtype_flag
                        
                        	red mtype flag
                        	**type**\:  bool
                        
                        .. attribute:: red_tag
                        
                        	red tag
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.policy_name = None
                            self.process_id = None
                            self.process_name = None
                            self.protocol_name = None
                            self.protocol_name_xr = None
                            self.red_metric = None
                            self.red_metric_flag = None
                            self.red_metric_type = None
                            self.red_mtype_flag = None
                            self.red_tag = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:redistribution'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.policy_name is not None:
                                return True

                            if self.process_id is not None:
                                return True

                            if self.process_name is not None:
                                return True

                            if self.protocol_name is not None:
                                return True

                            if self.protocol_name_xr is not None:
                                return True

                            if self.red_metric is not None:
                                return True

                            if self.red_metric_flag is not None:
                                return True

                            if self.red_metric_type is not None:
                                return True

                            if self.red_mtype_flag is not None:
                                return True

                            if self.red_tag is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Redistributions.Redistribution']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:redistributions'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.redistribution is not None:
                            for child_ref in self.redistribution:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Redistributions']['meta_info']


                class ExternalRoutes(object):
                    """
                    OSPFv3 external route information table
                    
                    .. attribute:: external_route
                    
                    	OSPFv3 external route information
                    	**type**\: list of  :py:class:`ExternalRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.external_route = YList()
                        self.external_route.parent = self
                        self.external_route.name = 'external_route'


                    class ExternalRoute(object):
                        """
                        OSPFv3 external route information
                        
                        .. attribute:: prefix
                        
                        	Route prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..128
                        
                        .. attribute:: route_extended_community
                        
                        	Extended communities in the route
                        	**type**\:  :py:class:`RouteExtendedCommunity <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RouteExtendedCommunity>`
                        
                        .. attribute:: route_path
                        
                        	List of paths to this route
                        	**type**\: list of  :py:class:`RoutePath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RoutePath>`
                        
                        .. attribute:: route_topology
                        
                        	Common Route topology information
                        	**type**\:  :py:class:`RouteTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RouteTopology>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.prefix_length = None
                            self.route_extended_community = Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RouteExtendedCommunity()
                            self.route_extended_community.parent = self
                            self.route_path = YList()
                            self.route_path.parent = self
                            self.route_path.name = 'route_path'
                            self.route_topology = Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RouteTopology()
                            self.route_topology.parent = self


                        class RouteTopology(object):
                            """
                            Common Route topology information
                            
                            .. attribute:: route_cost
                            
                            	Route cost 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_distance
                            
                            	Route distance 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_id
                            
                            	Route ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: route_type
                            
                            	Route type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.route_cost = None
                                self.route_distance = None
                                self.route_id = None
                                self.route_type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-topology'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.route_cost is not None:
                                    return True

                                if self.route_distance is not None:
                                    return True

                                if self.route_id is not None:
                                    return True

                                if self.route_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RouteTopology']['meta_info']


                        class RouteExtendedCommunity(object):
                            """
                            Extended communities in the route
                            
                            .. attribute:: extended_community_area_id
                            
                            	Area id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: extended_community_domain_id_value
                            
                            	Domain ID value
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: extended_community_options
                            
                            	Route Options
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: extended_community_route_type
                            
                            	Route type
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: extended_community_router_id
                            
                            	Router id
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: extended_communityl_domain_id_type
                            
                            	Domain ID type
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.extended_community_area_id = None
                                self.extended_community_domain_id_value = None
                                self.extended_community_options = None
                                self.extended_community_route_type = None
                                self.extended_community_router_id = None
                                self.extended_communityl_domain_id_type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-extended-community'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.extended_community_area_id is not None:
                                    return True

                                if self.extended_community_domain_id_value is not None:
                                    return True

                                if self.extended_community_options is not None:
                                    return True

                                if self.extended_community_route_type is not None:
                                    return True

                                if self.extended_community_router_id is not None:
                                    return True

                                if self.extended_communityl_domain_id_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RouteExtendedCommunity']['meta_info']


                        class RoutePath(object):
                            """
                            List of paths to this route
                            
                            .. attribute:: interface_name
                            
                            	Route path interface name 
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: route_backup_path
                            
                            	Backup Path Info
                            	**type**\:  :py:class:`RouteBackupPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RoutePath.RouteBackupPath>`
                            
                            .. attribute:: route_path_id
                            
                            	Path ID of path
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: route_path_next_hop
                            
                            	Route path next hop 
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.route_backup_path = Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RoutePath.RouteBackupPath()
                                self.route_backup_path.parent = self
                                self.route_path_id = None
                                self.route_path_next_hop = None


                            class RouteBackupPath(object):
                                """
                                Backup Path Info
                                
                                .. attribute:: backup_metric
                                
                                	Metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: backup_route_interface_name
                                
                                	Next hop Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: backup_route_next_hop_address
                                
                                	Nexthop IP address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: backup_route_source
                                
                                	IP address of source of route
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: downstream
                                
                                	Downstream
                                	**type**\:  bool
                                
                                .. attribute:: line_card_disjoint
                                
                                	Line Card Disjoint
                                	**type**\:  bool
                                
                                .. attribute:: node_protect
                                
                                	Node Protect
                                	**type**\:  bool
                                
                                .. attribute:: primary_path
                                
                                	Primary Path
                                	**type**\:  bool
                                
                                .. attribute:: srlg_disjoint
                                
                                	SRLG Disjoint
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_metric = None
                                    self.backup_route_interface_name = None
                                    self.backup_route_next_hop_address = None
                                    self.backup_route_source = None
                                    self.downstream = None
                                    self.line_card_disjoint = None
                                    self.node_protect = None
                                    self.primary_path = None
                                    self.srlg_disjoint = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-backup-path'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_metric is not None:
                                        return True

                                    if self.backup_route_interface_name is not None:
                                        return True

                                    if self.backup_route_next_hop_address is not None:
                                        return True

                                    if self.backup_route_source is not None:
                                        return True

                                    if self.downstream is not None:
                                        return True

                                    if self.line_card_disjoint is not None:
                                        return True

                                    if self.node_protect is not None:
                                        return True

                                    if self.primary_path is not None:
                                        return True

                                    if self.srlg_disjoint is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RoutePath.RouteBackupPath']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-path'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.route_backup_path is not None and self.route_backup_path._has_data():
                                    return True

                                if self.route_path_id is not None:
                                    return True

                                if self.route_path_next_hop is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute.RoutePath']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:external-route'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.route_extended_community is not None and self.route_extended_community._has_data():
                                return True

                            if self.route_path is not None:
                                for child_ref in self.route_path:
                                    if child_ref._has_data():
                                        return True

                            if self.route_topology is not None and self.route_topology._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes.ExternalRoute']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:external-routes'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.external_route is not None:
                            for child_ref in self.external_route:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ExternalRoutes']['meta_info']


                class RequestListProcessTable(object):
                    """
                    OSPFv3 request list information for all areas
                    
                    .. attribute:: request
                    
                    	OSPFv3 request list information
                    	**type**\: list of  :py:class:`Request <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RequestListProcessTable.Request>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.request = YList()
                        self.request.parent = self
                        self.request.name = 'request'


                    class Request(object):
                        """
                        OSPFv3 request list information
                        
                        .. attribute:: interface_name
                        
                        	Interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_request_sham_link
                        
                        	If true, sham link is requested 
                        	**type**\:  bool
                        
                        .. attribute:: is_request_virtual_link
                        
                        	If true, virtual link is requested 
                        	**type**\:  bool
                        
                        .. attribute:: neighbor_address
                        
                        	Neighbor address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: request
                        
                        	List of request list entries
                        	**type**\: list of  :py:class:`Request <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RequestListProcessTable.Request.Request>`
                        
                        .. attribute:: request_neighbor_address
                        
                        	Neighbor IP address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: request_sham_link_id
                        
                        	Request sham link ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: request_virtual_link_id
                        
                        	Request virtual link ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_request_sham_link = None
                            self.is_request_virtual_link = None
                            self.neighbor_address = None
                            self.request = YList()
                            self.request.parent = self
                            self.request.name = 'request'
                            self.request_neighbor_address = None
                            self.request_sham_link_id = None
                            self.request_virtual_link_id = None


                        class Request(object):
                            """
                            List of request list entries
                            
                            .. attribute:: header_advertising_router
                            
                            	Router ID of the advertising router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_age
                            
                            	Age of the LSA (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: header_lsa_id
                            
                            	LSA ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                            
                            .. attribute:: header_sequence_number
                            
                            	Current LSA sequence number
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header_advertising_router = None
                                self.header_lsa_age = None
                                self.header_lsa_id = None
                                self.header_lsa_type = None
                                self.header_sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header_advertising_router is not None:
                                    return True

                                if self.header_lsa_age is not None:
                                    return True

                                if self.header_lsa_id is not None:
                                    return True

                                if self.header_lsa_type is not None:
                                    return True

                                if self.header_sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RequestListProcessTable.Request.Request']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.is_request_sham_link is not None:
                                return True

                            if self.is_request_virtual_link is not None:
                                return True

                            if self.neighbor_address is not None:
                                return True

                            if self.request is not None:
                                for child_ref in self.request:
                                    if child_ref._has_data():
                                        return True

                            if self.request_neighbor_address is not None:
                                return True

                            if self.request_sham_link_id is not None:
                                return True

                            if self.request_virtual_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RequestListProcessTable.Request']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request-list-process-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.request is not None:
                            for child_ref in self.request:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RequestListProcessTable']['meta_info']


                class VirtualLink(object):
                    """
                    Virtual link information
                    
                    .. attribute:: interface_name
                    
                    	Interface on which this virtual link is formed
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_virtual_link_authentication_enabled
                    
                    	If true, virtual link authentication is enabled 
                    	**type**\:  bool
                    
                    .. attribute:: is_virtual_link_demand_circuit
                    
                    	If true, the link runs as demand circuit
                    	**type**\:  bool
                    
                    .. attribute:: is_virtual_link_encryption_enabled
                    
                    	If true, virtual link encryption is enabled 
                    	**type**\:  bool
                    
                    .. attribute:: is_virtual_link_ip_security_active
                    
                    	If true, Virtual link IP security is active 
                    	**type**\:  bool
                    
                    .. attribute:: is_virtual_link_ip_security_required
                    
                    	If true, virtual link IP security is required 
                    	**type**\:  bool
                    
                    .. attribute:: is_virtual_link_passive
                    
                    	If true, interface is passive
                    	**type**\:  bool
                    
                    .. attribute:: transit_area_id
                    
                    	Transit area id 
                    	**type**\:  str
                    
                    .. attribute:: virtual_link_authentication_spi
                    
                    	Virtual link authentication spi 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_authentication_transmit
                    
                    	Virtual link authentication transmit 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_cost
                    
                    	Cost of the virtual link
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: virtual_link_dc_bitless_lsa
                    
                    	Number of LSA's with demand circuit bit not set 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_dead_interval
                    
                    	Dead interval (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_encrypted_authentication_transmitted
                    
                    	Virtual link encrypted authentication transmitted 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_encryption_spi
                    
                    	Virtual link encryption spi
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_encryption_transmitted
                    
                    	Virtual link encryption transmitted 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_hello_interval
                    
                    	Hello interval (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_interface_number
                    
                    	Virtual link interface number 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_neighbor
                    
                    	Neighbor information 
                    	**type**\:  :py:class:`VirtualLinkNeighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.VirtualLink.VirtualLinkNeighbor>`
                    
                    .. attribute:: virtual_link_neighbor_address
                    
                    	Virtual link neighbor addresss 
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: virtual_link_neighbor_id
                    
                    	Neighbor on other end of this virtual link
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: virtual_link_next_hello
                    
                    	Time until next hello (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_retransmission_interval
                    
                    	Retransmission interval (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virtual_link_state
                    
                    	OSPF interface state for the virtual link
                    	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                    
                    .. attribute:: virtual_link_wait_interval
                    
                    	Wait interval (s)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: virual_link_transmission_delay
                    
                    	Transmission delay in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.is_virtual_link_authentication_enabled = None
                        self.is_virtual_link_demand_circuit = None
                        self.is_virtual_link_encryption_enabled = None
                        self.is_virtual_link_ip_security_active = None
                        self.is_virtual_link_ip_security_required = None
                        self.is_virtual_link_passive = None
                        self.transit_area_id = None
                        self.virtual_link_authentication_spi = None
                        self.virtual_link_authentication_transmit = None
                        self.virtual_link_cost = None
                        self.virtual_link_dc_bitless_lsa = None
                        self.virtual_link_dead_interval = None
                        self.virtual_link_encrypted_authentication_transmitted = None
                        self.virtual_link_encryption_spi = None
                        self.virtual_link_encryption_transmitted = None
                        self.virtual_link_hello_interval = None
                        self.virtual_link_interface_number = None
                        self.virtual_link_neighbor = Ospfv3.Processes.Process.DefaultVrf.VirtualLink.VirtualLinkNeighbor()
                        self.virtual_link_neighbor.parent = self
                        self.virtual_link_neighbor_address = None
                        self.virtual_link_neighbor_id = None
                        self.virtual_link_next_hello = None
                        self.virtual_link_retransmission_interval = None
                        self.virtual_link_state = None
                        self.virtual_link_wait_interval = None
                        self.virual_link_transmission_delay = None


                    class VirtualLinkNeighbor(object):
                        """
                        Neighbor information 
                        
                        .. attribute:: is_virtual_link_hello_suppressed
                        
                        	If true, hello suppressed 
                        	**type**\:  bool
                        
                        .. attribute:: virtual_link_retransmission
                        
                        	Virtual link retransmission information 
                        	**type**\:  :py:class:`VirtualLinkRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.VirtualLink.VirtualLinkNeighbor.VirtualLinkRetransmission>`
                        
                        .. attribute:: virtual_link_state
                        
                        	OSPF interface state for the virtual link
                        	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.is_virtual_link_hello_suppressed = None
                            self.virtual_link_retransmission = Ospfv3.Processes.Process.DefaultVrf.VirtualLink.VirtualLinkNeighbor.VirtualLinkRetransmission()
                            self.virtual_link_retransmission.parent = self
                            self.virtual_link_state = None


                        class VirtualLinkRetransmission(object):
                            """
                            Virtual link retransmission information 
                            
                            .. attribute:: area_first_flood
                            
                            	First flood item for area scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_first_flood_index
                            
                            	Index of the first flood item for area scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_flood_index
                            
                            	Area scope LSA's flood index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_next_flood
                            
                            	Next flood item for area scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: area_next_flood_index
                            
                            	Index of next flood item for Area scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_first_flood
                            
                            	First flood item for AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_first_flood_index
                            
                            	Index for first flood item for AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_flood_index
                            
                            	AS scope LSA's flood index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_next_flood
                            
                            	Next flood item for AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: as_next_flood_index
                            
                            	Index of next flood item for AS scope LSAs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: database_descriptor_retransmissions
                            
                            	Number of database descriptor retransmissions during last exchange
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_retransmission_length
                            
                            	Number of LSAs sent in last retransmission
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_retransmission_time
                            
                            	Last retransmission scan time (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_first_flood
                            
                            	Link first flood information 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_first_flood_index
                            
                            	Link first flood information index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_flood_index
                            
                            	Link flood index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_next_flood
                            
                            	Link next flood information 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: link_next_flood_index
                            
                            	Link next flood information index 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_retransmission_timer
                            
                            	Time until next LSA retransmission (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_retransmission_length
                            
                            	Maximum number of LSAs sent in a retransmission
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_retransmission_time
                            
                            	Maximum retransmission scan time (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_retransmissions
                            
                            	Number of neighbor retransmissions 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: retransmissions
                            
                            	Number of retransmissions for this neighbor
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_first_flood = None
                                self.area_first_flood_index = None
                                self.area_flood_index = None
                                self.area_next_flood = None
                                self.area_next_flood_index = None
                                self.as_first_flood = None
                                self.as_first_flood_index = None
                                self.as_flood_index = None
                                self.as_next_flood = None
                                self.as_next_flood_index = None
                                self.database_descriptor_retransmissions = None
                                self.last_retransmission_length = None
                                self.last_retransmission_time = None
                                self.link_first_flood = None
                                self.link_first_flood_index = None
                                self.link_flood_index = None
                                self.link_next_flood = None
                                self.link_next_flood_index = None
                                self.lsa_retransmission_timer = None
                                self.maximum_retransmission_length = None
                                self.maximum_retransmission_time = None
                                self.neighbor_retransmissions = None
                                self.retransmissions = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:virtual-link-retransmission'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_first_flood is not None:
                                    return True

                                if self.area_first_flood_index is not None:
                                    return True

                                if self.area_flood_index is not None:
                                    return True

                                if self.area_next_flood is not None:
                                    return True

                                if self.area_next_flood_index is not None:
                                    return True

                                if self.as_first_flood is not None:
                                    return True

                                if self.as_first_flood_index is not None:
                                    return True

                                if self.as_flood_index is not None:
                                    return True

                                if self.as_next_flood is not None:
                                    return True

                                if self.as_next_flood_index is not None:
                                    return True

                                if self.database_descriptor_retransmissions is not None:
                                    return True

                                if self.last_retransmission_length is not None:
                                    return True

                                if self.last_retransmission_time is not None:
                                    return True

                                if self.link_first_flood is not None:
                                    return True

                                if self.link_first_flood_index is not None:
                                    return True

                                if self.link_flood_index is not None:
                                    return True

                                if self.link_next_flood is not None:
                                    return True

                                if self.link_next_flood_index is not None:
                                    return True

                                if self.lsa_retransmission_timer is not None:
                                    return True

                                if self.maximum_retransmission_length is not None:
                                    return True

                                if self.maximum_retransmission_time is not None:
                                    return True

                                if self.neighbor_retransmissions is not None:
                                    return True

                                if self.retransmissions is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.VirtualLink.VirtualLinkNeighbor.VirtualLinkRetransmission']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:virtual-link-neighbor'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.is_virtual_link_hello_suppressed is not None:
                                return True

                            if self.virtual_link_retransmission is not None and self.virtual_link_retransmission._has_data():
                                return True

                            if self.virtual_link_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.VirtualLink.VirtualLinkNeighbor']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:virtual-link'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface_name is not None:
                            return True

                        if self.is_virtual_link_authentication_enabled is not None:
                            return True

                        if self.is_virtual_link_demand_circuit is not None:
                            return True

                        if self.is_virtual_link_encryption_enabled is not None:
                            return True

                        if self.is_virtual_link_ip_security_active is not None:
                            return True

                        if self.is_virtual_link_ip_security_required is not None:
                            return True

                        if self.is_virtual_link_passive is not None:
                            return True

                        if self.transit_area_id is not None:
                            return True

                        if self.virtual_link_authentication_spi is not None:
                            return True

                        if self.virtual_link_authentication_transmit is not None:
                            return True

                        if self.virtual_link_cost is not None:
                            return True

                        if self.virtual_link_dc_bitless_lsa is not None:
                            return True

                        if self.virtual_link_dead_interval is not None:
                            return True

                        if self.virtual_link_encrypted_authentication_transmitted is not None:
                            return True

                        if self.virtual_link_encryption_spi is not None:
                            return True

                        if self.virtual_link_encryption_transmitted is not None:
                            return True

                        if self.virtual_link_hello_interval is not None:
                            return True

                        if self.virtual_link_interface_number is not None:
                            return True

                        if self.virtual_link_neighbor is not None and self.virtual_link_neighbor._has_data():
                            return True

                        if self.virtual_link_neighbor_address is not None:
                            return True

                        if self.virtual_link_neighbor_id is not None:
                            return True

                        if self.virtual_link_next_hello is not None:
                            return True

                        if self.virtual_link_retransmission_interval is not None:
                            return True

                        if self.virtual_link_state is not None:
                            return True

                        if self.virtual_link_wait_interval is not None:
                            return True

                        if self.virual_link_transmission_delay is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.VirtualLink']['meta_info']


                class FloodListProcessTable(object):
                    """
                    OSPFv3 flood list information table for all
                    areas
                    
                    .. attribute:: flood
                    
                    	OSPFv3 flood list information
                    	**type**\: list of  :py:class:`Flood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable.Flood>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.flood = YList()
                        self.flood.parent = self
                        self.flood.name = 'flood'


                    class Flood(object):
                        """
                        OSPFv3 flood list information
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: area_flood
                        
                        	Area scope floodlist
                        	**type**\: list of  :py:class:`AreaFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable.Flood.AreaFlood>`
                        
                        .. attribute:: as_flood
                        
                        	AS scope floodlist
                        	**type**\: list of  :py:class:`AsFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable.Flood.AsFlood>`
                        
                        .. attribute:: link_flood
                        
                        	Link floodlist
                        	**type**\: list of  :py:class:`LinkFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable.Flood.LinkFlood>`
                        
                        .. attribute:: ls_transmission_timer
                        
                        	Time until next LS transmission (ms) 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: queue_length
                        
                        	Number of LSAs currently being flooded 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.area_flood = YList()
                            self.area_flood.parent = self
                            self.area_flood.name = 'area_flood'
                            self.as_flood = YList()
                            self.as_flood.parent = self
                            self.as_flood.name = 'as_flood'
                            self.link_flood = YList()
                            self.link_flood.parent = self
                            self.link_flood.name = 'link_flood'
                            self.ls_transmission_timer = None
                            self.queue_length = None


                        class LinkFlood(object):
                            """
                            Link floodlist
                            
                            .. attribute:: header_advertising_router
                            
                            	Router ID of the advertising router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_age
                            
                            	Age of the LSA (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: header_lsa_id
                            
                            	LSA ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                            
                            .. attribute:: header_sequence_number
                            
                            	Current LSA sequence number
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header_advertising_router = None
                                self.header_lsa_age = None
                                self.header_lsa_id = None
                                self.header_lsa_type = None
                                self.header_sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:link-flood'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header_advertising_router is not None:
                                    return True

                                if self.header_lsa_age is not None:
                                    return True

                                if self.header_lsa_id is not None:
                                    return True

                                if self.header_lsa_type is not None:
                                    return True

                                if self.header_sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable.Flood.LinkFlood']['meta_info']


                        class AreaFlood(object):
                            """
                            Area scope floodlist
                            
                            .. attribute:: header_advertising_router
                            
                            	Router ID of the advertising router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_age
                            
                            	Age of the LSA (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: header_lsa_id
                            
                            	LSA ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                            
                            .. attribute:: header_sequence_number
                            
                            	Current LSA sequence number
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header_advertising_router = None
                                self.header_lsa_age = None
                                self.header_lsa_id = None
                                self.header_lsa_type = None
                                self.header_sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-flood'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header_advertising_router is not None:
                                    return True

                                if self.header_lsa_age is not None:
                                    return True

                                if self.header_lsa_id is not None:
                                    return True

                                if self.header_lsa_type is not None:
                                    return True

                                if self.header_sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable.Flood.AreaFlood']['meta_info']


                        class AsFlood(object):
                            """
                            AS scope floodlist
                            
                            .. attribute:: header_advertising_router
                            
                            	Router ID of the advertising router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_age
                            
                            	Age of the LSA (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: header_lsa_id
                            
                            	LSA ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                            
                            .. attribute:: header_sequence_number
                            
                            	Current LSA sequence number
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header_advertising_router = None
                                self.header_lsa_age = None
                                self.header_lsa_id = None
                                self.header_lsa_type = None
                                self.header_sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:as-flood'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header_advertising_router is not None:
                                    return True

                                if self.header_lsa_age is not None:
                                    return True

                                if self.header_lsa_id is not None:
                                    return True

                                if self.header_lsa_type is not None:
                                    return True

                                if self.header_sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable.Flood.AsFlood']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:flood[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.area_flood is not None:
                                for child_ref in self.area_flood:
                                    if child_ref._has_data():
                                        return True

                            if self.as_flood is not None:
                                for child_ref in self.as_flood:
                                    if child_ref._has_data():
                                        return True

                            if self.link_flood is not None:
                                for child_ref in self.link_flood:
                                    if child_ref._has_data():
                                        return True

                            if self.ls_transmission_timer is not None:
                                return True

                            if self.queue_length is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable.Flood']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:flood-list-process-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.flood is not None:
                            for child_ref in self.flood:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.FloodListProcessTable']['meta_info']


                class RouteSummary(object):
                    """
                    Summarize OSPFv3 local RIB tables
                    
                    .. attribute:: extern_one_route
                    
                    	Extern 1 route summary 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: extern_two_route
                    
                    	Extern 2 route summary 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: inter_area_route
                    
                    	Inter route summary 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: intra_area_route
                    
                    	Intra route summary 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: nssa_one_route
                    
                    	NSSA 1 route summary 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: nssa_two_route
                    
                    	NSSA 2 route summary 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: redistribution_route
                    
                    	Redistribution route summary 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: route_connected
                    
                    	Route connected 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: route_id
                    
                    	Route summary of a route ID 
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: total_received_route
                    
                    	Total route received summary
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_sent_route
                    
                    	Total route summary 
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.extern_one_route = None
                        self.extern_two_route = None
                        self.inter_area_route = None
                        self.intra_area_route = None
                        self.nssa_one_route = None
                        self.nssa_two_route = None
                        self.redistribution_route = None
                        self.route_connected = None
                        self.route_id = None
                        self.total_received_route = None
                        self.total_sent_route = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.extern_one_route is not None:
                            return True

                        if self.extern_two_route is not None:
                            return True

                        if self.inter_area_route is not None:
                            return True

                        if self.intra_area_route is not None:
                            return True

                        if self.nssa_one_route is not None:
                            return True

                        if self.nssa_two_route is not None:
                            return True

                        if self.redistribution_route is not None:
                            return True

                        if self.route_connected is not None:
                            return True

                        if self.route_id is not None:
                            return True

                        if self.total_received_route is not None:
                            return True

                        if self.total_sent_route is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RouteSummary']['meta_info']


                class Areas(object):
                    """
                    OSPFv3 area table
                    
                    .. attribute:: area
                    
                    	Per\-area information
                    	**type**\: list of  :py:class:`Area <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.area = YList()
                        self.area.parent = self
                        self.area.name = 'area'


                    class Area(object):
                        """
                        Per\-area information
                        
                        .. attribute:: area_id  <key>
                        
                        	Area ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: flood_list_table
                        
                        	OSPFv3 flood list information table for an area
                        	**type**\:  :py:class:`FloodListTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable>`
                        
                        .. attribute:: interface_brief_table
                        
                        	OSPFv3 interface brief information table for an area
                        	**type**\:  :py:class:`InterfaceBriefTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceBriefTable>`
                        
                        .. attribute:: interface_table
                        
                        	OSPFv3 interface information table for an area
                        	**type**\:  :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable>`
                        
                        .. attribute:: neighbor_detail_table
                        
                        	OSPFv3 area neighbor information table
                        	**type**\:  :py:class:`NeighborDetailTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable>`
                        
                        .. attribute:: neighbor_table
                        
                        	OSPFv3 neighbor information table
                        	**type**\:  :py:class:`NeighborTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable>`
                        
                        .. attribute:: request_list_table
                        
                        	OSPFv3 request list information in an area
                        	**type**\:  :py:class:`RequestListTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RequestListTable>`
                        
                        .. attribute:: retransmission_list_table
                        
                        	OSPFv3 retransmission list information table in an area
                        	**type**\:  :py:class:`RetransmissionListTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area_id = None
                            self.flood_list_table = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable()
                            self.flood_list_table.parent = self
                            self.interface_brief_table = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceBriefTable()
                            self.interface_brief_table.parent = self
                            self.interface_table = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable()
                            self.interface_table.parent = self
                            self.neighbor_detail_table = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable()
                            self.neighbor_detail_table.parent = self
                            self.neighbor_table = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable()
                            self.neighbor_table.parent = self
                            self.request_list_table = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RequestListTable()
                            self.request_list_table.parent = self
                            self.retransmission_list_table = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable()
                            self.retransmission_list_table.parent = self


                        class NeighborDetailTable(object):
                            """
                            OSPFv3 area neighbor information table
                            
                            .. attribute:: neighbor_detail
                            
                            	OSPFv3 neighbor detail information
                            	**type**\: list of  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.neighbor_detail = YList()
                                self.neighbor_detail.parent = self
                                self.neighbor_detail.name = 'neighbor_detail'


                            class NeighborDetail(object):
                                """
                                OSPFv3 neighbor detail information
                                
                                .. attribute:: interface_name
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_neighbor_sham_link
                                
                                	If true, neighbor is on a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_neighbor_virtual_link
                                
                                	If true, neighbor is on a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: neighbor_address
                                
                                	Neighbor ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: neighbor_address_xr
                                
                                	Neighbor IP Address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: neighbor_bfd_info
                                
                                	Neighbor BFD information
                                	**type**\:  :py:class:`NeighborBfdInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborBfdInfo>`
                                
                                .. attribute:: neighbor_dead_timer
                                
                                	Time until neighbor's dead timer expires (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_designated_router
                                
                                	Designated router 
                                	**type**\:  str
                                
                                	**range:** 0..9
                                
                                .. attribute:: neighbor_detail
                                
                                	Detailed OSPFv3 neighbor information 
                                	**type**\:  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail>`
                                
                                .. attribute:: neighbor_dr_priority
                                
                                	Neighbor's DR priority
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: neighbor_interface_id
                                
                                	Neighbor interface ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_sham_link_id
                                
                                	Neighbor sham link id 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_state
                                
                                	Neighbor's state
                                	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                                
                                .. attribute:: neighbor_up_time
                                
                                	Amount of time since the adjacency is up (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_virtual_link_id
                                
                                	Neighbor virtual link id 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.is_neighbor_sham_link = None
                                    self.is_neighbor_virtual_link = None
                                    self.neighbor_address = None
                                    self.neighbor_address_xr = None
                                    self.neighbor_bfd_info = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborBfdInfo()
                                    self.neighbor_bfd_info.parent = self
                                    self.neighbor_dead_timer = None
                                    self.neighbor_designated_router = None
                                    self.neighbor_detail = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail()
                                    self.neighbor_detail.parent = self
                                    self.neighbor_dr_priority = None
                                    self.neighbor_interface_id = None
                                    self.neighbor_sham_link_id = None
                                    self.neighbor_state = None
                                    self.neighbor_up_time = None
                                    self.neighbor_virtual_link_id = None


                                class NeighborDetail(object):
                                    """
                                    Detailed OSPFv3 neighbor information 
                                    
                                    .. attribute:: interface_type
                                    
                                    	Interface type
                                    	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                    
                                    .. attribute:: is_neighbor_filtered
                                    
                                    	If true, filter outgoing LSAs 
                                    	**type**\:  bool
                                    
                                    .. attribute:: neighbor_backup_designated_router_address
                                    
                                    	Address of backup designated router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: neighbor_cost
                                    
                                    	Cost of path to this neighbor 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: neighbor_designated_router_address
                                    
                                    	Address of designated router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: neighbor_ignore_timer
                                    
                                    	Remaining time when ignore timer is running 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_option
                                    
                                    	 This is bitmask of neighbor's option field received 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_retransmission
                                    
                                    	Retransmission information with this neighbor
                                    	**type**\:  :py:class:`NeighborRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail.NeighborRetransmission>`
                                    
                                    .. attribute:: next_poll_interval
                                    
                                    	For NBMA networks, amount of time remaining in seconds before the next poll interval expires and Hello is sent (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: pending_events
                                    
                                    	Number of pending events 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: poll_interval
                                    
                                    	Poll interval (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_changes
                                    
                                    	Number of state changes 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_type = None
                                        self.is_neighbor_filtered = None
                                        self.neighbor_backup_designated_router_address = None
                                        self.neighbor_cost = None
                                        self.neighbor_designated_router_address = None
                                        self.neighbor_ignore_timer = None
                                        self.neighbor_option = None
                                        self.neighbor_retransmission = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail.NeighborRetransmission()
                                        self.neighbor_retransmission.parent = self
                                        self.next_poll_interval = None
                                        self.pending_events = None
                                        self.poll_interval = None
                                        self.state_changes = None


                                    class NeighborRetransmission(object):
                                        """
                                        Retransmission information with this neighbor
                                        
                                        .. attribute:: area_first_flood
                                        
                                        	First flood item for area scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: area_first_flood_index
                                        
                                        	Index of the first flood item for area scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: area_flood_index
                                        
                                        	Area scope LSA's flood index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: area_next_flood
                                        
                                        	Next flood item for area scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: area_next_flood_index
                                        
                                        	Index of next flood item for Area scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_first_flood
                                        
                                        	First flood item for AS scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_first_flood_index
                                        
                                        	Index for first flood item for AS scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_flood_index
                                        
                                        	AS scope LSA's flood index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_next_flood
                                        
                                        	Next flood item for AS scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_next_flood_index
                                        
                                        	Index of next flood item for AS scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: database_descriptor_retransmissions
                                        
                                        	Number of database descriptor retransmissions during last exchange
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: last_retransmission_length
                                        
                                        	Number of LSAs sent in last retransmission
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: last_retransmission_time
                                        
                                        	Last retransmission scan time (ms)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_first_flood
                                        
                                        	Link first flood information 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_first_flood_index
                                        
                                        	Link first flood information index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_flood_index
                                        
                                        	Link flood index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_next_flood
                                        
                                        	Link next flood information 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_next_flood_index
                                        
                                        	Link next flood information index 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_retransmission_timer
                                        
                                        	Time until next LSA retransmission (ms)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: maximum_retransmission_length
                                        
                                        	Maximum number of LSAs sent in a retransmission
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: maximum_retransmission_time
                                        
                                        	Maximum retransmission scan time (ms)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: neighbor_retransmissions
                                        
                                        	Number of neighbor retransmissions 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: retransmissions
                                        
                                        	Number of retransmissions for this neighbor
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.area_first_flood = None
                                            self.area_first_flood_index = None
                                            self.area_flood_index = None
                                            self.area_next_flood = None
                                            self.area_next_flood_index = None
                                            self.as_first_flood = None
                                            self.as_first_flood_index = None
                                            self.as_flood_index = None
                                            self.as_next_flood = None
                                            self.as_next_flood_index = None
                                            self.database_descriptor_retransmissions = None
                                            self.last_retransmission_length = None
                                            self.last_retransmission_time = None
                                            self.link_first_flood = None
                                            self.link_first_flood_index = None
                                            self.link_flood_index = None
                                            self.link_next_flood = None
                                            self.link_next_flood_index = None
                                            self.lsa_retransmission_timer = None
                                            self.maximum_retransmission_length = None
                                            self.maximum_retransmission_time = None
                                            self.neighbor_retransmissions = None
                                            self.retransmissions = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-retransmission'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.area_first_flood is not None:
                                                return True

                                            if self.area_first_flood_index is not None:
                                                return True

                                            if self.area_flood_index is not None:
                                                return True

                                            if self.area_next_flood is not None:
                                                return True

                                            if self.area_next_flood_index is not None:
                                                return True

                                            if self.as_first_flood is not None:
                                                return True

                                            if self.as_first_flood_index is not None:
                                                return True

                                            if self.as_flood_index is not None:
                                                return True

                                            if self.as_next_flood is not None:
                                                return True

                                            if self.as_next_flood_index is not None:
                                                return True

                                            if self.database_descriptor_retransmissions is not None:
                                                return True

                                            if self.last_retransmission_length is not None:
                                                return True

                                            if self.last_retransmission_time is not None:
                                                return True

                                            if self.link_first_flood is not None:
                                                return True

                                            if self.link_first_flood_index is not None:
                                                return True

                                            if self.link_flood_index is not None:
                                                return True

                                            if self.link_next_flood is not None:
                                                return True

                                            if self.link_next_flood_index is not None:
                                                return True

                                            if self.lsa_retransmission_timer is not None:
                                                return True

                                            if self.maximum_retransmission_length is not None:
                                                return True

                                            if self.maximum_retransmission_time is not None:
                                                return True

                                            if self.neighbor_retransmissions is not None:
                                                return True

                                            if self.retransmissions is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail.NeighborRetransmission']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_type is not None:
                                            return True

                                        if self.is_neighbor_filtered is not None:
                                            return True

                                        if self.neighbor_backup_designated_router_address is not None:
                                            return True

                                        if self.neighbor_cost is not None:
                                            return True

                                        if self.neighbor_designated_router_address is not None:
                                            return True

                                        if self.neighbor_ignore_timer is not None:
                                            return True

                                        if self.neighbor_option is not None:
                                            return True

                                        if self.neighbor_retransmission is not None and self.neighbor_retransmission._has_data():
                                            return True

                                        if self.next_poll_interval is not None:
                                            return True

                                        if self.pending_events is not None:
                                            return True

                                        if self.poll_interval is not None:
                                            return True

                                        if self.state_changes is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborDetail']['meta_info']


                                class NeighborBfdInfo(object):
                                    """
                                    Neighbor BFD information
                                    
                                    .. attribute:: bfd_intf_enable_mode
                                    
                                    	BFD enable mode \- Default/Strict
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: bfd_status_flag
                                    
                                    	Status of the BFD Session
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.bfd_intf_enable_mode = None
                                        self.bfd_status_flag = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-bfd-info'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.bfd_intf_enable_mode is not None:
                                            return True

                                        if self.bfd_status_flag is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail.NeighborBfdInfo']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.is_neighbor_sham_link is not None:
                                        return True

                                    if self.is_neighbor_virtual_link is not None:
                                        return True

                                    if self.neighbor_address is not None:
                                        return True

                                    if self.neighbor_address_xr is not None:
                                        return True

                                    if self.neighbor_bfd_info is not None and self.neighbor_bfd_info._has_data():
                                        return True

                                    if self.neighbor_dead_timer is not None:
                                        return True

                                    if self.neighbor_designated_router is not None:
                                        return True

                                    if self.neighbor_detail is not None and self.neighbor_detail._has_data():
                                        return True

                                    if self.neighbor_dr_priority is not None:
                                        return True

                                    if self.neighbor_interface_id is not None:
                                        return True

                                    if self.neighbor_sham_link_id is not None:
                                        return True

                                    if self.neighbor_state is not None:
                                        return True

                                    if self.neighbor_up_time is not None:
                                        return True

                                    if self.neighbor_virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable.NeighborDetail']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail-table'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.neighbor_detail is not None:
                                    for child_ref in self.neighbor_detail:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborDetailTable']['meta_info']


                        class InterfaceBriefTable(object):
                            """
                            OSPFv3 interface brief information table for
                            an area
                            
                            .. attribute:: interface_brief
                            
                            	Interface brief information
                            	**type**\: list of  :py:class:`InterfaceBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceBriefTable.InterfaceBrief>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_brief = YList()
                                self.interface_brief.parent = self
                                self.interface_brief.name = 'interface_brief'


                            class InterfaceBrief(object):
                                """
                                Interface brief information
                                
                                .. attribute:: interface_name  <key>
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: interface_address
                                
                                	Interface IP address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_adjacent_neighbors
                                
                                	Total number of adjacent neighbors
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: interface_link_cost
                                
                                	Interface link cost
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: interface_neighbors
                                
                                	Total number of neighbors 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: network_type
                                
                                	Network type
                                	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                
                                .. attribute:: ospf_interface_state
                                
                                	Interface OSPF state
                                	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.interface_address = None
                                    self.interface_adjacent_neighbors = None
                                    self.interface_link_cost = None
                                    self.interface_neighbors = None
                                    self.network_type = None
                                    self.ospf_interface_state = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.interface_name is None:
                                        raise YPYModelError('Key property interface_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-brief[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.interface_address is not None:
                                        return True

                                    if self.interface_adjacent_neighbors is not None:
                                        return True

                                    if self.interface_link_cost is not None:
                                        return True

                                    if self.interface_neighbors is not None:
                                        return True

                                    if self.network_type is not None:
                                        return True

                                    if self.ospf_interface_state is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceBriefTable.InterfaceBrief']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-brief-table'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_brief is not None:
                                    for child_ref in self.interface_brief:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceBriefTable']['meta_info']


                        class RequestListTable(object):
                            """
                            OSPFv3 request list information in an area
                            
                            .. attribute:: request
                            
                            	OSPFv3 request list information
                            	**type**\: list of  :py:class:`Request <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RequestListTable.Request>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.request = YList()
                                self.request.parent = self
                                self.request.name = 'request'


                            class Request(object):
                                """
                                OSPFv3 request list information
                                
                                .. attribute:: interface_name
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_request_sham_link
                                
                                	If true, sham link is requested 
                                	**type**\:  bool
                                
                                .. attribute:: is_request_virtual_link
                                
                                	If true, virtual link is requested 
                                	**type**\:  bool
                                
                                .. attribute:: neighbor_address
                                
                                	Neighbor address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: request
                                
                                	List of request list entries
                                	**type**\: list of  :py:class:`Request <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RequestListTable.Request.Request>`
                                
                                .. attribute:: request_neighbor_address
                                
                                	Neighbor IP address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: request_sham_link_id
                                
                                	Request sham link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: request_virtual_link_id
                                
                                	Request virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.is_request_sham_link = None
                                    self.is_request_virtual_link = None
                                    self.neighbor_address = None
                                    self.request = YList()
                                    self.request.parent = self
                                    self.request.name = 'request'
                                    self.request_neighbor_address = None
                                    self.request_sham_link_id = None
                                    self.request_virtual_link_id = None


                                class Request(object):
                                    """
                                    List of request list entries
                                    
                                    .. attribute:: header_advertising_router
                                    
                                    	Router ID of the advertising router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_age
                                    
                                    	Age of the LSA (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: header_lsa_id
                                    
                                    	LSA ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    .. attribute:: header_sequence_number
                                    
                                    	Current LSA sequence number
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header_advertising_router = None
                                        self.header_lsa_age = None
                                        self.header_lsa_id = None
                                        self.header_lsa_type = None
                                        self.header_sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header_advertising_router is not None:
                                            return True

                                        if self.header_lsa_age is not None:
                                            return True

                                        if self.header_lsa_id is not None:
                                            return True

                                        if self.header_lsa_type is not None:
                                            return True

                                        if self.header_sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RequestListTable.Request.Request']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.is_request_sham_link is not None:
                                        return True

                                    if self.is_request_virtual_link is not None:
                                        return True

                                    if self.neighbor_address is not None:
                                        return True

                                    if self.request is not None:
                                        for child_ref in self.request:
                                            if child_ref._has_data():
                                                return True

                                    if self.request_neighbor_address is not None:
                                        return True

                                    if self.request_sham_link_id is not None:
                                        return True

                                    if self.request_virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RequestListTable.Request']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:request-list-table'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.request is not None:
                                    for child_ref in self.request:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RequestListTable']['meta_info']


                        class NeighborTable(object):
                            """
                            OSPFv3 neighbor information table
                            
                            .. attribute:: neighbor
                            
                            	OSPFv3 neighbor detail information
                            	**type**\: list of  :py:class:`Neighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.neighbor = YList()
                                self.neighbor.parent = self
                                self.neighbor.name = 'neighbor'


                            class Neighbor(object):
                                """
                                OSPFv3 neighbor detail information
                                
                                .. attribute:: interface_name
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_neighbor_sham_link
                                
                                	If true, neighbor is on a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_neighbor_virtual_link
                                
                                	If true, neighbor is on a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: neighbor_address
                                
                                	Neighbor ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: neighbor_address_xr
                                
                                	Neighbor IP Address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: neighbor_bfd_info
                                
                                	Neighbor BFD information
                                	**type**\:  :py:class:`NeighborBfdInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborBfdInfo>`
                                
                                .. attribute:: neighbor_dead_timer
                                
                                	Time until neighbor's dead timer expires (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_designated_router
                                
                                	Designated router 
                                	**type**\:  str
                                
                                	**range:** 0..9
                                
                                .. attribute:: neighbor_detail
                                
                                	Detailed OSPFv3 neighbor information 
                                	**type**\:  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail>`
                                
                                .. attribute:: neighbor_dr_priority
                                
                                	Neighbor's DR priority
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: neighbor_interface_id
                                
                                	Neighbor interface ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_sham_link_id
                                
                                	Neighbor sham link id 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_state
                                
                                	Neighbor's state
                                	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                                
                                .. attribute:: neighbor_up_time
                                
                                	Amount of time since the adjacency is up (seconds)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_virtual_link_id
                                
                                	Neighbor virtual link id 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.is_neighbor_sham_link = None
                                    self.is_neighbor_virtual_link = None
                                    self.neighbor_address = None
                                    self.neighbor_address_xr = None
                                    self.neighbor_bfd_info = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborBfdInfo()
                                    self.neighbor_bfd_info.parent = self
                                    self.neighbor_dead_timer = None
                                    self.neighbor_designated_router = None
                                    self.neighbor_detail = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail()
                                    self.neighbor_detail.parent = self
                                    self.neighbor_dr_priority = None
                                    self.neighbor_interface_id = None
                                    self.neighbor_sham_link_id = None
                                    self.neighbor_state = None
                                    self.neighbor_up_time = None
                                    self.neighbor_virtual_link_id = None


                                class NeighborDetail(object):
                                    """
                                    Detailed OSPFv3 neighbor information 
                                    
                                    .. attribute:: interface_type
                                    
                                    	Interface type
                                    	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                    
                                    .. attribute:: is_neighbor_filtered
                                    
                                    	If true, filter outgoing LSAs 
                                    	**type**\:  bool
                                    
                                    .. attribute:: neighbor_backup_designated_router_address
                                    
                                    	Address of backup designated router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: neighbor_cost
                                    
                                    	Cost of path to this neighbor 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: neighbor_designated_router_address
                                    
                                    	Address of designated router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: neighbor_ignore_timer
                                    
                                    	Remaining time when ignore timer is running 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_option
                                    
                                    	 This is bitmask of neighbor's option field received 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: neighbor_retransmission
                                    
                                    	Retransmission information with this neighbor
                                    	**type**\:  :py:class:`NeighborRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail.NeighborRetransmission>`
                                    
                                    .. attribute:: next_poll_interval
                                    
                                    	For NBMA networks, amount of time remaining in seconds before the next poll interval expires and Hello is sent (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: pending_events
                                    
                                    	Number of pending events 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: poll_interval
                                    
                                    	Poll interval (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_changes
                                    
                                    	Number of state changes 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_type = None
                                        self.is_neighbor_filtered = None
                                        self.neighbor_backup_designated_router_address = None
                                        self.neighbor_cost = None
                                        self.neighbor_designated_router_address = None
                                        self.neighbor_ignore_timer = None
                                        self.neighbor_option = None
                                        self.neighbor_retransmission = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail.NeighborRetransmission()
                                        self.neighbor_retransmission.parent = self
                                        self.next_poll_interval = None
                                        self.pending_events = None
                                        self.poll_interval = None
                                        self.state_changes = None


                                    class NeighborRetransmission(object):
                                        """
                                        Retransmission information with this neighbor
                                        
                                        .. attribute:: area_first_flood
                                        
                                        	First flood item for area scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: area_first_flood_index
                                        
                                        	Index of the first flood item for area scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: area_flood_index
                                        
                                        	Area scope LSA's flood index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: area_next_flood
                                        
                                        	Next flood item for area scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: area_next_flood_index
                                        
                                        	Index of next flood item for Area scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_first_flood
                                        
                                        	First flood item for AS scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_first_flood_index
                                        
                                        	Index for first flood item for AS scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_flood_index
                                        
                                        	AS scope LSA's flood index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_next_flood
                                        
                                        	Next flood item for AS scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_next_flood_index
                                        
                                        	Index of next flood item for AS scope LSAs
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: database_descriptor_retransmissions
                                        
                                        	Number of database descriptor retransmissions during last exchange
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: last_retransmission_length
                                        
                                        	Number of LSAs sent in last retransmission
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: last_retransmission_time
                                        
                                        	Last retransmission scan time (ms)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_first_flood
                                        
                                        	Link first flood information 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_first_flood_index
                                        
                                        	Link first flood information index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_flood_index
                                        
                                        	Link flood index
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_next_flood
                                        
                                        	Link next flood information 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: link_next_flood_index
                                        
                                        	Link next flood information index 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: lsa_retransmission_timer
                                        
                                        	Time until next LSA retransmission (ms)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: maximum_retransmission_length
                                        
                                        	Maximum number of LSAs sent in a retransmission
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: maximum_retransmission_time
                                        
                                        	Maximum retransmission scan time (ms)
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: neighbor_retransmissions
                                        
                                        	Number of neighbor retransmissions 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: retransmissions
                                        
                                        	Number of retransmissions for this neighbor
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ipv6-ospfv3-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.area_first_flood = None
                                            self.area_first_flood_index = None
                                            self.area_flood_index = None
                                            self.area_next_flood = None
                                            self.area_next_flood_index = None
                                            self.as_first_flood = None
                                            self.as_first_flood_index = None
                                            self.as_flood_index = None
                                            self.as_next_flood = None
                                            self.as_next_flood_index = None
                                            self.database_descriptor_retransmissions = None
                                            self.last_retransmission_length = None
                                            self.last_retransmission_time = None
                                            self.link_first_flood = None
                                            self.link_first_flood_index = None
                                            self.link_flood_index = None
                                            self.link_next_flood = None
                                            self.link_next_flood_index = None
                                            self.lsa_retransmission_timer = None
                                            self.maximum_retransmission_length = None
                                            self.maximum_retransmission_time = None
                                            self.neighbor_retransmissions = None
                                            self.retransmissions = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-retransmission'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.area_first_flood is not None:
                                                return True

                                            if self.area_first_flood_index is not None:
                                                return True

                                            if self.area_flood_index is not None:
                                                return True

                                            if self.area_next_flood is not None:
                                                return True

                                            if self.area_next_flood_index is not None:
                                                return True

                                            if self.as_first_flood is not None:
                                                return True

                                            if self.as_first_flood_index is not None:
                                                return True

                                            if self.as_flood_index is not None:
                                                return True

                                            if self.as_next_flood is not None:
                                                return True

                                            if self.as_next_flood_index is not None:
                                                return True

                                            if self.database_descriptor_retransmissions is not None:
                                                return True

                                            if self.last_retransmission_length is not None:
                                                return True

                                            if self.last_retransmission_time is not None:
                                                return True

                                            if self.link_first_flood is not None:
                                                return True

                                            if self.link_first_flood_index is not None:
                                                return True

                                            if self.link_flood_index is not None:
                                                return True

                                            if self.link_next_flood is not None:
                                                return True

                                            if self.link_next_flood_index is not None:
                                                return True

                                            if self.lsa_retransmission_timer is not None:
                                                return True

                                            if self.maximum_retransmission_length is not None:
                                                return True

                                            if self.maximum_retransmission_time is not None:
                                                return True

                                            if self.neighbor_retransmissions is not None:
                                                return True

                                            if self.retransmissions is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail.NeighborRetransmission']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_type is not None:
                                            return True

                                        if self.is_neighbor_filtered is not None:
                                            return True

                                        if self.neighbor_backup_designated_router_address is not None:
                                            return True

                                        if self.neighbor_cost is not None:
                                            return True

                                        if self.neighbor_designated_router_address is not None:
                                            return True

                                        if self.neighbor_ignore_timer is not None:
                                            return True

                                        if self.neighbor_option is not None:
                                            return True

                                        if self.neighbor_retransmission is not None and self.neighbor_retransmission._has_data():
                                            return True

                                        if self.next_poll_interval is not None:
                                            return True

                                        if self.pending_events is not None:
                                            return True

                                        if self.poll_interval is not None:
                                            return True

                                        if self.state_changes is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborDetail']['meta_info']


                                class NeighborBfdInfo(object):
                                    """
                                    Neighbor BFD information
                                    
                                    .. attribute:: bfd_intf_enable_mode
                                    
                                    	BFD enable mode \- Default/Strict
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: bfd_status_flag
                                    
                                    	Status of the BFD Session
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.bfd_intf_enable_mode = None
                                        self.bfd_status_flag = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-bfd-info'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.bfd_intf_enable_mode is not None:
                                            return True

                                        if self.bfd_status_flag is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor.NeighborBfdInfo']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.is_neighbor_sham_link is not None:
                                        return True

                                    if self.is_neighbor_virtual_link is not None:
                                        return True

                                    if self.neighbor_address is not None:
                                        return True

                                    if self.neighbor_address_xr is not None:
                                        return True

                                    if self.neighbor_bfd_info is not None and self.neighbor_bfd_info._has_data():
                                        return True

                                    if self.neighbor_dead_timer is not None:
                                        return True

                                    if self.neighbor_designated_router is not None:
                                        return True

                                    if self.neighbor_detail is not None and self.neighbor_detail._has_data():
                                        return True

                                    if self.neighbor_dr_priority is not None:
                                        return True

                                    if self.neighbor_interface_id is not None:
                                        return True

                                    if self.neighbor_sham_link_id is not None:
                                        return True

                                    if self.neighbor_state is not None:
                                        return True

                                    if self.neighbor_up_time is not None:
                                        return True

                                    if self.neighbor_virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable.Neighbor']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-table'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.neighbor is not None:
                                    for child_ref in self.neighbor:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.NeighborTable']['meta_info']


                        class InterfaceTable(object):
                            """
                            OSPFv3 interface information table for an area
                            
                            .. attribute:: interface
                            
                            	OSPFv3 interface information
                            	**type**\: list of  :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface = YList()
                                self.interface.parent = self
                                self.interface.name = 'interface'


                            class Interface(object):
                                """
                                OSPFv3 interface information
                                
                                .. attribute:: interface_name  <key>
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: active_interface
                                
                                	Active interface details 
                                	**type**\:  :py:class:`ActiveInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface.ActiveInterface>`
                                
                                .. attribute:: adjacent_neighbor
                                
                                	Number of adjacent neighbors
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: backup_designated_router_address
                                
                                	Backup designated router interface address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: backup_designated_router_id
                                
                                	Backup designated router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: configured_ldp_sync
                                
                                	If true, configured as LDP sync
                                	**type**\:  bool
                                
                                .. attribute:: dead_interval
                                
                                	Configured dead interval (s) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: designated_router_address
                                
                                	Designated router interface address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: designated_router_id
                                
                                	Designated router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: hello_interval
                                
                                	Configured hello interval (s)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_address
                                
                                	Interface IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_authentication_spi
                                
                                	Interface authentication spi 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_authentication_transmit
                                
                                	Interface authentication transmit 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_bfd
                                
                                	BFD information 
                                	**type**\:  :py:class:`InterfaceBfd <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface.InterfaceBfd>`
                                
                                .. attribute:: interface_dc_bitless_ls_as
                                
                                	Number of LSAs with demand circuit bit not set for the area in which the interface is running
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_encrypted_authentication_transmitted
                                
                                	Interface encrypted authentication transmitted 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_encryption_spi
                                
                                	Interface encryption spi
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_encryption_transmitted
                                
                                	Interface encryption transmitted 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_ldp_sync
                                
                                	If true, interface LDP sync is achieved
                                	**type**\:  bool
                                
                                .. attribute:: interface_link_cost
                                
                                	Interface link cost
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: interface_neighbor
                                
                                	Information for neighbors on the interface
                                	**type**\: list of  :py:class:`InterfaceNeighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface.InterfaceNeighbor>`
                                
                                .. attribute:: interface_number
                                
                                	Interface number 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_priority
                                
                                	Interface priority
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: interface_references
                                
                                	Interface reference count 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_retransmission_interval
                                
                                	Configured retransmit interval (s) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: interface_router_id
                                
                                	Interface router ID 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_state
                                
                                	Interface state
                                	**type**\:  :py:class:`ImStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.ImStateEnumEnum>`
                                
                                .. attribute:: is_demand_circuit_configured
                                
                                	If true, configured as demand circuit 
                                	**type**\:  bool
                                
                                .. attribute:: is_designated_router
                                
                                	If true, designated router
                                	**type**\:  bool
                                
                                .. attribute:: is_interface_demand_circuit
                                
                                	If true, interface running as demand circuit
                                	**type**\:  bool
                                
                                .. attribute:: is_interface_encryption_enabled
                                
                                	If true, interface encryption is enabled 
                                	**type**\:  bool
                                
                                .. attribute:: is_interface_flood_reduction
                                
                                	If true, interface flood reduction is active 
                                	**type**\:  bool
                                
                                .. attribute:: is_interface_ip_security_active
                                
                                	If true, interface IP security is active 
                                	**type**\:  bool
                                
                                .. attribute:: is_interface_ip_security_required
                                
                                	If true, interface IP security is required 
                                	**type**\:  bool
                                
                                .. attribute:: is_interface_line_up
                                
                                	If true, line protocol is up 
                                	**type**\:  bool
                                
                                .. attribute:: is_interface_lsa_filtered
                                
                                	Filter is configured for out going LSAs 
                                	**type**\:  bool
                                
                                .. attribute:: network_lsa_flush_timer
                                
                                	The amount of time in seconds before flush timer for old network LSA expires 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: network_type
                                
                                	Network type
                                	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                                
                                .. attribute:: next_hello_time
                                
                                	Time until next Hello (s) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ospf_interface_state
                                
                                	Interface state
                                	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                                
                                .. attribute:: transmission_delay
                                
                                	Interface transmission delay (sec)
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: wait_interval
                                
                                	Configured wait interval (s) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.active_interface = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface.ActiveInterface()
                                    self.active_interface.parent = self
                                    self.adjacent_neighbor = None
                                    self.backup_designated_router_address = None
                                    self.backup_designated_router_id = None
                                    self.configured_ldp_sync = None
                                    self.dead_interval = None
                                    self.designated_router_address = None
                                    self.designated_router_id = None
                                    self.hello_interval = None
                                    self.interface_address = None
                                    self.interface_authentication_spi = None
                                    self.interface_authentication_transmit = None
                                    self.interface_bfd = Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface.InterfaceBfd()
                                    self.interface_bfd.parent = self
                                    self.interface_dc_bitless_ls_as = None
                                    self.interface_encrypted_authentication_transmitted = None
                                    self.interface_encryption_spi = None
                                    self.interface_encryption_transmitted = None
                                    self.interface_ldp_sync = None
                                    self.interface_link_cost = None
                                    self.interface_neighbor = YList()
                                    self.interface_neighbor.parent = self
                                    self.interface_neighbor.name = 'interface_neighbor'
                                    self.interface_number = None
                                    self.interface_priority = None
                                    self.interface_references = None
                                    self.interface_retransmission_interval = None
                                    self.interface_router_id = None
                                    self.interface_state = None
                                    self.is_demand_circuit_configured = None
                                    self.is_designated_router = None
                                    self.is_interface_demand_circuit = None
                                    self.is_interface_encryption_enabled = None
                                    self.is_interface_flood_reduction = None
                                    self.is_interface_ip_security_active = None
                                    self.is_interface_ip_security_required = None
                                    self.is_interface_line_up = None
                                    self.is_interface_lsa_filtered = None
                                    self.network_lsa_flush_timer = None
                                    self.network_type = None
                                    self.next_hello_time = None
                                    self.ospf_interface_state = None
                                    self.transmission_delay = None
                                    self.wait_interval = None


                                class ActiveInterface(object):
                                    """
                                    Active interface details 
                                    
                                    .. attribute:: flood_queue_length
                                    
                                    	Flood queue length
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: flood_scan_length
                                    
                                    	Last flood scan length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_area_flood_index
                                    
                                    	Area scope LSAs flood index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_area_next_flood
                                    
                                    	Next LSA to flood (Area scope)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_area_next_flood_index
                                    
                                    	Index of next LSA to flood (Area scope) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_as_flood_index
                                    
                                    	AS scope LSAs flood index 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_as_next_flood
                                    
                                    	Next LSA to flood (AS scope)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_as_next_flood_index
                                    
                                    	Index of next LSA to flood (AS scope)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_flood_pacing_timer
                                    
                                    	Time until next flood pacing timer (ms) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_link_flood_index
                                    
                                    	Interface flood link index 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_link_next_flood
                                    
                                    	Interface link next flood information 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_link_next_index
                                    
                                    	Interface link next information index 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_neighbors
                                    
                                    	Total number of neighbors 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: last_flood_time
                                    
                                    	Last flood scan time (ms)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: maximum_flood_length
                                    
                                    	Maximum flood length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: maximum_flood_time
                                    
                                    	Maximum flood time (ms) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: suppressed_hellos
                                    
                                    	Number of neighbors for which hellos are suppressed 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: wait_time
                                    
                                    	Wait time for DR/BDR selection (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.flood_queue_length = None
                                        self.flood_scan_length = None
                                        self.interface_area_flood_index = None
                                        self.interface_area_next_flood = None
                                        self.interface_area_next_flood_index = None
                                        self.interface_as_flood_index = None
                                        self.interface_as_next_flood = None
                                        self.interface_as_next_flood_index = None
                                        self.interface_flood_pacing_timer = None
                                        self.interface_link_flood_index = None
                                        self.interface_link_next_flood = None
                                        self.interface_link_next_index = None
                                        self.interface_neighbors = None
                                        self.last_flood_time = None
                                        self.maximum_flood_length = None
                                        self.maximum_flood_time = None
                                        self.suppressed_hellos = None
                                        self.wait_time = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:active-interface'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.flood_queue_length is not None:
                                            return True

                                        if self.flood_scan_length is not None:
                                            return True

                                        if self.interface_area_flood_index is not None:
                                            return True

                                        if self.interface_area_next_flood is not None:
                                            return True

                                        if self.interface_area_next_flood_index is not None:
                                            return True

                                        if self.interface_as_flood_index is not None:
                                            return True

                                        if self.interface_as_next_flood is not None:
                                            return True

                                        if self.interface_as_next_flood_index is not None:
                                            return True

                                        if self.interface_flood_pacing_timer is not None:
                                            return True

                                        if self.interface_link_flood_index is not None:
                                            return True

                                        if self.interface_link_next_flood is not None:
                                            return True

                                        if self.interface_link_next_index is not None:
                                            return True

                                        if self.interface_neighbors is not None:
                                            return True

                                        if self.last_flood_time is not None:
                                            return True

                                        if self.maximum_flood_length is not None:
                                            return True

                                        if self.maximum_flood_time is not None:
                                            return True

                                        if self.suppressed_hellos is not None:
                                            return True

                                        if self.wait_time is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface.ActiveInterface']['meta_info']


                                class InterfaceBfd(object):
                                    """
                                    BFD information 
                                    
                                    .. attribute:: bfd_detection_multiplier
                                    
                                    	BFD detection multiplier 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: bfd_interval
                                    
                                    	BFD interval (ms) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: bfd_intf_enable_mode
                                    
                                    	BFD Enable Mode on the interface \- Default/Strict
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.bfd_detection_multiplier = None
                                        self.bfd_interval = None
                                        self.bfd_intf_enable_mode = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-bfd'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.bfd_detection_multiplier is not None:
                                            return True

                                        if self.bfd_interval is not None:
                                            return True

                                        if self.bfd_intf_enable_mode is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface.InterfaceBfd']['meta_info']


                                class InterfaceNeighbor(object):
                                    """
                                    Information for neighbors on the interface
                                    
                                    .. attribute:: interface_neighbor_cost
                                    
                                    	Cost of link to neighbor
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: interface_neighbor_id
                                    
                                    	Neighbor router ID 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: is_hello_suppressed
                                    
                                    	If true, hello is suppressed 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_bdr
                                    
                                    	If true, backup designated router is found 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_dr
                                    
                                    	If true, designated router is found 
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_neighbor_cost = None
                                        self.interface_neighbor_id = None
                                        self.is_hello_suppressed = None
                                        self.is_neighbor_bdr = None
                                        self.is_neighbor_dr = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-neighbor'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_neighbor_cost is not None:
                                            return True

                                        if self.interface_neighbor_id is not None:
                                            return True

                                        if self.is_hello_suppressed is not None:
                                            return True

                                        if self.is_neighbor_bdr is not None:
                                            return True

                                        if self.is_neighbor_dr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface.InterfaceNeighbor']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.interface_name is None:
                                        raise YPYModelError('Key property interface_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.active_interface is not None and self.active_interface._has_data():
                                        return True

                                    if self.adjacent_neighbor is not None:
                                        return True

                                    if self.backup_designated_router_address is not None:
                                        return True

                                    if self.backup_designated_router_id is not None:
                                        return True

                                    if self.configured_ldp_sync is not None:
                                        return True

                                    if self.dead_interval is not None:
                                        return True

                                    if self.designated_router_address is not None:
                                        return True

                                    if self.designated_router_id is not None:
                                        return True

                                    if self.hello_interval is not None:
                                        return True

                                    if self.interface_address is not None:
                                        return True

                                    if self.interface_authentication_spi is not None:
                                        return True

                                    if self.interface_authentication_transmit is not None:
                                        return True

                                    if self.interface_bfd is not None and self.interface_bfd._has_data():
                                        return True

                                    if self.interface_dc_bitless_ls_as is not None:
                                        return True

                                    if self.interface_encrypted_authentication_transmitted is not None:
                                        return True

                                    if self.interface_encryption_spi is not None:
                                        return True

                                    if self.interface_encryption_transmitted is not None:
                                        return True

                                    if self.interface_ldp_sync is not None:
                                        return True

                                    if self.interface_link_cost is not None:
                                        return True

                                    if self.interface_neighbor is not None:
                                        for child_ref in self.interface_neighbor:
                                            if child_ref._has_data():
                                                return True

                                    if self.interface_number is not None:
                                        return True

                                    if self.interface_priority is not None:
                                        return True

                                    if self.interface_references is not None:
                                        return True

                                    if self.interface_retransmission_interval is not None:
                                        return True

                                    if self.interface_router_id is not None:
                                        return True

                                    if self.interface_state is not None:
                                        return True

                                    if self.is_demand_circuit_configured is not None:
                                        return True

                                    if self.is_designated_router is not None:
                                        return True

                                    if self.is_interface_demand_circuit is not None:
                                        return True

                                    if self.is_interface_encryption_enabled is not None:
                                        return True

                                    if self.is_interface_flood_reduction is not None:
                                        return True

                                    if self.is_interface_ip_security_active is not None:
                                        return True

                                    if self.is_interface_ip_security_required is not None:
                                        return True

                                    if self.is_interface_line_up is not None:
                                        return True

                                    if self.is_interface_lsa_filtered is not None:
                                        return True

                                    if self.network_lsa_flush_timer is not None:
                                        return True

                                    if self.network_type is not None:
                                        return True

                                    if self.next_hello_time is not None:
                                        return True

                                    if self.ospf_interface_state is not None:
                                        return True

                                    if self.transmission_delay is not None:
                                        return True

                                    if self.wait_interval is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable.Interface']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-table'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface is not None:
                                    for child_ref in self.interface:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.InterfaceTable']['meta_info']


                        class FloodListTable(object):
                            """
                            OSPFv3 flood list information table for an
                            area
                            
                            .. attribute:: flood
                            
                            	OSPFv3 flood list information
                            	**type**\: list of  :py:class:`Flood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable.Flood>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.flood = YList()
                                self.flood.parent = self
                                self.flood.name = 'flood'


                            class Flood(object):
                                """
                                OSPFv3 flood list information
                                
                                .. attribute:: interface_name  <key>
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: area_flood
                                
                                	Area scope floodlist
                                	**type**\: list of  :py:class:`AreaFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable.Flood.AreaFlood>`
                                
                                .. attribute:: as_flood
                                
                                	AS scope floodlist
                                	**type**\: list of  :py:class:`AsFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable.Flood.AsFlood>`
                                
                                .. attribute:: link_flood
                                
                                	Link floodlist
                                	**type**\: list of  :py:class:`LinkFlood <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable.Flood.LinkFlood>`
                                
                                .. attribute:: ls_transmission_timer
                                
                                	Time until next LS transmission (ms) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: queue_length
                                
                                	Number of LSAs currently being flooded 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.area_flood = YList()
                                    self.area_flood.parent = self
                                    self.area_flood.name = 'area_flood'
                                    self.as_flood = YList()
                                    self.as_flood.parent = self
                                    self.as_flood.name = 'as_flood'
                                    self.link_flood = YList()
                                    self.link_flood.parent = self
                                    self.link_flood.name = 'link_flood'
                                    self.ls_transmission_timer = None
                                    self.queue_length = None


                                class LinkFlood(object):
                                    """
                                    Link floodlist
                                    
                                    .. attribute:: header_advertising_router
                                    
                                    	Router ID of the advertising router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_age
                                    
                                    	Age of the LSA (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: header_lsa_id
                                    
                                    	LSA ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    .. attribute:: header_sequence_number
                                    
                                    	Current LSA sequence number
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header_advertising_router = None
                                        self.header_lsa_age = None
                                        self.header_lsa_id = None
                                        self.header_lsa_type = None
                                        self.header_sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:link-flood'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header_advertising_router is not None:
                                            return True

                                        if self.header_lsa_age is not None:
                                            return True

                                        if self.header_lsa_id is not None:
                                            return True

                                        if self.header_lsa_type is not None:
                                            return True

                                        if self.header_sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable.Flood.LinkFlood']['meta_info']


                                class AreaFlood(object):
                                    """
                                    Area scope floodlist
                                    
                                    .. attribute:: header_advertising_router
                                    
                                    	Router ID of the advertising router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_age
                                    
                                    	Age of the LSA (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: header_lsa_id
                                    
                                    	LSA ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    .. attribute:: header_sequence_number
                                    
                                    	Current LSA sequence number
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header_advertising_router = None
                                        self.header_lsa_age = None
                                        self.header_lsa_id = None
                                        self.header_lsa_type = None
                                        self.header_sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-flood'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header_advertising_router is not None:
                                            return True

                                        if self.header_lsa_age is not None:
                                            return True

                                        if self.header_lsa_id is not None:
                                            return True

                                        if self.header_lsa_type is not None:
                                            return True

                                        if self.header_sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable.Flood.AreaFlood']['meta_info']


                                class AsFlood(object):
                                    """
                                    AS scope floodlist
                                    
                                    .. attribute:: header_advertising_router
                                    
                                    	Router ID of the advertising router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_age
                                    
                                    	Age of the LSA (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: header_lsa_id
                                    
                                    	LSA ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    .. attribute:: header_sequence_number
                                    
                                    	Current LSA sequence number
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header_advertising_router = None
                                        self.header_lsa_age = None
                                        self.header_lsa_id = None
                                        self.header_lsa_type = None
                                        self.header_sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:as-flood'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header_advertising_router is not None:
                                            return True

                                        if self.header_lsa_age is not None:
                                            return True

                                        if self.header_lsa_id is not None:
                                            return True

                                        if self.header_lsa_type is not None:
                                            return True

                                        if self.header_sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable.Flood.AsFlood']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.interface_name is None:
                                        raise YPYModelError('Key property interface_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:flood[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.area_flood is not None:
                                        for child_ref in self.area_flood:
                                            if child_ref._has_data():
                                                return True

                                    if self.as_flood is not None:
                                        for child_ref in self.as_flood:
                                            if child_ref._has_data():
                                                return True

                                    if self.link_flood is not None:
                                        for child_ref in self.link_flood:
                                            if child_ref._has_data():
                                                return True

                                    if self.ls_transmission_timer is not None:
                                        return True

                                    if self.queue_length is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable.Flood']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:flood-list-table'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.flood is not None:
                                    for child_ref in self.flood:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.FloodListTable']['meta_info']


                        class RetransmissionListTable(object):
                            """
                            OSPFv3 retransmission list information table
                            in an area
                            
                            .. attribute:: retransmission
                            
                            	OSPFv3 retransmission list information
                            	**type**\: list of  :py:class:`Retransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable.Retransmission>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.retransmission = YList()
                                self.retransmission.parent = self
                                self.retransmission.name = 'retransmission'


                            class Retransmission(object):
                                """
                                OSPFv3 retransmission list information
                                
                                .. attribute:: interface_name
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_retransmission_sham_link
                                
                                	If true, sham link is retransmitted 
                                	**type**\:  bool
                                
                                .. attribute:: is_retransmissionvirtual_link
                                
                                	If true, virtual link is retransmitted 
                                	**type**\:  bool
                                
                                .. attribute:: neighbor_address
                                
                                	Neighbor address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: retransmission_area_db
                                
                                	List of area scope entries
                                	**type**\: list of  :py:class:`RetransmissionAreaDb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionAreaDb>`
                                
                                .. attribute:: retransmission_asdb
                                
                                	List of AS scope entries
                                	**type**\: list of  :py:class:`RetransmissionAsdb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionAsdb>`
                                
                                .. attribute:: retransmission_length
                                
                                	Retransmission queue length
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: retransmission_neighbor_address
                                
                                	Neighbor IP address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: retransmission_sham_link_id
                                
                                	Retransmission sham link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: retransmission_timer
                                
                                	Amount of time remaining on retransmission timer (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: retransmissionvirtual_link_db
                                
                                	List of virtual link scope entries 
                                	**type**\: list of  :py:class:`RetransmissionvirtualLinkDb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionvirtualLinkDb>`
                                
                                .. attribute:: retransmissionvirtual_link_id
                                
                                	Retransmission virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.is_retransmission_sham_link = None
                                    self.is_retransmissionvirtual_link = None
                                    self.neighbor_address = None
                                    self.retransmission_area_db = YList()
                                    self.retransmission_area_db.parent = self
                                    self.retransmission_area_db.name = 'retransmission_area_db'
                                    self.retransmission_asdb = YList()
                                    self.retransmission_asdb.parent = self
                                    self.retransmission_asdb.name = 'retransmission_asdb'
                                    self.retransmission_length = None
                                    self.retransmission_neighbor_address = None
                                    self.retransmission_sham_link_id = None
                                    self.retransmission_timer = None
                                    self.retransmissionvirtual_link_db = YList()
                                    self.retransmissionvirtual_link_db.parent = self
                                    self.retransmissionvirtual_link_db.name = 'retransmissionvirtual_link_db'
                                    self.retransmissionvirtual_link_id = None


                                class RetransmissionvirtualLinkDb(object):
                                    """
                                    List of virtual link scope entries 
                                    
                                    .. attribute:: header_advertising_router
                                    
                                    	Router ID of the advertising router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_age
                                    
                                    	Age of the LSA (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: header_lsa_id
                                    
                                    	LSA ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    .. attribute:: header_sequence_number
                                    
                                    	Current LSA sequence number
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header_advertising_router = None
                                        self.header_lsa_age = None
                                        self.header_lsa_id = None
                                        self.header_lsa_type = None
                                        self.header_sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmissionvirtual-link-db'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header_advertising_router is not None:
                                            return True

                                        if self.header_lsa_age is not None:
                                            return True

                                        if self.header_lsa_id is not None:
                                            return True

                                        if self.header_lsa_type is not None:
                                            return True

                                        if self.header_sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionvirtualLinkDb']['meta_info']


                                class RetransmissionAreaDb(object):
                                    """
                                    List of area scope entries
                                    
                                    .. attribute:: header_advertising_router
                                    
                                    	Router ID of the advertising router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_age
                                    
                                    	Age of the LSA (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: header_lsa_id
                                    
                                    	LSA ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    .. attribute:: header_sequence_number
                                    
                                    	Current LSA sequence number
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header_advertising_router = None
                                        self.header_lsa_age = None
                                        self.header_lsa_id = None
                                        self.header_lsa_type = None
                                        self.header_sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-area-db'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header_advertising_router is not None:
                                            return True

                                        if self.header_lsa_age is not None:
                                            return True

                                        if self.header_lsa_id is not None:
                                            return True

                                        if self.header_lsa_type is not None:
                                            return True

                                        if self.header_sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionAreaDb']['meta_info']


                                class RetransmissionAsdb(object):
                                    """
                                    List of AS scope entries
                                    
                                    .. attribute:: header_advertising_router
                                    
                                    	Router ID of the advertising router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_age
                                    
                                    	Age of the LSA (seconds)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: header_lsa_id
                                    
                                    	LSA ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: header_lsa_type
                                    
                                    	LSA type
                                    	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                    
                                    .. attribute:: header_sequence_number
                                    
                                    	Current LSA sequence number
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header_advertising_router = None
                                        self.header_lsa_age = None
                                        self.header_lsa_id = None
                                        self.header_lsa_type = None
                                        self.header_sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-asdb'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header_advertising_router is not None:
                                            return True

                                        if self.header_lsa_age is not None:
                                            return True

                                        if self.header_lsa_id is not None:
                                            return True

                                        if self.header_lsa_type is not None:
                                            return True

                                        if self.header_sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable.Retransmission.RetransmissionAsdb']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.is_retransmission_sham_link is not None:
                                        return True

                                    if self.is_retransmissionvirtual_link is not None:
                                        return True

                                    if self.neighbor_address is not None:
                                        return True

                                    if self.retransmission_area_db is not None:
                                        for child_ref in self.retransmission_area_db:
                                            if child_ref._has_data():
                                                return True

                                    if self.retransmission_asdb is not None:
                                        for child_ref in self.retransmission_asdb:
                                            if child_ref._has_data():
                                                return True

                                    if self.retransmission_length is not None:
                                        return True

                                    if self.retransmission_neighbor_address is not None:
                                        return True

                                    if self.retransmission_sham_link_id is not None:
                                        return True

                                    if self.retransmission_timer is not None:
                                        return True

                                    if self.retransmissionvirtual_link_db is not None:
                                        for child_ref in self.retransmissionvirtual_link_db:
                                            if child_ref._has_data():
                                                return True

                                    if self.retransmissionvirtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable.Retransmission']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-list-table'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.retransmission is not None:
                                    for child_ref in self.retransmission:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area.RetransmissionListTable']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.area_id is None:
                                raise YPYModelError('Key property area_id is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area_id is not None:
                                return True

                            if self.flood_list_table is not None and self.flood_list_table._has_data():
                                return True

                            if self.interface_brief_table is not None and self.interface_brief_table._has_data():
                                return True

                            if self.interface_table is not None and self.interface_table._has_data():
                                return True

                            if self.neighbor_detail_table is not None and self.neighbor_detail_table._has_data():
                                return True

                            if self.neighbor_table is not None and self.neighbor_table._has_data():
                                return True

                            if self.request_list_table is not None and self.request_list_table._has_data():
                                return True

                            if self.retransmission_list_table is not None and self.retransmission_list_table._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas.Area']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:areas'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.area is not None:
                            for child_ref in self.area:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Areas']['meta_info']


                class InternalRoutes(object):
                    """
                    OSPFv3 internal route information table
                    
                    .. attribute:: internal_route
                    
                    	OSPFv3 internal route information
                    	**type**\: list of  :py:class:`InternalRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.internal_route = YList()
                        self.internal_route.parent = self
                        self.internal_route.name = 'internal_route'


                    class InternalRoute(object):
                        """
                        OSPFv3 internal route information
                        
                        .. attribute:: prefix
                        
                        	Route prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..128
                        
                        .. attribute:: route_area_id
                        
                        	Route area ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: route_path
                        
                        	List of paths to this route
                        	**type**\: list of  :py:class:`RoutePath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RoutePath>`
                        
                        .. attribute:: route_source
                        
                        	List of topology source information
                        	**type**\: list of  :py:class:`RouteSource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RouteSource>`
                        
                        .. attribute:: route_topology
                        
                        	Common Route topology information
                        	**type**\:  :py:class:`RouteTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RouteTopology>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.prefix_length = None
                            self.route_area_id = None
                            self.route_path = YList()
                            self.route_path.parent = self
                            self.route_path.name = 'route_path'
                            self.route_source = YList()
                            self.route_source.parent = self
                            self.route_source.name = 'route_source'
                            self.route_topology = Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RouteTopology()
                            self.route_topology.parent = self


                        class RouteTopology(object):
                            """
                            Common Route topology information
                            
                            .. attribute:: route_cost
                            
                            	Route cost 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_distance
                            
                            	Route distance 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_id
                            
                            	Route ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: route_type
                            
                            	Route type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.route_cost = None
                                self.route_distance = None
                                self.route_id = None
                                self.route_type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-topology'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.route_cost is not None:
                                    return True

                                if self.route_distance is not None:
                                    return True

                                if self.route_id is not None:
                                    return True

                                if self.route_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RouteTopology']['meta_info']


                        class RouteSource(object):
                            """
                            List of topology source information
                            
                            .. attribute:: route_source_adversting_router
                            
                            	Route source of the advertising router 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: route_source_id
                            
                            	Route source ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: route_source_lsa_type
                            
                            	Type of LSA advertising the prefix, see RFC5340
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.route_source_adversting_router = None
                                self.route_source_id = None
                                self.route_source_lsa_type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-source'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.route_source_adversting_router is not None:
                                    return True

                                if self.route_source_id is not None:
                                    return True

                                if self.route_source_lsa_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RouteSource']['meta_info']


                        class RoutePath(object):
                            """
                            List of paths to this route
                            
                            .. attribute:: interface_name
                            
                            	Route path interface name 
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: route_backup_path
                            
                            	Backup Path Info
                            	**type**\:  :py:class:`RouteBackupPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RoutePath.RouteBackupPath>`
                            
                            .. attribute:: route_path_id
                            
                            	Path ID of path
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: route_path_next_hop
                            
                            	Route path next hop 
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.route_backup_path = Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RoutePath.RouteBackupPath()
                                self.route_backup_path.parent = self
                                self.route_path_id = None
                                self.route_path_next_hop = None


                            class RouteBackupPath(object):
                                """
                                Backup Path Info
                                
                                .. attribute:: backup_metric
                                
                                	Metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: backup_route_interface_name
                                
                                	Next hop Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: backup_route_next_hop_address
                                
                                	Nexthop IP address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: backup_route_source
                                
                                	IP address of source of route
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: downstream
                                
                                	Downstream
                                	**type**\:  bool
                                
                                .. attribute:: line_card_disjoint
                                
                                	Line Card Disjoint
                                	**type**\:  bool
                                
                                .. attribute:: node_protect
                                
                                	Node Protect
                                	**type**\:  bool
                                
                                .. attribute:: primary_path
                                
                                	Primary Path
                                	**type**\:  bool
                                
                                .. attribute:: srlg_disjoint
                                
                                	SRLG Disjoint
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_metric = None
                                    self.backup_route_interface_name = None
                                    self.backup_route_next_hop_address = None
                                    self.backup_route_source = None
                                    self.downstream = None
                                    self.line_card_disjoint = None
                                    self.node_protect = None
                                    self.primary_path = None
                                    self.srlg_disjoint = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-backup-path'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_metric is not None:
                                        return True

                                    if self.backup_route_interface_name is not None:
                                        return True

                                    if self.backup_route_next_hop_address is not None:
                                        return True

                                    if self.backup_route_source is not None:
                                        return True

                                    if self.downstream is not None:
                                        return True

                                    if self.line_card_disjoint is not None:
                                        return True

                                    if self.node_protect is not None:
                                        return True

                                    if self.primary_path is not None:
                                        return True

                                    if self.srlg_disjoint is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RoutePath.RouteBackupPath']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-path'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.route_backup_path is not None and self.route_backup_path._has_data():
                                    return True

                                if self.route_path_id is not None:
                                    return True

                                if self.route_path_next_hop is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute.RoutePath']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:internal-route'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.route_area_id is not None:
                                return True

                            if self.route_path is not None:
                                for child_ref in self.route_path:
                                    if child_ref._has_data():
                                        return True

                            if self.route_source is not None:
                                for child_ref in self.route_source:
                                    if child_ref._has_data():
                                        return True

                            if self.route_topology is not None and self.route_topology._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InternalRoutes.InternalRoute']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:internal-routes'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.internal_route is not None:
                            for child_ref in self.internal_route:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InternalRoutes']['meta_info']


                class DatabaseSummaryProcessTable(object):
                    """
                    Database summary table at process level
                    
                    .. attribute:: database_summary
                    
                    	Database Summary information
                    	**type**\:  :py:class:`DatabaseSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.database_summary = Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary()
                        self.database_summary.parent = self


                    class DatabaseSummary(object):
                        """
                        Database Summary information
                        
                        .. attribute:: area_database
                        
                        	OSPFv3 Area Database list 
                        	**type**\: list of  :py:class:`AreaDatabase <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase>`
                        
                        .. attribute:: database_counters
                        
                        	OSPFv3 database counters 
                        	**type**\:  :py:class:`DatabaseCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary.DatabaseCounters>`
                        
                        .. attribute:: database_router_id
                        
                        	Database router ID 
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: is_opaque_database_capable
                        
                        	If true, opaque database is capable 
                        	**type**\:  bool
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area_database = YList()
                            self.area_database.parent = self
                            self.area_database.name = 'area_database'
                            self.database_counters = Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary.DatabaseCounters()
                            self.database_counters.parent = self
                            self.database_router_id = None
                            self.is_opaque_database_capable = None


                        class DatabaseCounters(object):
                            """
                            OSPFv3 database counters 
                            
                            .. attribute:: deleted_lsa
                            
                            	deleted lsa
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa
                            
                            	lsa
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_checksum
                            
                            	lsa checksum
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: max_age_lsa
                            
                            	max age lsa
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.deleted_lsa = YLeafList()
                                self.deleted_lsa.parent = self
                                self.deleted_lsa.name = 'deleted_lsa'
                                self.lsa = YLeafList()
                                self.lsa.parent = self
                                self.lsa.name = 'lsa'
                                self.lsa_checksum = YLeafList()
                                self.lsa_checksum.parent = self
                                self.lsa_checksum.name = 'lsa_checksum'
                                self.max_age_lsa = YLeafList()
                                self.max_age_lsa.parent = self
                                self.max_age_lsa.name = 'max_age_lsa'

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-counters'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.deleted_lsa is not None:
                                    for child in self.deleted_lsa:
                                        if child is not None:
                                            return True

                                if self.lsa is not None:
                                    for child in self.lsa:
                                        if child is not None:
                                            return True

                                if self.lsa_checksum is not None:
                                    for child in self.lsa_checksum:
                                        if child is not None:
                                            return True

                                if self.max_age_lsa is not None:
                                    for child in self.max_age_lsa:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary.DatabaseCounters']['meta_info']


                        class AreaDatabase(object):
                            """
                            OSPFv3 Area Database list 
                            
                            .. attribute:: area_database_summary
                            
                            	Area database summary 
                            	**type**\:  :py:class:`AreaDatabaseSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase.AreaDatabaseSummary>`
                            
                            .. attribute:: lsa_area_id
                            
                            	Area ID in decimal or dotted\-decimal format
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_database_summary = Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase.AreaDatabaseSummary()
                                self.area_database_summary.parent = self
                                self.lsa_area_id = None


                            class AreaDatabaseSummary(object):
                                """
                                Area database summary 
                                
                                .. attribute:: deleted_lsa
                                
                                	deleted lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa
                                
                                	lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_checksum
                                
                                	lsa checksum
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: max_age_lsa
                                
                                	max age lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.deleted_lsa = YLeafList()
                                    self.deleted_lsa.parent = self
                                    self.deleted_lsa.name = 'deleted_lsa'
                                    self.lsa = YLeafList()
                                    self.lsa.parent = self
                                    self.lsa.name = 'lsa'
                                    self.lsa_checksum = YLeafList()
                                    self.lsa_checksum.parent = self
                                    self.lsa_checksum.name = 'lsa_checksum'
                                    self.max_age_lsa = YLeafList()
                                    self.max_age_lsa.parent = self
                                    self.max_age_lsa.name = 'max_age_lsa'

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-database-summary'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.deleted_lsa is not None:
                                        for child in self.deleted_lsa:
                                            if child is not None:
                                                return True

                                    if self.lsa is not None:
                                        for child in self.lsa:
                                            if child is not None:
                                                return True

                                    if self.lsa_checksum is not None:
                                        for child in self.lsa_checksum:
                                            if child is not None:
                                                return True

                                    if self.max_age_lsa is not None:
                                        for child in self.max_age_lsa:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase.AreaDatabaseSummary']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-database'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_database_summary is not None and self.area_database_summary._has_data():
                                    return True

                                if self.lsa_area_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary.AreaDatabase']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area_database is not None:
                                for child_ref in self.area_database:
                                    if child_ref._has_data():
                                        return True

                            if self.database_counters is not None and self.database_counters._has_data():
                                return True

                            if self.database_router_id is not None:
                                return True

                            if self.is_opaque_database_capable is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable.DatabaseSummary']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary-process-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.database_summary is not None and self.database_summary._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryProcessTable']['meta_info']


                class ProtocolAreas(object):
                    """
                    Protocol area table 
                    
                    .. attribute:: protocol_area
                    
                    	Area information 
                    	**type**\: list of  :py:class:`ProtocolArea <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ProtocolAreas.ProtocolArea>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.protocol_area = YList()
                        self.protocol_area.parent = self
                        self.protocol_area.name = 'protocol_area'


                    class ProtocolArea(object):
                        """
                        Area information 
                        
                        .. attribute:: area_id  <key>
                        
                        	Area ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: distribute_list_in
                        
                        	Distribute List In
                        	**type**\:  str
                        
                        .. attribute:: protocol_area_id
                        
                        	Area ID string in decimal and dotted\-decimal format
                        	**type**\:  str
                        
                        	**range:** 0..16
                        
                        .. attribute:: protocol_interface
                        
                        	Interface list
                        	**type**\: list of  :py:class:`ProtocolInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ProtocolAreas.ProtocolArea.ProtocolInterface>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area_id = None
                            self.distribute_list_in = None
                            self.protocol_area_id = None
                            self.protocol_interface = YList()
                            self.protocol_interface.parent = self
                            self.protocol_interface.name = 'protocol_interface'


                        class ProtocolInterface(object):
                            """
                            Interface list
                            
                            .. attribute:: distribute_list_in
                            
                            	Distribute List In
                            	**type**\:  str
                            
                            .. attribute:: interface_name
                            
                            	Protocol interface name 
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.distribute_list_in = None
                                self.interface_name = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:protocol-interface'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.distribute_list_in is not None:
                                    return True

                                if self.interface_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ProtocolAreas.ProtocolArea.ProtocolInterface']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.area_id is None:
                                raise YPYModelError('Key property area_id is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:protocol-area[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area_id is not None:
                                return True

                            if self.distribute_list_in is not None:
                                return True

                            if self.protocol_area_id is not None:
                                return True

                            if self.protocol_interface is not None:
                                for child_ref in self.protocol_interface:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ProtocolAreas.ProtocolArea']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:protocol-areas'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.protocol_area is not None:
                            for child_ref in self.protocol_area:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ProtocolAreas']['meta_info']


                class DatabaseExternalLsas(object):
                    """
                    Database external LSA information
                    
                    .. attribute:: database_external_lsa
                    
                    	Database external LSA information
                    	**type**\: list of  :py:class:`DatabaseExternalLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas.DatabaseExternalLsa>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.database_external_lsa = YList()
                        self.database_external_lsa.parent = self
                        self.database_external_lsa.name = 'database_external_lsa'


                    class DatabaseExternalLsa(object):
                        """
                        Database external LSA information
                        
                        .. attribute:: advertising_router
                        
                        	Advertising Router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: external_tag
                        
                        	Route Tag
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: forwarding_address
                        
                        	Forwarding Address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: is_forwarding_address_set
                        
                        	If true, forwarding address is set 
                        	**type**\:  bool
                        
                        .. attribute:: ls_id
                        
                        	Link state ID
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: lsa_detail
                        
                        	Detailed LSA Information
                        	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaDetail>`
                        
                        .. attribute:: lsa_header
                        
                        	Header information 
                        	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaHeader>`
                        
                        .. attribute:: lsa_type
                        
                        	LSA type
                        	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                        
                        .. attribute:: metric_type
                        
                        	Metric type 
                        	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                        
                        .. attribute:: prefix
                        
                        	Prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..128
                        
                        .. attribute:: prefix_length_xr
                        
                        	Prefix length 
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: prefix_xr
                        
                        	IPV6 address prefix 
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: priority
                        
                        	Prefix priority
                        	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                        
                        .. attribute:: tos_cost
                        
                        	Type of service cost metric 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.advertising_router = None
                            self.external_tag = None
                            self.forwarding_address = None
                            self.is_forwarding_address_set = None
                            self.ls_id = None
                            self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaDetail()
                            self.lsa_detail.parent = self
                            self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaHeader()
                            self.lsa_header.parent = self
                            self.lsa_type = None
                            self.metric_type = None
                            self.prefix = None
                            self.prefix_length = None
                            self.prefix_length_xr = None
                            self.prefix_xr = None
                            self.priority = None
                            self.tos_cost = None


                        class LsaHeader(object):
                            """
                            Header information 
                            
                            .. attribute:: advertising_router
                            
                            	Router ID of Advertising Router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: checksum
                            
                            	Checksum value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: is_do_not_age_lsa
                            
                            	If true, Do Not Age this LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_graceful_restart_active
                            
                            	If true, if grace restart is active 
                            	**type**\:  bool
                            
                            .. attribute:: ls_id
                            
                            	LS ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_age
                            
                            	LSA's Age (s)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsa_area_id
                            
                            	Area ID in decimal or dotted\-decimal format
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            .. attribute:: lsa_type
                            
                            	LSA type
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: sequence_number
                            
                            	Current Sequence number
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.advertising_router = None
                                self.checksum = None
                                self.is_do_not_age_lsa = None
                                self.is_graceful_restart_active = None
                                self.ls_id = None
                                self.lsa_age = None
                                self.lsa_area_id = None
                                self.lsa_type = None
                                self.sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.advertising_router is not None:
                                    return True

                                if self.checksum is not None:
                                    return True

                                if self.is_do_not_age_lsa is not None:
                                    return True

                                if self.is_graceful_restart_active is not None:
                                    return True

                                if self.ls_id is not None:
                                    return True

                                if self.lsa_age is not None:
                                    return True

                                if self.lsa_area_id is not None:
                                    return True

                                if self.lsa_type is not None:
                                    return True

                                if self.sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaHeader']['meta_info']


                        class LsaDetail(object):
                            """
                            Detailed LSA Information
                            
                            .. attribute:: free_time
                            
                            	The amount of time since the last check was made to free this LSA (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: is_acknowledged
                            
                            	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                            	**type**\:  bool
                            
                            .. attribute:: is_advertising_router_reachable
                            
                            	If true, Advertising Router is reachable
                            	**type**\:  bool
                            
                            .. attribute:: is_deleted
                            
                            	If true, flag is set to delete this LSA 
                            	**type**\:  bool
                            
                            .. attribute:: is_flood_pending
                            
                            	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                            	**type**\:  bool
                            
                            .. attribute:: is_maximum_aged
                            
                            	If true, the reason not to delete this LSA is because it is in Maxage Queue
                            	**type**\:  bool
                            
                            .. attribute:: is_neighbor_exchange
                            
                            	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                            	**type**\:  bool
                            
                            .. attribute:: is_no_delete
                            
                            	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_nsr_ack_pending
                            
                            	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                            	**type**\:  bool
                            
                            .. attribute:: is_partial_spf
                            
                            	If true, the reason not to delete this LSA is because it is in partial SPF queue
                            	**type**\:  bool
                            
                            .. attribute:: is_routing_bit
                            
                            	If true, Routing Bit set on the LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_routing_table
                            
                            	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                            	**type**\:  bool
                            
                            .. attribute:: lsa_flood_required_post_fail_over
                            
                            	LSA flood required after FO
                            	**type**\:  bool
                            
                            .. attribute:: lsa_length
                            
                            	Length of the LSA
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsa_sync_state
                            
                            	State of LSA sync with active
                            	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                            
                            .. attribute:: minute_table_index
                            
                            	Minute table index
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: nsr_flood_required
                            
                            	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                            	**type**\:  bool
                            
                            .. attribute:: rate_limit
                            
                            	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                            	**type**\:  bool
                            
                            .. attribute:: second_table_index
                            
                            	Second table index
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.free_time = None
                                self.is_acknowledged = None
                                self.is_advertising_router_reachable = None
                                self.is_deleted = None
                                self.is_flood_pending = None
                                self.is_maximum_aged = None
                                self.is_neighbor_exchange = None
                                self.is_no_delete = None
                                self.is_nsr_ack_pending = None
                                self.is_partial_spf = None
                                self.is_routing_bit = None
                                self.is_routing_table = None
                                self.lsa_flood_required_post_fail_over = None
                                self.lsa_length = None
                                self.lsa_sync_state = None
                                self.minute_table_index = None
                                self.nsr_flood_required = None
                                self.rate_limit = None
                                self.second_table_index = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.free_time is not None:
                                    return True

                                if self.is_acknowledged is not None:
                                    return True

                                if self.is_advertising_router_reachable is not None:
                                    return True

                                if self.is_deleted is not None:
                                    return True

                                if self.is_flood_pending is not None:
                                    return True

                                if self.is_maximum_aged is not None:
                                    return True

                                if self.is_neighbor_exchange is not None:
                                    return True

                                if self.is_no_delete is not None:
                                    return True

                                if self.is_nsr_ack_pending is not None:
                                    return True

                                if self.is_partial_spf is not None:
                                    return True

                                if self.is_routing_bit is not None:
                                    return True

                                if self.is_routing_table is not None:
                                    return True

                                if self.lsa_flood_required_post_fail_over is not None:
                                    return True

                                if self.lsa_length is not None:
                                    return True

                                if self.lsa_sync_state is not None:
                                    return True

                                if self.minute_table_index is not None:
                                    return True

                                if self.nsr_flood_required is not None:
                                    return True

                                if self.rate_limit is not None:
                                    return True

                                if self.second_table_index is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas.DatabaseExternalLsa.LsaDetail']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-external-lsa'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.advertising_router is not None:
                                return True

                            if self.external_tag is not None:
                                return True

                            if self.forwarding_address is not None:
                                return True

                            if self.is_forwarding_address_set is not None:
                                return True

                            if self.ls_id is not None:
                                return True

                            if self.lsa_detail is not None and self.lsa_detail._has_data():
                                return True

                            if self.lsa_header is not None and self.lsa_header._has_data():
                                return True

                            if self.lsa_type is not None:
                                return True

                            if self.metric_type is not None:
                                return True

                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.prefix_length_xr is not None:
                                return True

                            if self.prefix_xr is not None:
                                return True

                            if self.priority is not None:
                                return True

                            if self.tos_cost is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas.DatabaseExternalLsa']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-external-lsas'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.database_external_lsa is not None:
                            for child_ref in self.database_external_lsa:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseExternalLsas']['meta_info']


                class ConnectedRoutes(object):
                    """
                    OSPFv3 connected route information table
                    
                    .. attribute:: connected_route
                    
                    	OSPFv3 connected route information
                    	**type**\: list of  :py:class:`ConnectedRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.connected_route = YList()
                        self.connected_route.parent = self
                        self.connected_route.name = 'connected_route'


                    class ConnectedRoute(object):
                        """
                        OSPFv3 connected route information
                        
                        .. attribute:: prefix
                        
                        	Route prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..128
                        
                        .. attribute:: route_path
                        
                        	List of paths to this route
                        	**type**\: list of  :py:class:`RoutePath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute.RoutePath>`
                        
                        .. attribute:: route_topology
                        
                        	Common Route topology information
                        	**type**\:  :py:class:`RouteTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute.RouteTopology>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.prefix_length = None
                            self.route_path = YList()
                            self.route_path.parent = self
                            self.route_path.name = 'route_path'
                            self.route_topology = Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute.RouteTopology()
                            self.route_topology.parent = self


                        class RouteTopology(object):
                            """
                            Common Route topology information
                            
                            .. attribute:: route_cost
                            
                            	Route cost 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_distance
                            
                            	Route distance 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: route_id
                            
                            	Route ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: route_type
                            
                            	Route type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.route_cost = None
                                self.route_distance = None
                                self.route_id = None
                                self.route_type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-topology'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.route_cost is not None:
                                    return True

                                if self.route_distance is not None:
                                    return True

                                if self.route_id is not None:
                                    return True

                                if self.route_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute.RouteTopology']['meta_info']


                        class RoutePath(object):
                            """
                            List of paths to this route
                            
                            .. attribute:: interface_name
                            
                            	Route path interface name 
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: route_backup_path
                            
                            	Backup Path Info
                            	**type**\:  :py:class:`RouteBackupPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute.RoutePath.RouteBackupPath>`
                            
                            .. attribute:: route_path_id
                            
                            	Path ID of path
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: route_path_next_hop
                            
                            	Route path next hop 
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.route_backup_path = Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute.RoutePath.RouteBackupPath()
                                self.route_backup_path.parent = self
                                self.route_path_id = None
                                self.route_path_next_hop = None


                            class RouteBackupPath(object):
                                """
                                Backup Path Info
                                
                                .. attribute:: backup_metric
                                
                                	Metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: backup_route_interface_name
                                
                                	Next hop Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: backup_route_next_hop_address
                                
                                	Nexthop IP address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: backup_route_source
                                
                                	IP address of source of route
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: downstream
                                
                                	Downstream
                                	**type**\:  bool
                                
                                .. attribute:: line_card_disjoint
                                
                                	Line Card Disjoint
                                	**type**\:  bool
                                
                                .. attribute:: node_protect
                                
                                	Node Protect
                                	**type**\:  bool
                                
                                .. attribute:: primary_path
                                
                                	Primary Path
                                	**type**\:  bool
                                
                                .. attribute:: srlg_disjoint
                                
                                	SRLG Disjoint
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_metric = None
                                    self.backup_route_interface_name = None
                                    self.backup_route_next_hop_address = None
                                    self.backup_route_source = None
                                    self.downstream = None
                                    self.line_card_disjoint = None
                                    self.node_protect = None
                                    self.primary_path = None
                                    self.srlg_disjoint = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-backup-path'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_metric is not None:
                                        return True

                                    if self.backup_route_interface_name is not None:
                                        return True

                                    if self.backup_route_next_hop_address is not None:
                                        return True

                                    if self.backup_route_source is not None:
                                        return True

                                    if self.downstream is not None:
                                        return True

                                    if self.line_card_disjoint is not None:
                                        return True

                                    if self.node_protect is not None:
                                        return True

                                    if self.primary_path is not None:
                                        return True

                                    if self.srlg_disjoint is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute.RoutePath.RouteBackupPath']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route-path'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.route_backup_path is not None and self.route_backup_path._has_data():
                                    return True

                                if self.route_path_id is not None:
                                    return True

                                if self.route_path_next_hop is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute.RoutePath']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:connected-route'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.route_path is not None:
                                for child_ref in self.route_path:
                                    if child_ref._has_data():
                                        return True

                            if self.route_topology is not None and self.route_topology._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes.ConnectedRoute']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:connected-routes'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.connected_route is not None:
                            for child_ref in self.connected_route:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.ConnectedRoutes']['meta_info']


                class Summary(object):
                    """
                    OSPFv3 summary
                    
                    .. attribute:: ospfv3
                    
                    	OSPFv3 summary
                    	**type**\:  :py:class:`Ospfv3 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3>`
                    
                    .. attribute:: protocol
                    
                    	OSPFv3 protocol summary
                    	**type**\:  :py:class:`Protocol <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Protocol>`
                    
                    .. attribute:: route
                    
                    	OSPFv3 route summary
                    	**type**\:  :py:class:`Route <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Route>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ospfv3 = Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3()
                        self.ospfv3.parent = self
                        self.protocol = Ospfv3.Processes.Process.DefaultVrf.Summary.Protocol()
                        self.protocol.parent = self
                        self.route = Ospfv3.Processes.Process.DefaultVrf.Summary.Route()
                        self.route.parent = self


                    class Protocol(object):
                        """
                        OSPFv3 protocol summary
                        
                        .. attribute:: administrative_distance
                        
                        	Administrative distance
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: administrative_distance_external
                        
                        	Administrative Distance for External routes
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: administrative_distance_inter_area
                        
                        	Administrative Distance for Inter Area routes
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: distribute_list_in
                        
                        	Distribute List In
                        	**type**\:  str
                        
                        .. attribute:: is_graceful_restart
                        
                        	If true, Graceful restart is enabled 
                        	**type**\:  bool
                        
                        .. attribute:: protocol_router_id
                        
                        	Protocol router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.administrative_distance = None
                            self.administrative_distance_external = None
                            self.administrative_distance_inter_area = None
                            self.distribute_list_in = None
                            self.is_graceful_restart = None
                            self.protocol_router_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:protocol'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.administrative_distance is not None:
                                return True

                            if self.administrative_distance_external is not None:
                                return True

                            if self.administrative_distance_inter_area is not None:
                                return True

                            if self.distribute_list_in is not None:
                                return True

                            if self.is_graceful_restart is not None:
                                return True

                            if self.protocol_router_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Protocol']['meta_info']


                    class Ospfv3(object):
                        """
                        OSPFv3 summary
                        
                        .. attribute:: areas
                        
                        	Number of areas
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: as_dc_bitless_ls_as
                        
                        	Number of external and AS opaque LSAs with demand circut bit not set
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: as_do_not_age_ls_as
                        
                        	Number of external and AS opaque LSAs with do not age set 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: as_ls_as
                        
                        	Number of AS scope LSAs
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: as_lsa_flood_list_length
                        
                        	Length of AS LSAs flood list
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: context_name
                        
                        	Context name
                        	**type**\:  str
                        
                        	**range:** 0..32
                        
                        .. attribute:: default_metric
                        
                        	Default metric 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: default_metric_type
                        
                        	Default metric type 
                        	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                        
                        .. attribute:: default_policy_name
                        
                        	Default policy name 
                        	**type**\:  str
                        
                        .. attribute:: default_tag
                        
                        	Default tag 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: domain_id
                        
                        	Domain ID information
                        	**type**\:  :py:class:`DomainId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.DomainId>`
                        
                        .. attribute:: grace_resync_time
                        
                        	Grace time to resync 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: graceful_shutdown_state
                        
                        	Graceful shutdown state
                        	**type**\:  :py:class:`Ospfv3GracefulShutdownStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3GracefulShutdownStateEnum>`
                        
                        .. attribute:: ipfrr_tiebreakers
                        
                        	IPFRR\-Tiebreakers list
                        	**type**\: list of  :py:class:`IpfrrTiebreakers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.IpfrrTiebreakers>`
                        
                        .. attribute:: is_area_border_router
                        
                        	If true, is an area border router
                        	**type**\:  bool
                        
                        .. attribute:: is_as_border_router
                        
                        	If true, is an AS border router
                        	**type**\:  bool
                        
                        .. attribute:: is_auto_cost
                        
                        	If true, auto cost is enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_default_always
                        
                        	If true, default always 
                        	**type**\:  bool
                        
                        .. attribute:: is_default_originated
                        
                        	If true, origin is by default 
                        	**type**\:  bool
                        
                        .. attribute:: is_default_policy
                        
                        	If true, is a default policy 
                        	**type**\:  bool
                        
                        .. attribute:: is_grace_restart_enabled
                        
                        	If true, grace restart is enabled 
                        	**type**\:  bool
                        
                        .. attribute:: is_nsr_enabled
                        
                        	If true, NSR is enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_nsr_switchover_on_restart
                        
                        	Trigger RP Switchover on detectable process restart
                        	**type**\:  bool
                        
                        .. attribute:: is_opaque_capable
                        
                        	Opaque LSA capable 
                        	**type**\:  bool
                        
                        .. attribute:: is_role_standby
                        
                        	If true, the process is running as stanby role
                        	**type**\:  bool
                        
                        .. attribute:: is_router_id_stalled
                        
                        	Stalled Router ID 
                        	**type**\:  bool
                        
                        .. attribute:: last_nsf_time
                        
                        	 Length of time since the last NSF (s)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lsa_flood_pacing_interval
                        
                        	LSA flood pacing timer (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lsa_group_interval
                        
                        	LSA refresh interval (sec)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lsa_hold_time
                        
                        	Second delay before generating next LSA (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lsa_maximum_time
                        
                        	Maximum delay before generating an LSA (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lsa_retransmission_pacing_interval
                        
                        	LSA retransmission pacing timer (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lsa_start_time
                        
                        	Initial LSA throttle delay (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: maximum_interfaces
                        
                        	Maximum number of interfaces
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: maximum_paths
                        
                        	Maximum number of paths
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: metric
                        
                        	Redistribution metric 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: minimum_lsa_interval
                        
                        	Minimum time between LSA regeneration (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: normal_areas
                        
                        	Number of normal areas
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: nssa_areas
                        
                        	Number of NSSA areas
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: opaque_lsa_checksum
                        
                        	Sum of opaque LSA checksum
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: opaque_lsas
                        
                        	Number of opaque LSAs
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: redistribution_limit
                        
                        	The number of redistributed prefixes allowed
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: redistribution_threshold
                        
                        	When the number of redistributed prefixes reaches this threshold, a warning message is issued 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: reference_bandwidth
                        
                        	Reference Bandwdith
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: role
                        
                        	Role, V1/V2 Active/Standby
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_id
                        
                        	Router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: snmp_trap_enabled
                        
                        	If true, snmp trap is enabled
                        	**type**\:  bool
                        
                        .. attribute:: spf_hold_time
                        
                        	Minimum delay time between SPF runs (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: spf_maximum_time
                        
                        	Maximum delay time between SPF runs (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: spf_start_time
                        
                        	Scheduling delay for SPF (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: stub_areas
                        
                        	Number of stub and total stub areas
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: stub_router
                        
                        	Stub Router Information
                        	**type**\: list of  :py:class:`StubRouter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.areas = None
                            self.as_dc_bitless_ls_as = None
                            self.as_do_not_age_ls_as = None
                            self.as_ls_as = None
                            self.as_lsa_flood_list_length = None
                            self.context_name = None
                            self.default_metric = None
                            self.default_metric_type = None
                            self.default_policy_name = None
                            self.default_tag = None
                            self.domain_id = Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.DomainId()
                            self.domain_id.parent = self
                            self.grace_resync_time = None
                            self.graceful_shutdown_state = None
                            self.ipfrr_tiebreakers = YList()
                            self.ipfrr_tiebreakers.parent = self
                            self.ipfrr_tiebreakers.name = 'ipfrr_tiebreakers'
                            self.is_area_border_router = None
                            self.is_as_border_router = None
                            self.is_auto_cost = None
                            self.is_default_always = None
                            self.is_default_originated = None
                            self.is_default_policy = None
                            self.is_grace_restart_enabled = None
                            self.is_nsr_enabled = None
                            self.is_nsr_switchover_on_restart = None
                            self.is_opaque_capable = None
                            self.is_role_standby = None
                            self.is_router_id_stalled = None
                            self.last_nsf_time = None
                            self.lsa_flood_pacing_interval = None
                            self.lsa_group_interval = None
                            self.lsa_hold_time = None
                            self.lsa_maximum_time = None
                            self.lsa_retransmission_pacing_interval = None
                            self.lsa_start_time = None
                            self.maximum_interfaces = None
                            self.maximum_paths = None
                            self.metric = None
                            self.minimum_lsa_interval = None
                            self.normal_areas = None
                            self.nssa_areas = None
                            self.opaque_lsa_checksum = None
                            self.opaque_lsas = None
                            self.redistribution_limit = None
                            self.redistribution_threshold = None
                            self.reference_bandwidth = None
                            self.role = None
                            self.router_id = None
                            self.snmp_trap_enabled = None
                            self.spf_hold_time = None
                            self.spf_maximum_time = None
                            self.spf_start_time = None
                            self.stub_areas = None
                            self.stub_router = YList()
                            self.stub_router.parent = self
                            self.stub_router.name = 'stub_router'


                        class DomainId(object):
                            """
                            Domain ID information
                            
                            .. attribute:: primary_domain_id
                            
                            	Primary Domain ID
                            	**type**\:  :py:class:`PrimaryDomainId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.DomainId.PrimaryDomainId>`
                            
                            .. attribute:: secondary_domain_id
                            
                            	List of secondary domain IDs
                            	**type**\: list of  :py:class:`SecondaryDomainId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.DomainId.SecondaryDomainId>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.primary_domain_id = Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.DomainId.PrimaryDomainId()
                                self.primary_domain_id.parent = self
                                self.secondary_domain_id = YList()
                                self.secondary_domain_id.parent = self
                                self.secondary_domain_id.name = 'secondary_domain_id'


                            class PrimaryDomainId(object):
                                """
                                Primary Domain ID
                                
                                .. attribute:: domain_id_type
                                
                                	Domain ID Type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: domain_id_value
                                
                                	Domain ID value
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.domain_id_type = None
                                    self.domain_id_value = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:primary-domain-id'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.domain_id_type is not None:
                                        return True

                                    if self.domain_id_value is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.DomainId.PrimaryDomainId']['meta_info']


                            class SecondaryDomainId(object):
                                """
                                List of secondary domain IDs
                                
                                .. attribute:: domain_id_type
                                
                                	Domain ID Type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: domain_id_value
                                
                                	Domain ID value
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.domain_id_type = None
                                    self.domain_id_value = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:secondary-domain-id'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.domain_id_type is not None:
                                        return True

                                    if self.domain_id_value is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.DomainId.SecondaryDomainId']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:domain-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.primary_domain_id is not None and self.primary_domain_id._has_data():
                                    return True

                                if self.secondary_domain_id is not None:
                                    for child_ref in self.secondary_domain_id:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.DomainId']['meta_info']


                        class StubRouter(object):
                            """
                            Stub Router Information
                            
                            .. attribute:: abr_off_reason
                            
                            	Reason for being in ABR off mode
                            	**type**\:  :py:class:`StubRouterAbrOffReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterAbrOffReasonEnum>`
                            
                            .. attribute:: abr_resume_time
                            
                            	Timestamp (relative to 1970/1/1 00\:00) when ABR duties were resumed
                            	**type**\:  :py:class:`AbrResumeTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.AbrResumeTime>`
                            
                            .. attribute:: active
                            
                            	If true, stub router mode is active
                            	**type**\:  bool
                            
                            .. attribute:: external_lsa_metric
                            
                            	Metric for external LSAs in max\-metric mode
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: include_stub_links
                            
                            	If true, advertise maximum metric for stub links
                            	**type**\:  bool
                            
                            .. attribute:: mode
                            
                            	Stub router mode
                            	**type**\:  :py:class:`StubRouterModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterModeEnum>`
                            
                            .. attribute:: remaining_time
                            
                            	Remaining time (in seconds) in stub router mode
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: set_reason
                            
                            	Reason for entering stub router mode
                            	**type**\:  :py:class:`StubRouterTriggerEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterTriggerEnum>`
                            
                            .. attribute:: start_time
                            
                            	Timestamp (relative to 1970/1/1 00\:00) when stub router mode was activated
                            	**type**\:  :py:class:`StartTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.StartTime>`
                            
                            .. attribute:: summary_lsa_metric
                            
                            	Metric for summary LSAs in max\-metric mode
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: trigger
                            
                            	Triggers for entering stub router mode
                            	**type**\: list of  :py:class:`Trigger <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.Trigger>`
                            
                            .. attribute:: unset_reason
                            
                            	Reason for clearing stub router condition
                            	**type**\:  :py:class:`StubRouterExitReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterExitReasonEnum>`
                            
                            .. attribute:: unset_time
                            
                            	Timestamp (relative to 1970/1/1 00\:00) when stub router condition was cleared
                            	**type**\:  :py:class:`UnsetTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.UnsetTime>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.abr_off_reason = None
                                self.abr_resume_time = Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.AbrResumeTime()
                                self.abr_resume_time.parent = self
                                self.active = None
                                self.external_lsa_metric = None
                                self.include_stub_links = None
                                self.mode = None
                                self.remaining_time = None
                                self.set_reason = None
                                self.start_time = Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.StartTime()
                                self.start_time.parent = self
                                self.summary_lsa_metric = None
                                self.trigger = YList()
                                self.trigger.parent = self
                                self.trigger.name = 'trigger'
                                self.unset_reason = None
                                self.unset_time = Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.UnsetTime()
                                self.unset_time.parent = self


                            class UnsetTime(object):
                                """
                                Timestamp (relative to 1970/1/1 00\:00) when stub
                                router condition was cleared
                                
                                .. attribute:: nanosecond
                                
                                	Nano seconds 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: second
                                
                                	Seconds 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.nanosecond = None
                                    self.second = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:unset-time'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.nanosecond is not None:
                                        return True

                                    if self.second is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.UnsetTime']['meta_info']


                            class StartTime(object):
                                """
                                Timestamp (relative to 1970/1/1 00\:00) when stub
                                router mode was activated
                                
                                .. attribute:: nanosecond
                                
                                	Nano seconds 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: second
                                
                                	Seconds 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.nanosecond = None
                                    self.second = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:start-time'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.nanosecond is not None:
                                        return True

                                    if self.second is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.StartTime']['meta_info']


                            class AbrResumeTime(object):
                                """
                                Timestamp (relative to 1970/1/1 00\:00) when ABR
                                duties were resumed
                                
                                .. attribute:: nanosecond
                                
                                	Nano seconds 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: second
                                
                                	Seconds 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.nanosecond = None
                                    self.second = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:abr-resume-time'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.nanosecond is not None:
                                        return True

                                    if self.second is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.AbrResumeTime']['meta_info']


                            class Trigger(object):
                                """
                                Triggers for entering stub router mode
                                
                                .. attribute:: start_time
                                
                                	Timestamp (relative to 1970/1/1 00\:00) when stub router mode was activated
                                	**type**\:  :py:class:`StartTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.Trigger.StartTime>`
                                
                                .. attribute:: time
                                
                                	Time (in seconds) to stay in stub router mode
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: trigger
                                
                                	Stub Router Trigger type
                                	**type**\:  :py:class:`StubRouterTriggerEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterTriggerEnum>`
                                
                                .. attribute:: unset_reason
                                
                                	Reason for clearing stub router condition
                                	**type**\:  :py:class:`StubRouterExitReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.StubRouterExitReasonEnum>`
                                
                                .. attribute:: unset_time
                                
                                	Timestamp (relative to 1970/1/1 00\:00) when stub router condition was cleared
                                	**type**\:  :py:class:`UnsetTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.Trigger.UnsetTime>`
                                
                                .. attribute:: wait_for_bgp
                                
                                	If true, stub router is terminated when BGP converges
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.start_time = Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.Trigger.StartTime()
                                    self.start_time.parent = self
                                    self.time = None
                                    self.trigger = None
                                    self.unset_reason = None
                                    self.unset_time = Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.Trigger.UnsetTime()
                                    self.unset_time.parent = self
                                    self.wait_for_bgp = None


                                class UnsetTime(object):
                                    """
                                    Timestamp (relative to 1970/1/1 00\:00) when stub
                                    router condition was cleared
                                    
                                    .. attribute:: nanosecond
                                    
                                    	Nano seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: second
                                    
                                    	Seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.nanosecond = None
                                        self.second = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:unset-time'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.nanosecond is not None:
                                            return True

                                        if self.second is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.Trigger.UnsetTime']['meta_info']


                                class StartTime(object):
                                    """
                                    Timestamp (relative to 1970/1/1 00\:00) when stub
                                    router mode was activated
                                    
                                    .. attribute:: nanosecond
                                    
                                    	Nano seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: second
                                    
                                    	Seconds 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.nanosecond = None
                                        self.second = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:start-time'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.nanosecond is not None:
                                            return True

                                        if self.second is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.Trigger.StartTime']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:trigger'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.start_time is not None and self.start_time._has_data():
                                        return True

                                    if self.time is not None:
                                        return True

                                    if self.trigger is not None:
                                        return True

                                    if self.unset_reason is not None:
                                        return True

                                    if self.unset_time is not None and self.unset_time._has_data():
                                        return True

                                    if self.wait_for_bgp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter.Trigger']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:stub-router'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.abr_off_reason is not None:
                                    return True

                                if self.abr_resume_time is not None and self.abr_resume_time._has_data():
                                    return True

                                if self.active is not None:
                                    return True

                                if self.external_lsa_metric is not None:
                                    return True

                                if self.include_stub_links is not None:
                                    return True

                                if self.mode is not None:
                                    return True

                                if self.remaining_time is not None:
                                    return True

                                if self.set_reason is not None:
                                    return True

                                if self.start_time is not None and self.start_time._has_data():
                                    return True

                                if self.summary_lsa_metric is not None:
                                    return True

                                if self.trigger is not None:
                                    for child_ref in self.trigger:
                                        if child_ref._has_data():
                                            return True

                                if self.unset_reason is not None:
                                    return True

                                if self.unset_time is not None and self.unset_time._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.StubRouter']['meta_info']


                        class IpfrrTiebreakers(object):
                            """
                            IPFRR\-Tiebreakers list
                            
                            .. attribute:: tiebreaker_index
                            
                            	Tiebreaker Index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tiebreaker_type
                            
                            	Tiebreaker Type
                            	**type**\:  :py:class:`IpfrrTbrkrEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.IpfrrTbrkrEnum>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.tiebreaker_index = None
                                self.tiebreaker_type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:ipfrr-tiebreakers'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.tiebreaker_index is not None:
                                    return True

                                if self.tiebreaker_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3.IpfrrTiebreakers']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:ospfv3'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.areas is not None:
                                return True

                            if self.as_dc_bitless_ls_as is not None:
                                return True

                            if self.as_do_not_age_ls_as is not None:
                                return True

                            if self.as_ls_as is not None:
                                return True

                            if self.as_lsa_flood_list_length is not None:
                                return True

                            if self.context_name is not None:
                                return True

                            if self.default_metric is not None:
                                return True

                            if self.default_metric_type is not None:
                                return True

                            if self.default_policy_name is not None:
                                return True

                            if self.default_tag is not None:
                                return True

                            if self.domain_id is not None and self.domain_id._has_data():
                                return True

                            if self.grace_resync_time is not None:
                                return True

                            if self.graceful_shutdown_state is not None:
                                return True

                            if self.ipfrr_tiebreakers is not None:
                                for child_ref in self.ipfrr_tiebreakers:
                                    if child_ref._has_data():
                                        return True

                            if self.is_area_border_router is not None:
                                return True

                            if self.is_as_border_router is not None:
                                return True

                            if self.is_auto_cost is not None:
                                return True

                            if self.is_default_always is not None:
                                return True

                            if self.is_default_originated is not None:
                                return True

                            if self.is_default_policy is not None:
                                return True

                            if self.is_grace_restart_enabled is not None:
                                return True

                            if self.is_nsr_enabled is not None:
                                return True

                            if self.is_nsr_switchover_on_restart is not None:
                                return True

                            if self.is_opaque_capable is not None:
                                return True

                            if self.is_role_standby is not None:
                                return True

                            if self.is_router_id_stalled is not None:
                                return True

                            if self.last_nsf_time is not None:
                                return True

                            if self.lsa_flood_pacing_interval is not None:
                                return True

                            if self.lsa_group_interval is not None:
                                return True

                            if self.lsa_hold_time is not None:
                                return True

                            if self.lsa_maximum_time is not None:
                                return True

                            if self.lsa_retransmission_pacing_interval is not None:
                                return True

                            if self.lsa_start_time is not None:
                                return True

                            if self.maximum_interfaces is not None:
                                return True

                            if self.maximum_paths is not None:
                                return True

                            if self.metric is not None:
                                return True

                            if self.minimum_lsa_interval is not None:
                                return True

                            if self.normal_areas is not None:
                                return True

                            if self.nssa_areas is not None:
                                return True

                            if self.opaque_lsa_checksum is not None:
                                return True

                            if self.opaque_lsas is not None:
                                return True

                            if self.redistribution_limit is not None:
                                return True

                            if self.redistribution_threshold is not None:
                                return True

                            if self.reference_bandwidth is not None:
                                return True

                            if self.role is not None:
                                return True

                            if self.router_id is not None:
                                return True

                            if self.snmp_trap_enabled is not None:
                                return True

                            if self.spf_hold_time is not None:
                                return True

                            if self.spf_maximum_time is not None:
                                return True

                            if self.spf_start_time is not None:
                                return True

                            if self.stub_areas is not None:
                                return True

                            if self.stub_router is not None:
                                for child_ref in self.stub_router:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Ospfv3']['meta_info']


                    class Route(object):
                        """
                        OSPFv3 route summary
                        
                        .. attribute:: extern_one_route
                        
                        	Extern 1 route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: extern_two_route
                        
                        	Extern 2 route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: inter_area_route
                        
                        	Inter route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: intra_area_route
                        
                        	Intra route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: nssa_one_route
                        
                        	NSSA 1 route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: nssa_two_route
                        
                        	NSSA 2 route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: redistribution_route
                        
                        	Redistribution route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: route_connected
                        
                        	Route connected 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: route_id
                        
                        	Route summary of a route ID 
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: total_received_route
                        
                        	Total route received summary
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_sent_route
                        
                        	Total route summary 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.extern_one_route = None
                            self.extern_two_route = None
                            self.inter_area_route = None
                            self.intra_area_route = None
                            self.nssa_one_route = None
                            self.nssa_two_route = None
                            self.redistribution_route = None
                            self.route_connected = None
                            self.route_id = None
                            self.total_received_route = None
                            self.total_sent_route = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:route'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.extern_one_route is not None:
                                return True

                            if self.extern_two_route is not None:
                                return True

                            if self.inter_area_route is not None:
                                return True

                            if self.intra_area_route is not None:
                                return True

                            if self.nssa_one_route is not None:
                                return True

                            if self.nssa_two_route is not None:
                                return True

                            if self.redistribution_route is not None:
                                return True

                            if self.route_connected is not None:
                                return True

                            if self.route_id is not None:
                                return True

                            if self.total_received_route is not None:
                                return True

                            if self.total_sent_route is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary.Route']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.ospfv3 is not None and self.ospfv3._has_data():
                            return True

                        if self.protocol is not None and self.protocol._has_data():
                            return True

                        if self.route is not None and self.route._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.Summary']['meta_info']


                class RetransmissionListProcessTable(object):
                    """
                    OSPFv3 retransmission list information table for
                    all areas
                    
                    .. attribute:: retransmission
                    
                    	OSPFv3 retransmission list information
                    	**type**\: list of  :py:class:`Retransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable.Retransmission>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.retransmission = YList()
                        self.retransmission.parent = self
                        self.retransmission.name = 'retransmission'


                    class Retransmission(object):
                        """
                        OSPFv3 retransmission list information
                        
                        .. attribute:: interface_name
                        
                        	Interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_retransmission_sham_link
                        
                        	If true, sham link is retransmitted 
                        	**type**\:  bool
                        
                        .. attribute:: is_retransmissionvirtual_link
                        
                        	If true, virtual link is retransmitted 
                        	**type**\:  bool
                        
                        .. attribute:: neighbor_address
                        
                        	Neighbor address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: retransmission_area_db
                        
                        	List of area scope entries
                        	**type**\: list of  :py:class:`RetransmissionAreaDb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable.Retransmission.RetransmissionAreaDb>`
                        
                        .. attribute:: retransmission_asdb
                        
                        	List of AS scope entries
                        	**type**\: list of  :py:class:`RetransmissionAsdb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable.Retransmission.RetransmissionAsdb>`
                        
                        .. attribute:: retransmission_length
                        
                        	Retransmission queue length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: retransmission_neighbor_address
                        
                        	Neighbor IP address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: retransmission_sham_link_id
                        
                        	Retransmission sham link ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: retransmission_timer
                        
                        	Amount of time remaining on retransmission timer (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: retransmissionvirtual_link_db
                        
                        	List of virtual link scope entries 
                        	**type**\: list of  :py:class:`RetransmissionvirtualLinkDb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable.Retransmission.RetransmissionvirtualLinkDb>`
                        
                        .. attribute:: retransmissionvirtual_link_id
                        
                        	Retransmission virtual link ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_retransmission_sham_link = None
                            self.is_retransmissionvirtual_link = None
                            self.neighbor_address = None
                            self.retransmission_area_db = YList()
                            self.retransmission_area_db.parent = self
                            self.retransmission_area_db.name = 'retransmission_area_db'
                            self.retransmission_asdb = YList()
                            self.retransmission_asdb.parent = self
                            self.retransmission_asdb.name = 'retransmission_asdb'
                            self.retransmission_length = None
                            self.retransmission_neighbor_address = None
                            self.retransmission_sham_link_id = None
                            self.retransmission_timer = None
                            self.retransmissionvirtual_link_db = YList()
                            self.retransmissionvirtual_link_db.parent = self
                            self.retransmissionvirtual_link_db.name = 'retransmissionvirtual_link_db'
                            self.retransmissionvirtual_link_id = None


                        class RetransmissionvirtualLinkDb(object):
                            """
                            List of virtual link scope entries 
                            
                            .. attribute:: header_advertising_router
                            
                            	Router ID of the advertising router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_age
                            
                            	Age of the LSA (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: header_lsa_id
                            
                            	LSA ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                            
                            .. attribute:: header_sequence_number
                            
                            	Current LSA sequence number
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header_advertising_router = None
                                self.header_lsa_age = None
                                self.header_lsa_id = None
                                self.header_lsa_type = None
                                self.header_sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmissionvirtual-link-db'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header_advertising_router is not None:
                                    return True

                                if self.header_lsa_age is not None:
                                    return True

                                if self.header_lsa_id is not None:
                                    return True

                                if self.header_lsa_type is not None:
                                    return True

                                if self.header_sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable.Retransmission.RetransmissionvirtualLinkDb']['meta_info']


                        class RetransmissionAreaDb(object):
                            """
                            List of area scope entries
                            
                            .. attribute:: header_advertising_router
                            
                            	Router ID of the advertising router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_age
                            
                            	Age of the LSA (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: header_lsa_id
                            
                            	LSA ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                            
                            .. attribute:: header_sequence_number
                            
                            	Current LSA sequence number
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header_advertising_router = None
                                self.header_lsa_age = None
                                self.header_lsa_id = None
                                self.header_lsa_type = None
                                self.header_sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-area-db'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header_advertising_router is not None:
                                    return True

                                if self.header_lsa_age is not None:
                                    return True

                                if self.header_lsa_id is not None:
                                    return True

                                if self.header_lsa_type is not None:
                                    return True

                                if self.header_sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable.Retransmission.RetransmissionAreaDb']['meta_info']


                        class RetransmissionAsdb(object):
                            """
                            List of AS scope entries
                            
                            .. attribute:: header_advertising_router
                            
                            	Router ID of the advertising router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_age
                            
                            	Age of the LSA (seconds)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: header_lsa_id
                            
                            	LSA ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: header_lsa_type
                            
                            	LSA type
                            	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                            
                            .. attribute:: header_sequence_number
                            
                            	Current LSA sequence number
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header_advertising_router = None
                                self.header_lsa_age = None
                                self.header_lsa_id = None
                                self.header_lsa_type = None
                                self.header_sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-asdb'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header_advertising_router is not None:
                                    return True

                                if self.header_lsa_age is not None:
                                    return True

                                if self.header_lsa_id is not None:
                                    return True

                                if self.header_lsa_type is not None:
                                    return True

                                if self.header_sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable.Retransmission.RetransmissionAsdb']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.is_retransmission_sham_link is not None:
                                return True

                            if self.is_retransmissionvirtual_link is not None:
                                return True

                            if self.neighbor_address is not None:
                                return True

                            if self.retransmission_area_db is not None:
                                for child_ref in self.retransmission_area_db:
                                    if child_ref._has_data():
                                        return True

                            if self.retransmission_asdb is not None:
                                for child_ref in self.retransmission_asdb:
                                    if child_ref._has_data():
                                        return True

                            if self.retransmission_length is not None:
                                return True

                            if self.retransmission_neighbor_address is not None:
                                return True

                            if self.retransmission_sham_link_id is not None:
                                return True

                            if self.retransmission_timer is not None:
                                return True

                            if self.retransmissionvirtual_link_db is not None:
                                for child_ref in self.retransmissionvirtual_link_db:
                                    if child_ref._has_data():
                                        return True

                            if self.retransmissionvirtual_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable.Retransmission']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:retransmission-list-process-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.retransmission is not None:
                            for child_ref in self.retransmission:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.RetransmissionListProcessTable']['meta_info']


                class DatabaseAreas(object):
                    """
                    Database area table
                    
                    .. attribute:: database_area
                    
                    	Area information
                    	**type**\: list of  :py:class:`DatabaseArea <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.database_area = YList()
                        self.database_area.parent = self
                        self.database_area.name = 'database_area'


                    class DatabaseArea(object):
                        """
                        Area information
                        
                        .. attribute:: area_id  <key>
                        
                        	Area ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: database_grace_lsa_s
                        
                        	Database Grace Information
                        	**type**\:  :py:class:`DatabaseGraceLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS>`
                        
                        .. attribute:: database_int_grace_lsa_s
                        
                        	Internal Grace LSA information
                        	**type**\:  :py:class:`DatabaseIntGraceLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS>`
                        
                        .. attribute:: database_int_inter_area_prefix_lsas
                        
                        	Internal Inter\-area Prefix LSA information
                        	**type**\:  :py:class:`DatabaseIntInterAreaPrefixLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas>`
                        
                        .. attribute:: database_int_inter_area_router_lsas
                        
                        	Internal Inter\-area Router LSA information
                        	**type**\:  :py:class:`DatabaseIntInterAreaRouterLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas>`
                        
                        .. attribute:: database_int_link_lsa_s
                        
                        	Internal Link  LSA information
                        	**type**\:  :py:class:`DatabaseIntLinkLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS>`
                        
                        .. attribute:: database_int_network_lsas
                        
                        	Internal Network LSA information
                        	**type**\:  :py:class:`DatabaseIntNetworkLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas>`
                        
                        .. attribute:: database_int_nssa_lsas
                        
                        	Internal NSSA LSA information
                        	**type**\:  :py:class:`DatabaseIntNssaLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas>`
                        
                        .. attribute:: database_int_prefix_lsas
                        
                        	Internal Prefix LSA information
                        	**type**\:  :py:class:`DatabaseIntPrefixLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas>`
                        
                        .. attribute:: database_int_router_lsas
                        
                        	Internal database Router LSA information
                        	**type**\:  :py:class:`DatabaseIntRouterLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas>`
                        
                        .. attribute:: database_int_unknown_area_lsas
                        
                        	Internal Unknown Area LSA information
                        	**type**\:  :py:class:`DatabaseIntUnknownAreaLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas>`
                        
                        .. attribute:: database_int_unknown_link_lsa_s
                        
                        	Internal Unknown Link  LSA information
                        	**type**\:  :py:class:`DatabaseIntUnknownLinkLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS>`
                        
                        .. attribute:: database_int_unknown_lsas
                        
                        	Internal Unknown LSA information
                        	**type**\:  :py:class:`DatabaseIntUnknownLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas>`
                        
                        .. attribute:: database_inter_area_prefix_lsas
                        
                        	Database Iner\-Area Prefix information
                        	**type**\:  :py:class:`DatabaseInterAreaPrefixLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas>`
                        
                        .. attribute:: database_inter_area_router_lsas
                        
                        	Database Iner\-Area Router information
                        	**type**\:  :py:class:`DatabaseInterAreaRouterLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas>`
                        
                        .. attribute:: database_link_lsa_s
                        
                        	Database Link Information
                        	**type**\:  :py:class:`DatabaseLinkLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS>`
                        
                        .. attribute:: database_lsas
                        
                        	Database LSA information
                        	**type**\:  :py:class:`DatabaseLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas>`
                        
                        .. attribute:: database_network_lsas
                        
                        	Database Network Information
                        	**type**\:  :py:class:`DatabaseNetworkLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas>`
                        
                        .. attribute:: database_nssa_lsas
                        
                        	Database NSSA Information
                        	**type**\:  :py:class:`DatabaseNssaLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas>`
                        
                        .. attribute:: database_prefix_lsas
                        
                        	Database Prefix Information
                        	**type**\:  :py:class:`DatabasePrefixLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas>`
                        
                        .. attribute:: database_router_lsas
                        
                        	Database Router LSA information
                        	**type**\:  :py:class:`DatabaseRouterLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas>`
                        
                        .. attribute:: database_unknown_area_lsas
                        
                        	Database Area Unknown Information
                        	**type**\:  :py:class:`DatabaseUnknownAreaLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas>`
                        
                        .. attribute:: database_unknown_link_lsa_s
                        
                        	Database Unknown Link Information
                        	**type**\:  :py:class:`DatabaseUnknownLinkLsaS <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS>`
                        
                        .. attribute:: database_unknown_lsas
                        
                        	Database Unknown Information
                        	**type**\:  :py:class:`DatabaseUnknownLsas <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area_id = None
                            self.database_grace_lsa_s = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS()
                            self.database_grace_lsa_s.parent = self
                            self.database_int_grace_lsa_s = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS()
                            self.database_int_grace_lsa_s.parent = self
                            self.database_int_inter_area_prefix_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas()
                            self.database_int_inter_area_prefix_lsas.parent = self
                            self.database_int_inter_area_router_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas()
                            self.database_int_inter_area_router_lsas.parent = self
                            self.database_int_link_lsa_s = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS()
                            self.database_int_link_lsa_s.parent = self
                            self.database_int_network_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas()
                            self.database_int_network_lsas.parent = self
                            self.database_int_nssa_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas()
                            self.database_int_nssa_lsas.parent = self
                            self.database_int_prefix_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas()
                            self.database_int_prefix_lsas.parent = self
                            self.database_int_router_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas()
                            self.database_int_router_lsas.parent = self
                            self.database_int_unknown_area_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas()
                            self.database_int_unknown_area_lsas.parent = self
                            self.database_int_unknown_link_lsa_s = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS()
                            self.database_int_unknown_link_lsa_s.parent = self
                            self.database_int_unknown_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas()
                            self.database_int_unknown_lsas.parent = self
                            self.database_inter_area_prefix_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas()
                            self.database_inter_area_prefix_lsas.parent = self
                            self.database_inter_area_router_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas()
                            self.database_inter_area_router_lsas.parent = self
                            self.database_link_lsa_s = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS()
                            self.database_link_lsa_s.parent = self
                            self.database_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas()
                            self.database_lsas.parent = self
                            self.database_network_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas()
                            self.database_network_lsas.parent = self
                            self.database_nssa_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas()
                            self.database_nssa_lsas.parent = self
                            self.database_prefix_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas()
                            self.database_prefix_lsas.parent = self
                            self.database_router_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas()
                            self.database_router_lsas.parent = self
                            self.database_unknown_area_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas()
                            self.database_unknown_area_lsas.parent = self
                            self.database_unknown_link_lsa_s = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS()
                            self.database_unknown_link_lsa_s.parent = self
                            self.database_unknown_lsas = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas()
                            self.database_unknown_lsas.parent = self


                        class DatabaseLsas(object):
                            """
                            Database LSA information
                            
                            .. attribute:: database_lsa
                            
                            	Database LSA information
                            	**type**\: list of  :py:class:`DatabaseLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_lsa = YList()
                                self.database_lsa.parent = self
                                self.database_lsa.name = 'database_lsa'


                            class DatabaseLsa(object):
                                """
                                Database LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name
                                
                                	LSA interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: links
                                
                                	Number of links
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaHeader>`
                                
                                .. attribute:: lsa_router_id
                                
                                	LSA router ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: prefix
                                
                                	OSPFv3 address Prefix 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: reference_lsa_id
                                
                                	Reference LSA ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: reference_type
                                
                                	Reference type 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: router_la_bits
                                
                                	Router LA bits 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sham_link_id
                                
                                	Sham link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.links = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_router_id = None
                                    self.lsa_type = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.reference_lsa_id = None
                                    self.reference_type = None
                                    self.router_la_bits = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.links is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_router_id is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.reference_lsa_id is not None:
                                        return True

                                    if self.reference_type is not None:
                                        return True

                                    if self.router_la_bits is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas.DatabaseLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_lsa is not None:
                                    for child_ref in self.database_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLsas']['meta_info']


                        class DatabaseIntInterAreaPrefixLsas(object):
                            """
                            Internal Inter\-area Prefix LSA information
                            
                            .. attribute:: database_int_inter_area_prefix_lsa
                            
                            	Internal database Inter\-Area Prefix LSA information
                            	**type**\: list of  :py:class:`DatabaseIntInterAreaPrefixLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_inter_area_prefix_lsa = YList()
                                self.database_int_inter_area_prefix_lsa.parent = self
                                self.database_int_inter_area_prefix_lsa.name = 'database_int_inter_area_prefix_lsa'


                            class DatabaseIntInterAreaPrefixLsa(object):
                                """
                                Internal database Inter\-Area Prefix LSA
                                information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA Information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: prefix_length_xr
                                
                                	Prefix length 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: prefix_xr
                                
                                	LSA address prefix 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: priority
                                
                                	Prefix priority
                                	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.prefix_length_xr = None
                                    self.prefix_xr = None
                                    self.priority = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA Information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-inter-area-prefix-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.prefix_length_xr is not None:
                                        return True

                                    if self.prefix_xr is not None:
                                        return True

                                    if self.priority is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas.DatabaseIntInterAreaPrefixLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-inter-area-prefix-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_inter_area_prefix_lsa is not None:
                                    for child_ref in self.database_int_inter_area_prefix_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaPrefixLsas']['meta_info']


                        class DatabaseIntUnknownAreaLsas(object):
                            """
                            Internal Unknown Area LSA information
                            
                            .. attribute:: database_int_unknown_area_lsa
                            
                            	Internal database Unknown LSA information
                            	**type**\: list of  :py:class:`DatabaseIntUnknownAreaLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_unknown_area_lsa = YList()
                                self.database_int_unknown_area_lsa.parent = self
                                self.database_int_unknown_area_lsa.name = 'database_int_unknown_area_lsa'


                            class DatabaseIntUnknownAreaLsa(object):
                                """
                                Internal database Unknown LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name_xr
                                
                                	LSA interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: sham_link_id
                                
                                	Shamlink ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name_xr = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-area-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name_xr is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas.DatabaseIntUnknownAreaLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-area-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_unknown_area_lsa is not None:
                                    for child_ref in self.database_int_unknown_area_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownAreaLsas']['meta_info']


                        class DatabaseIntLinkLsaS(object):
                            """
                            Internal Link  LSA information
                            
                            .. attribute:: database_int_link_lsa
                            
                            	Internal database Link LSA information
                            	**type**\: list of  :py:class:`DatabaseIntLinkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_link_lsa = YList()
                                self.database_int_link_lsa.parent = self
                                self.database_int_link_lsa.name = 'database_int_link_lsa'


                            class DatabaseIntLinkLsa(object):
                                """
                                Internal database Link LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: interface_name_xr
                                
                                	LSA interface handle
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaHeader>`
                                
                                .. attribute:: lsa_link_local
                                
                                	LSA link local 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: prefix
                                
                                	OSPFv3 prefix 
                                	**type**\: list of  :py:class:`Prefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.Prefix>`
                                
                                .. attribute:: router_priority
                                
                                	Router priority 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sham_link_id
                                
                                	Sham link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name = None
                                    self.interface_name_xr = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_link_local = None
                                    self.lsa_type = None
                                    self.prefix = YList()
                                    self.prefix.parent = self
                                    self.prefix.name = 'prefix'
                                    self.router_priority = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.LsaDetail']['meta_info']


                                class Prefix(object):
                                    """
                                    OSPFv3 prefix 
                                    
                                    .. attribute:: ospfv3_prefix_length
                                    
                                    	OSPFv3 prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ospfv3_prefix_metric
                                    
                                    	OSPFv3 prefix metric 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: ospfv3_prefix_options
                                    
                                    	OSPFv3 prefix options 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: priority
                                    
                                    	Prefix priority
                                    	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ospfv3_prefix_length = None
                                        self.ospfv3_prefix_metric = None
                                        self.ospfv3_prefix_options = None
                                        self.prefix = None
                                        self.priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:prefix'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ospfv3_prefix_length is not None:
                                            return True

                                        if self.ospfv3_prefix_metric is not None:
                                            return True

                                        if self.ospfv3_prefix_options is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa.Prefix']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-link-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name is not None:
                                        return True

                                    if self.interface_name_xr is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_link_local is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.prefix is not None:
                                        for child_ref in self.prefix:
                                            if child_ref._has_data():
                                                return True

                                    if self.router_priority is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS.DatabaseIntLinkLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-link-lsa-s'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_link_lsa is not None:
                                    for child_ref in self.database_int_link_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntLinkLsaS']['meta_info']


                        class DatabaseIntInterAreaRouterLsas(object):
                            """
                            Internal Inter\-area Router LSA information
                            
                            .. attribute:: database_int_inter_area_router_lsa
                            
                            	Internal database Inter\-Area Router LSA information
                            	**type**\: list of  :py:class:`DatabaseIntInterAreaRouterLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_inter_area_router_lsa = YList()
                                self.database_int_inter_area_router_lsa.parent = self
                                self.database_int_inter_area_router_lsa.name = 'database_int_inter_area_router_lsa'


                            class DatabaseIntInterAreaRouterLsa(object):
                                """
                                Internal database Inter\-Area Router LSA
                                information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: destination_router
                                
                                	Destination Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaHeader>`
                                
                                .. attribute:: lsa_router_id
                                
                                	LSA router ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.destination_router = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_router_id = None
                                    self.lsa_type = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-inter-area-router-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.destination_router is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_router_id is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas.DatabaseIntInterAreaRouterLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-inter-area-router-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_inter_area_router_lsa is not None:
                                    for child_ref in self.database_int_inter_area_router_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntInterAreaRouterLsas']['meta_info']


                        class DatabaseUnknownAreaLsas(object):
                            """
                            Database Area Unknown Information
                            
                            .. attribute:: database_unknown_area_lsa
                            
                            	Database Unknown LSA information
                            	**type**\: list of  :py:class:`DatabaseUnknownAreaLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_unknown_area_lsa = YList()
                                self.database_unknown_area_lsa.parent = self
                                self.database_unknown_area_lsa.name = 'database_unknown_area_lsa'


                            class DatabaseUnknownAreaLsa(object):
                                """
                                Database Unknown LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name_xr
                                
                                	LSA interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: sham_link_id
                                
                                	Shamlink ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name_xr = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-area-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name_xr is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas.DatabaseUnknownAreaLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-area-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_unknown_area_lsa is not None:
                                    for child_ref in self.database_unknown_area_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownAreaLsas']['meta_info']


                        class DatabaseNssaLsas(object):
                            """
                            Database NSSA Information
                            
                            .. attribute:: database_nssa_lsa
                            
                            	Database NSSA LSA information
                            	**type**\: list of  :py:class:`DatabaseNssaLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_nssa_lsa = YList()
                                self.database_nssa_lsa.parent = self
                                self.database_nssa_lsa.name = 'database_nssa_lsa'


                            class DatabaseNssaLsa(object):
                                """
                                Database NSSA LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: external_tag
                                
                                	Route Tag
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: forwarding_address
                                
                                	Forwarding Address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: is_forwarding_address_set
                                
                                	If true, forwarding address is set 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA Information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: metric_type
                                
                                	Metric type 
                                	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                                
                                .. attribute:: prefix_length_xr
                                
                                	Prefix length 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: prefix_xr
                                
                                	IPV6 address prefix 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: priority
                                
                                	Prefix priority
                                	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                
                                .. attribute:: tos_cost
                                
                                	Type of service cost metric 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.external_tag = None
                                    self.forwarding_address = None
                                    self.is_forwarding_address_set = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.metric_type = None
                                    self.prefix_length_xr = None
                                    self.prefix_xr = None
                                    self.priority = None
                                    self.tos_cost = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA Information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-nssa-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.external_tag is not None:
                                        return True

                                    if self.forwarding_address is not None:
                                        return True

                                    if self.is_forwarding_address_set is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.metric_type is not None:
                                        return True

                                    if self.prefix_length_xr is not None:
                                        return True

                                    if self.prefix_xr is not None:
                                        return True

                                    if self.priority is not None:
                                        return True

                                    if self.tos_cost is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas.DatabaseNssaLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-nssa-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_nssa_lsa is not None:
                                    for child_ref in self.database_nssa_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNssaLsas']['meta_info']


                        class DatabaseIntUnknownLsas(object):
                            """
                            Internal Unknown LSA information
                            
                            .. attribute:: database_int_unknown_lsa
                            
                            	Internal database Unknown LSA information
                            	**type**\: list of  :py:class:`DatabaseIntUnknownLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_unknown_lsa = YList()
                                self.database_int_unknown_lsa.parent = self
                                self.database_int_unknown_lsa.name = 'database_int_unknown_lsa'


                            class DatabaseIntUnknownLsa(object):
                                """
                                Internal database Unknown LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name_xr
                                
                                	LSA interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: sham_link_id
                                
                                	Shamlink ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name_xr = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name_xr is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas.DatabaseIntUnknownLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_unknown_lsa is not None:
                                    for child_ref in self.database_int_unknown_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLsas']['meta_info']


                        class DatabaseIntNssaLsas(object):
                            """
                            Internal NSSA LSA information
                            
                            .. attribute:: database_int_nssa_lsa
                            
                            	Internal database NSSA LSA information
                            	**type**\: list of  :py:class:`DatabaseIntNssaLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_nssa_lsa = YList()
                                self.database_int_nssa_lsa.parent = self
                                self.database_int_nssa_lsa.name = 'database_int_nssa_lsa'


                            class DatabaseIntNssaLsa(object):
                                """
                                Internal database NSSA LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: external_tag
                                
                                	Route Tag
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: forwarding_address
                                
                                	Forwarding Address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: is_forwarding_address_set
                                
                                	If true, forwarding address is set 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA Information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: metric_type
                                
                                	Metric type 
                                	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                                
                                .. attribute:: prefix_length_xr
                                
                                	Prefix length 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: prefix_xr
                                
                                	IPV6 address prefix 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: priority
                                
                                	Prefix priority
                                	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                
                                .. attribute:: tos_cost
                                
                                	Type of service cost metric 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.external_tag = None
                                    self.forwarding_address = None
                                    self.is_forwarding_address_set = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.metric_type = None
                                    self.prefix_length_xr = None
                                    self.prefix_xr = None
                                    self.priority = None
                                    self.tos_cost = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA Information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-nssa-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.external_tag is not None:
                                        return True

                                    if self.forwarding_address is not None:
                                        return True

                                    if self.is_forwarding_address_set is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.metric_type is not None:
                                        return True

                                    if self.prefix_length_xr is not None:
                                        return True

                                    if self.prefix_xr is not None:
                                        return True

                                    if self.priority is not None:
                                        return True

                                    if self.tos_cost is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas.DatabaseIntNssaLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-nssa-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_nssa_lsa is not None:
                                    for child_ref in self.database_int_nssa_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNssaLsas']['meta_info']


                        class DatabaseIntUnknownLinkLsaS(object):
                            """
                            Internal Unknown Link  LSA information
                            
                            .. attribute:: database_int_unknown_link_lsa
                            
                            	Internal Database Unknown Link LSA information
                            	**type**\: list of  :py:class:`DatabaseIntUnknownLinkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_unknown_link_lsa = YList()
                                self.database_int_unknown_link_lsa.parent = self
                                self.database_int_unknown_link_lsa.name = 'database_int_unknown_link_lsa'


                            class DatabaseIntUnknownLinkLsa(object):
                                """
                                Internal Database Unknown Link LSA
                                information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: interface_name_xr
                                
                                	LSA interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: sham_link_id
                                
                                	Shamlink ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name = None
                                    self.interface_name_xr = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-link-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name is not None:
                                        return True

                                    if self.interface_name_xr is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS.DatabaseIntUnknownLinkLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-unknown-link-lsa-s'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_unknown_link_lsa is not None:
                                    for child_ref in self.database_int_unknown_link_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntUnknownLinkLsaS']['meta_info']


                        class DatabaseInterAreaPrefixLsas(object):
                            """
                            Database Iner\-Area Prefix information
                            
                            .. attribute:: database_inter_area_prefix_lsa
                            
                            	Database Inter\-Area Prefix LSA information
                            	**type**\: list of  :py:class:`DatabaseInterAreaPrefixLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_inter_area_prefix_lsa = YList()
                                self.database_inter_area_prefix_lsa.parent = self
                                self.database_inter_area_prefix_lsa.name = 'database_inter_area_prefix_lsa'


                            class DatabaseInterAreaPrefixLsa(object):
                                """
                                Database Inter\-Area Prefix LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA Information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: prefix_length_xr
                                
                                	Prefix length 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: prefix_xr
                                
                                	LSA address prefix 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: priority
                                
                                	Prefix priority
                                	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.prefix_length_xr = None
                                    self.prefix_xr = None
                                    self.priority = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA Information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-inter-area-prefix-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.prefix_length_xr is not None:
                                        return True

                                    if self.prefix_xr is not None:
                                        return True

                                    if self.priority is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas.DatabaseInterAreaPrefixLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-inter-area-prefix-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_inter_area_prefix_lsa is not None:
                                    for child_ref in self.database_inter_area_prefix_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaPrefixLsas']['meta_info']


                        class DatabaseIntNetworkLsas(object):
                            """
                            Internal Network LSA information
                            
                            .. attribute:: database_int_network_lsa
                            
                            	Internal database Network LSA information
                            	**type**\: list of  :py:class:`DatabaseIntNetworkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_network_lsa = YList()
                                self.database_int_network_lsa.parent = self
                                self.database_int_network_lsa.name = 'database_int_network_lsa'


                            class DatabaseIntNetworkLsa(object):
                                """
                                Internal database Network LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: neighbor_router
                                
                                	Neighbor router list
                                	**type**\:  list of str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.neighbor_router = YLeafList()
                                    self.neighbor_router.parent = self
                                    self.neighbor_router.name = 'neighbor_router'


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-network-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.neighbor_router is not None:
                                        for child in self.neighbor_router:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas.DatabaseIntNetworkLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-network-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_network_lsa is not None:
                                    for child_ref in self.database_int_network_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntNetworkLsas']['meta_info']


                        class DatabaseUnknownLinkLsaS(object):
                            """
                            Database Unknown Link Information
                            
                            .. attribute:: database_unknown_link_lsa
                            
                            	Database Unknown Link LSA information
                            	**type**\: list of  :py:class:`DatabaseUnknownLinkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_unknown_link_lsa = YList()
                                self.database_unknown_link_lsa.parent = self
                                self.database_unknown_link_lsa.name = 'database_unknown_link_lsa'


                            class DatabaseUnknownLinkLsa(object):
                                """
                                Database Unknown Link LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: interface_name_xr
                                
                                	LSA interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: sham_link_id
                                
                                	Shamlink ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name = None
                                    self.interface_name_xr = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-link-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name is not None:
                                        return True

                                    if self.interface_name_xr is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS.DatabaseUnknownLinkLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-link-lsa-s'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_unknown_link_lsa is not None:
                                    for child_ref in self.database_unknown_link_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLinkLsaS']['meta_info']


                        class DatabaseInterAreaRouterLsas(object):
                            """
                            Database Iner\-Area Router information
                            
                            .. attribute:: database_inter_area_router_lsa
                            
                            	Database Inter\-Area Router LSA information
                            	**type**\: list of  :py:class:`DatabaseInterAreaRouterLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_inter_area_router_lsa = YList()
                                self.database_inter_area_router_lsa.parent = self
                                self.database_inter_area_router_lsa.name = 'database_inter_area_router_lsa'


                            class DatabaseInterAreaRouterLsa(object):
                                """
                                Database Inter\-Area Router LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: destination_router
                                
                                	Destination Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaHeader>`
                                
                                .. attribute:: lsa_router_id
                                
                                	LSA router ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.destination_router = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_router_id = None
                                    self.lsa_type = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-inter-area-router-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.destination_router is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_router_id is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas.DatabaseInterAreaRouterLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-inter-area-router-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_inter_area_router_lsa is not None:
                                    for child_ref in self.database_inter_area_router_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseInterAreaRouterLsas']['meta_info']


                        class DatabasePrefixLsas(object):
                            """
                            Database Prefix Information
                            
                            .. attribute:: database_prefix_lsa
                            
                            	Database Network LSA information
                            	**type**\: list of  :py:class:`DatabasePrefixLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_prefix_lsa = YList()
                                self.database_prefix_lsa.parent = self
                                self.database_prefix_lsa.name = 'database_prefix_lsa'


                            class DatabasePrefixLsa(object):
                                """
                                Database Network LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: prefix
                                
                                	OSPFv3 prefix 
                                	**type**\: list of  :py:class:`Prefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.Prefix>`
                                
                                .. attribute:: reference_advertised_router
                                
                                	Reference advertised router 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: reference_lsa_id
                                
                                	Reference LSA ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: reference_type
                                
                                	Reference type
                                	**type**\:  :py:class:`Ospfv3PrefixLsaRefEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3PrefixLsaRefEnum>`
                                
                                .. attribute:: reference_type_xr
                                
                                	Reference type 
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.prefix = YList()
                                    self.prefix.parent = self
                                    self.prefix.name = 'prefix'
                                    self.reference_advertised_router = None
                                    self.reference_lsa_id = None
                                    self.reference_type = None
                                    self.reference_type_xr = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.LsaDetail']['meta_info']


                                class Prefix(object):
                                    """
                                    OSPFv3 prefix 
                                    
                                    .. attribute:: ospfv3_prefix_length
                                    
                                    	OSPFv3 prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ospfv3_prefix_metric
                                    
                                    	OSPFv3 prefix metric 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: ospfv3_prefix_options
                                    
                                    	OSPFv3 prefix options 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: priority
                                    
                                    	Prefix priority
                                    	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ospfv3_prefix_length = None
                                        self.ospfv3_prefix_metric = None
                                        self.ospfv3_prefix_options = None
                                        self.prefix = None
                                        self.priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:prefix'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ospfv3_prefix_length is not None:
                                            return True

                                        if self.ospfv3_prefix_metric is not None:
                                            return True

                                        if self.ospfv3_prefix_options is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa.Prefix']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-prefix-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.prefix is not None:
                                        for child_ref in self.prefix:
                                            if child_ref._has_data():
                                                return True

                                    if self.reference_advertised_router is not None:
                                        return True

                                    if self.reference_lsa_id is not None:
                                        return True

                                    if self.reference_type is not None:
                                        return True

                                    if self.reference_type_xr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas.DatabasePrefixLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-prefix-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_prefix_lsa is not None:
                                    for child_ref in self.database_prefix_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabasePrefixLsas']['meta_info']


                        class DatabaseGraceLsaS(object):
                            """
                            Database Grace Information
                            
                            .. attribute:: database_grace_lsa
                            
                            	Database Grace LSA information
                            	**type**\: list of  :py:class:`DatabaseGraceLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_grace_lsa = YList()
                                self.database_grace_lsa.parent = self
                                self.database_grace_lsa.name = 'database_grace_lsa'


                            class DatabaseGraceLsa(object):
                                """
                                Database Grace LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: grace_period
                                
                                	The grace periord where helper routers should wait before advertising it fully adjacent(s) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: grace_reason
                                
                                	Reason for router restart
                                	**type**\:  :py:class:`Ospfv3GracefulRestartReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3GracefulRestartReasonEnum>`
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.grace_period = None
                                    self.grace_reason = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-grace-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.grace_period is not None:
                                        return True

                                    if self.grace_reason is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS.DatabaseGraceLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-grace-lsa-s'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_grace_lsa is not None:
                                    for child_ref in self.database_grace_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseGraceLsaS']['meta_info']


                        class DatabaseIntPrefixLsas(object):
                            """
                            Internal Prefix LSA information
                            
                            .. attribute:: database_int_prefix_lsa
                            
                            	Internal database Network LSA information
                            	**type**\: list of  :py:class:`DatabaseIntPrefixLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_prefix_lsa = YList()
                                self.database_int_prefix_lsa.parent = self
                                self.database_int_prefix_lsa.name = 'database_int_prefix_lsa'


                            class DatabaseIntPrefixLsa(object):
                                """
                                Internal database Network LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: prefix
                                
                                	OSPFv3 prefix 
                                	**type**\: list of  :py:class:`Prefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.Prefix>`
                                
                                .. attribute:: reference_advertised_router
                                
                                	Reference advertised router 
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: reference_lsa_id
                                
                                	Reference LSA ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: reference_type
                                
                                	Reference type
                                	**type**\:  :py:class:`Ospfv3PrefixLsaRefEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3PrefixLsaRefEnum>`
                                
                                .. attribute:: reference_type_xr
                                
                                	Reference type 
                                	**type**\:  :py:class:`Ospfv3Lsa1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3Lsa1Enum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.prefix = YList()
                                    self.prefix.parent = self
                                    self.prefix.name = 'prefix'
                                    self.reference_advertised_router = None
                                    self.reference_lsa_id = None
                                    self.reference_type = None
                                    self.reference_type_xr = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.LsaDetail']['meta_info']


                                class Prefix(object):
                                    """
                                    OSPFv3 prefix 
                                    
                                    .. attribute:: ospfv3_prefix_length
                                    
                                    	OSPFv3 prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ospfv3_prefix_metric
                                    
                                    	OSPFv3 prefix metric 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: ospfv3_prefix_options
                                    
                                    	OSPFv3 prefix options 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: priority
                                    
                                    	Prefix priority
                                    	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ospfv3_prefix_length = None
                                        self.ospfv3_prefix_metric = None
                                        self.ospfv3_prefix_options = None
                                        self.prefix = None
                                        self.priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:prefix'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ospfv3_prefix_length is not None:
                                            return True

                                        if self.ospfv3_prefix_metric is not None:
                                            return True

                                        if self.ospfv3_prefix_options is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa.Prefix']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-prefix-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.prefix is not None:
                                        for child_ref in self.prefix:
                                            if child_ref._has_data():
                                                return True

                                    if self.reference_advertised_router is not None:
                                        return True

                                    if self.reference_lsa_id is not None:
                                        return True

                                    if self.reference_type is not None:
                                        return True

                                    if self.reference_type_xr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas.DatabaseIntPrefixLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-prefix-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_prefix_lsa is not None:
                                    for child_ref in self.database_int_prefix_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntPrefixLsas']['meta_info']


                        class DatabaseIntGraceLsaS(object):
                            """
                            Internal Grace LSA information
                            
                            .. attribute:: database_int_grace_lsa
                            
                            	Internal database Grace LSA information
                            	**type**\: list of  :py:class:`DatabaseIntGraceLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_grace_lsa = YList()
                                self.database_int_grace_lsa.parent = self
                                self.database_int_grace_lsa.name = 'database_int_grace_lsa'


                            class DatabaseIntGraceLsa(object):
                                """
                                Internal database Grace LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: grace_period
                                
                                	The grace periord where helper routers should wait before advertising it fully adjacent(s) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: grace_reason
                                
                                	Reason for router restart
                                	**type**\:  :py:class:`Ospfv3GracefulRestartReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3GracefulRestartReasonEnum>`
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.grace_period = None
                                    self.grace_reason = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-grace-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.grace_period is not None:
                                        return True

                                    if self.grace_reason is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS.DatabaseIntGraceLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-grace-lsa-s'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_grace_lsa is not None:
                                    for child_ref in self.database_int_grace_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntGraceLsaS']['meta_info']


                        class DatabaseUnknownLsas(object):
                            """
                            Database Unknown Information
                            
                            .. attribute:: database_unknown_lsa
                            
                            	Database Unknown LSA information
                            	**type**\: list of  :py:class:`DatabaseUnknownLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_unknown_lsa = YList()
                                self.database_unknown_lsa.parent = self
                                self.database_unknown_lsa.name = 'database_unknown_lsa'


                            class DatabaseUnknownLsa(object):
                                """
                                Database Unknown LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name_xr
                                
                                	LSA interface name 
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link 
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link 
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: sham_link_id
                                
                                	Shamlink ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name_xr = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name_xr is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas.DatabaseUnknownLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_unknown_lsa is not None:
                                    for child_ref in self.database_unknown_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseUnknownLsas']['meta_info']


                        class DatabaseRouterLsas(object):
                            """
                            Database Router LSA information
                            
                            .. attribute:: database_router_lsa
                            
                            	Database Router LSA information
                            	**type**\: list of  :py:class:`DatabaseRouterLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_router_lsa = YList()
                                self.database_router_lsa.parent = self
                                self.database_router_lsa.name = 'database_router_lsa'


                            class DatabaseRouterLsa(object):
                                """
                                Database Router LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: link
                                
                                	List of links in this LSA
                                	**type**\: list of  :py:class:`Link <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.Link>`
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: router_la_bits
                                
                                	Router LA bits 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: rpf_path
                                
                                	Router LSA Reverse\-Path Forwarding information 
                                	**type**\:  :py:class:`RpfPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.RpfPath>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.link = YList()
                                    self.link.parent = self
                                    self.link.name = 'link'
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.router_la_bits = None
                                    self.rpf_path = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.RpfPath()
                                    self.rpf_path.parent = self


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.LsaDetail']['meta_info']


                                class RpfPath(object):
                                    """
                                    Router LSA Reverse\-Path Forwarding information 
                                    
                                    .. attribute:: interface_name
                                    
                                    	RPF multicast IDB 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: rpf_multicast_next_hop
                                    
                                    	RPF multicast next hop 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.rpf_multicast_next_hop = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:rpf-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.rpf_multicast_next_hop is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.RpfPath']['meta_info']


                                class Link(object):
                                    """
                                    List of links in this LSA
                                    
                                    .. attribute:: link_interface_id
                                    
                                    	LSA link interface ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_metric
                                    
                                    	LSA link metric 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: link_neighbor_interface_id
                                    
                                    	LSA link neighbor interface ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_neighbor_router_id
                                    
                                    	LSA link neigbhor router id 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_type
                                    
                                    	Type of link
                                    	**type**\:  :py:class:`Ospfv3LinkEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LinkEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_interface_id = None
                                        self.link_metric = None
                                        self.link_neighbor_interface_id = None
                                        self.link_neighbor_router_id = None
                                        self.link_type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:link'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_interface_id is not None:
                                            return True

                                        if self.link_metric is not None:
                                            return True

                                        if self.link_neighbor_interface_id is not None:
                                            return True

                                        if self.link_neighbor_router_id is not None:
                                            return True

                                        if self.link_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa.Link']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-router-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.link is not None:
                                        for child_ref in self.link:
                                            if child_ref._has_data():
                                                return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.router_la_bits is not None:
                                        return True

                                    if self.rpf_path is not None and self.rpf_path._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas.DatabaseRouterLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-router-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_router_lsa is not None:
                                    for child_ref in self.database_router_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseRouterLsas']['meta_info']


                        class DatabaseLinkLsaS(object):
                            """
                            Database Link Information
                            
                            .. attribute:: database_link_lsa
                            
                            	Database Link LSA information
                            	**type**\: list of  :py:class:`DatabaseLinkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_link_lsa = YList()
                                self.database_link_lsa.parent = self
                                self.database_link_lsa.name = 'database_link_lsa'


                            class DatabaseLinkLsa(object):
                                """
                                Database Link LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: interface_name
                                
                                	Interface name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: interface_name_xr
                                
                                	LSA interface handle
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: is_sham_link
                                
                                	If true, it is a sham link
                                	**type**\:  bool
                                
                                .. attribute:: is_virtual_link
                                
                                	If true, it is a virtual link
                                	**type**\:  bool
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaHeader>`
                                
                                .. attribute:: lsa_link_local
                                
                                	LSA link local 
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: prefix
                                
                                	OSPFv3 prefix 
                                	**type**\: list of  :py:class:`Prefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.Prefix>`
                                
                                .. attribute:: router_priority
                                
                                	Router priority 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sham_link_id
                                
                                	Sham link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: virtual_link_id
                                
                                	Virtual link ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.interface_name = None
                                    self.interface_name_xr = None
                                    self.is_sham_link = None
                                    self.is_virtual_link = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_link_local = None
                                    self.lsa_type = None
                                    self.prefix = YList()
                                    self.prefix.parent = self
                                    self.prefix.name = 'prefix'
                                    self.router_priority = None
                                    self.sham_link_id = None
                                    self.virtual_link_id = None


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.LsaDetail']['meta_info']


                                class Prefix(object):
                                    """
                                    OSPFv3 prefix 
                                    
                                    .. attribute:: ospfv3_prefix_length
                                    
                                    	OSPFv3 prefix length 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ospfv3_prefix_metric
                                    
                                    	OSPFv3 prefix metric 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: ospfv3_prefix_options
                                    
                                    	OSPFv3 prefix options 
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: prefix
                                    
                                    	OSPFv3 prefix 
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: priority
                                    
                                    	Prefix priority
                                    	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ospfv3_prefix_length = None
                                        self.ospfv3_prefix_metric = None
                                        self.ospfv3_prefix_options = None
                                        self.prefix = None
                                        self.priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:prefix'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ospfv3_prefix_length is not None:
                                            return True

                                        if self.ospfv3_prefix_metric is not None:
                                            return True

                                        if self.ospfv3_prefix_options is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa.Prefix']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-link-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.interface_name is not None:
                                        return True

                                    if self.interface_name_xr is not None:
                                        return True

                                    if self.is_sham_link is not None:
                                        return True

                                    if self.is_virtual_link is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_link_local is not None:
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.prefix is not None:
                                        for child_ref in self.prefix:
                                            if child_ref._has_data():
                                                return True

                                    if self.router_priority is not None:
                                        return True

                                    if self.sham_link_id is not None:
                                        return True

                                    if self.virtual_link_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS.DatabaseLinkLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-link-lsa-s'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_link_lsa is not None:
                                    for child_ref in self.database_link_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseLinkLsaS']['meta_info']


                        class DatabaseIntRouterLsas(object):
                            """
                            Internal database Router LSA information
                            
                            .. attribute:: database_int_router_lsa
                            
                            	Inernal database Router LSA information
                            	**type**\: list of  :py:class:`DatabaseIntRouterLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_int_router_lsa = YList()
                                self.database_int_router_lsa.parent = self
                                self.database_int_router_lsa.name = 'database_int_router_lsa'


                            class DatabaseIntRouterLsa(object):
                                """
                                Inernal database Router LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: link
                                
                                	List of links in this LSA
                                	**type**\: list of  :py:class:`Link <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.Link>`
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: router_la_bits
                                
                                	Router LA bits 
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: rpf_path
                                
                                	Router LSA Reverse\-Path Forwarding information 
                                	**type**\:  :py:class:`RpfPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.RpfPath>`
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.link = YList()
                                    self.link.parent = self
                                    self.link.name = 'link'
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.router_la_bits = None
                                    self.rpf_path = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.RpfPath()
                                    self.rpf_path.parent = self


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.LsaDetail']['meta_info']


                                class RpfPath(object):
                                    """
                                    Router LSA Reverse\-Path Forwarding information 
                                    
                                    .. attribute:: interface_name
                                    
                                    	RPF multicast IDB 
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: rpf_multicast_next_hop
                                    
                                    	RPF multicast next hop 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.interface_name = None
                                        self.rpf_multicast_next_hop = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:rpf-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.interface_name is not None:
                                            return True

                                        if self.rpf_multicast_next_hop is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.RpfPath']['meta_info']


                                class Link(object):
                                    """
                                    List of links in this LSA
                                    
                                    .. attribute:: link_interface_id
                                    
                                    	LSA link interface ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_metric
                                    
                                    	LSA link metric 
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: link_neighbor_interface_id
                                    
                                    	LSA link neighbor interface ID 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_neighbor_router_id
                                    
                                    	LSA link neigbhor router id 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: link_type
                                    
                                    	Type of link
                                    	**type**\:  :py:class:`Ospfv3LinkEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LinkEnum>`
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_interface_id = None
                                        self.link_metric = None
                                        self.link_neighbor_interface_id = None
                                        self.link_neighbor_router_id = None
                                        self.link_type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:link'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_interface_id is not None:
                                            return True

                                        if self.link_metric is not None:
                                            return True

                                        if self.link_neighbor_interface_id is not None:
                                            return True

                                        if self.link_neighbor_router_id is not None:
                                            return True

                                        if self.link_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa.Link']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-router-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.link is not None:
                                        for child_ref in self.link:
                                            if child_ref._has_data():
                                                return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.router_la_bits is not None:
                                        return True

                                    if self.rpf_path is not None and self.rpf_path._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas.DatabaseIntRouterLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-router-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_int_router_lsa is not None:
                                    for child_ref in self.database_int_router_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseIntRouterLsas']['meta_info']


                        class DatabaseNetworkLsas(object):
                            """
                            Database Network Information
                            
                            .. attribute:: database_network_lsa
                            
                            	Database Network LSA information
                            	**type**\: list of  :py:class:`DatabaseNetworkLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa>`
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.database_network_lsa = YList()
                                self.database_network_lsa.parent = self
                                self.database_network_lsa.name = 'database_network_lsa'


                            class DatabaseNetworkLsa(object):
                                """
                                Database Network LSA information
                                
                                .. attribute:: advertising_router
                                
                                	Advertising Router ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ls_id
                                
                                	Link state ID
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: lsa_detail
                                
                                	Detailed LSA information
                                	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaDetail>`
                                
                                .. attribute:: lsa_header
                                
                                	Header information 
                                	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaHeader>`
                                
                                .. attribute:: lsa_type
                                
                                	LSA type
                                	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                                
                                .. attribute:: neighbor_router
                                
                                	Neighbor router list
                                	**type**\:  list of str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.advertising_router = None
                                    self.ls_id = None
                                    self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaDetail()
                                    self.lsa_detail.parent = self
                                    self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaHeader()
                                    self.lsa_header.parent = self
                                    self.lsa_type = None
                                    self.neighbor_router = YLeafList()
                                    self.neighbor_router.parent = self
                                    self.neighbor_router.name = 'neighbor_router'


                                class LsaHeader(object):
                                    """
                                    Header information 
                                    
                                    .. attribute:: advertising_router
                                    
                                    	Router ID of Advertising Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: checksum
                                    
                                    	Checksum value
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: is_do_not_age_lsa
                                    
                                    	If true, Do Not Age this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_graceful_restart_active
                                    
                                    	If true, if grace restart is active 
                                    	**type**\:  bool
                                    
                                    .. attribute:: ls_id
                                    
                                    	LS ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_age
                                    
                                    	LSA's Age (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_area_id
                                    
                                    	Area ID in decimal or dotted\-decimal format
                                    	**type**\:  str
                                    
                                    	**range:** 0..16
                                    
                                    .. attribute:: lsa_type
                                    
                                    	LSA type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: sequence_number
                                    
                                    	Current Sequence number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.advertising_router = None
                                        self.checksum = None
                                        self.is_do_not_age_lsa = None
                                        self.is_graceful_restart_active = None
                                        self.ls_id = None
                                        self.lsa_age = None
                                        self.lsa_area_id = None
                                        self.lsa_type = None
                                        self.sequence_number = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.advertising_router is not None:
                                            return True

                                        if self.checksum is not None:
                                            return True

                                        if self.is_do_not_age_lsa is not None:
                                            return True

                                        if self.is_graceful_restart_active is not None:
                                            return True

                                        if self.ls_id is not None:
                                            return True

                                        if self.lsa_age is not None:
                                            return True

                                        if self.lsa_area_id is not None:
                                            return True

                                        if self.lsa_type is not None:
                                            return True

                                        if self.sequence_number is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaHeader']['meta_info']


                                class LsaDetail(object):
                                    """
                                    Detailed LSA information
                                    
                                    .. attribute:: free_time
                                    
                                    	The amount of time since the last check was made to free this LSA (s)
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_acknowledged
                                    
                                    	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_advertising_router_reachable
                                    
                                    	If true, Advertising Router is reachable
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_deleted
                                    
                                    	If true, flag is set to delete this LSA 
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_flood_pending
                                    
                                    	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_maximum_aged
                                    
                                    	If true, the reason not to delete this LSA is because it is in Maxage Queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_neighbor_exchange
                                    
                                    	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_no_delete
                                    
                                    	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_nsr_ack_pending
                                    
                                    	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_partial_spf
                                    
                                    	If true, the reason not to delete this LSA is because it is in partial SPF queue
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_bit
                                    
                                    	If true, Routing Bit set on the LSA
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_routing_table
                                    
                                    	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_flood_required_post_fail_over
                                    
                                    	LSA flood required after FO
                                    	**type**\:  bool
                                    
                                    .. attribute:: lsa_length
                                    
                                    	Length of the LSA
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsa_sync_state
                                    
                                    	State of LSA sync with active
                                    	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                                    
                                    .. attribute:: minute_table_index
                                    
                                    	Minute table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: nsr_flood_required
                                    
                                    	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                                    	**type**\:  bool
                                    
                                    .. attribute:: rate_limit
                                    
                                    	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                                    	**type**\:  bool
                                    
                                    .. attribute:: second_table_index
                                    
                                    	Second table index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.free_time = None
                                        self.is_acknowledged = None
                                        self.is_advertising_router_reachable = None
                                        self.is_deleted = None
                                        self.is_flood_pending = None
                                        self.is_maximum_aged = None
                                        self.is_neighbor_exchange = None
                                        self.is_no_delete = None
                                        self.is_nsr_ack_pending = None
                                        self.is_partial_spf = None
                                        self.is_routing_bit = None
                                        self.is_routing_table = None
                                        self.lsa_flood_required_post_fail_over = None
                                        self.lsa_length = None
                                        self.lsa_sync_state = None
                                        self.minute_table_index = None
                                        self.nsr_flood_required = None
                                        self.rate_limit = None
                                        self.second_table_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.free_time is not None:
                                            return True

                                        if self.is_acknowledged is not None:
                                            return True

                                        if self.is_advertising_router_reachable is not None:
                                            return True

                                        if self.is_deleted is not None:
                                            return True

                                        if self.is_flood_pending is not None:
                                            return True

                                        if self.is_maximum_aged is not None:
                                            return True

                                        if self.is_neighbor_exchange is not None:
                                            return True

                                        if self.is_no_delete is not None:
                                            return True

                                        if self.is_nsr_ack_pending is not None:
                                            return True

                                        if self.is_partial_spf is not None:
                                            return True

                                        if self.is_routing_bit is not None:
                                            return True

                                        if self.is_routing_table is not None:
                                            return True

                                        if self.lsa_flood_required_post_fail_over is not None:
                                            return True

                                        if self.lsa_length is not None:
                                            return True

                                        if self.lsa_sync_state is not None:
                                            return True

                                        if self.minute_table_index is not None:
                                            return True

                                        if self.nsr_flood_required is not None:
                                            return True

                                        if self.rate_limit is not None:
                                            return True

                                        if self.second_table_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa.LsaDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-network-lsa'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.advertising_router is not None:
                                        return True

                                    if self.ls_id is not None:
                                        return True

                                    if self.lsa_detail is not None and self.lsa_detail._has_data():
                                        return True

                                    if self.lsa_header is not None and self.lsa_header._has_data():
                                        return True

                                    if self.lsa_type is not None:
                                        return True

                                    if self.neighbor_router is not None:
                                        for child in self.neighbor_router:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas.DatabaseNetworkLsa']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-network-lsas'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.database_network_lsa is not None:
                                    for child_ref in self.database_network_lsa:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea.DatabaseNetworkLsas']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.area_id is None:
                                raise YPYModelError('Key property area_id is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-area[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area_id is not None:
                                return True

                            if self.database_grace_lsa_s is not None and self.database_grace_lsa_s._has_data():
                                return True

                            if self.database_int_grace_lsa_s is not None and self.database_int_grace_lsa_s._has_data():
                                return True

                            if self.database_int_inter_area_prefix_lsas is not None and self.database_int_inter_area_prefix_lsas._has_data():
                                return True

                            if self.database_int_inter_area_router_lsas is not None and self.database_int_inter_area_router_lsas._has_data():
                                return True

                            if self.database_int_link_lsa_s is not None and self.database_int_link_lsa_s._has_data():
                                return True

                            if self.database_int_network_lsas is not None and self.database_int_network_lsas._has_data():
                                return True

                            if self.database_int_nssa_lsas is not None and self.database_int_nssa_lsas._has_data():
                                return True

                            if self.database_int_prefix_lsas is not None and self.database_int_prefix_lsas._has_data():
                                return True

                            if self.database_int_router_lsas is not None and self.database_int_router_lsas._has_data():
                                return True

                            if self.database_int_unknown_area_lsas is not None and self.database_int_unknown_area_lsas._has_data():
                                return True

                            if self.database_int_unknown_link_lsa_s is not None and self.database_int_unknown_link_lsa_s._has_data():
                                return True

                            if self.database_int_unknown_lsas is not None and self.database_int_unknown_lsas._has_data():
                                return True

                            if self.database_inter_area_prefix_lsas is not None and self.database_inter_area_prefix_lsas._has_data():
                                return True

                            if self.database_inter_area_router_lsas is not None and self.database_inter_area_router_lsas._has_data():
                                return True

                            if self.database_link_lsa_s is not None and self.database_link_lsa_s._has_data():
                                return True

                            if self.database_lsas is not None and self.database_lsas._has_data():
                                return True

                            if self.database_network_lsas is not None and self.database_network_lsas._has_data():
                                return True

                            if self.database_nssa_lsas is not None and self.database_nssa_lsas._has_data():
                                return True

                            if self.database_prefix_lsas is not None and self.database_prefix_lsas._has_data():
                                return True

                            if self.database_router_lsas is not None and self.database_router_lsas._has_data():
                                return True

                            if self.database_unknown_area_lsas is not None and self.database_unknown_area_lsas._has_data():
                                return True

                            if self.database_unknown_link_lsa_s is not None and self.database_unknown_link_lsa_s._has_data():
                                return True

                            if self.database_unknown_lsas is not None and self.database_unknown_lsas._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas.DatabaseArea']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-areas'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.database_area is not None:
                            for child_ref in self.database_area:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseAreas']['meta_info']


                class BadChecksums(object):
                    """
                    Bad Checksum Packets information table
                    
                    .. attribute:: bad_checksum
                    
                    	Bad Checksum Packet information
                    	**type**\: list of  :py:class:`BadChecksum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.BadChecksums.BadChecksum>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bad_checksum = YList()
                        self.bad_checksum.parent = self
                        self.bad_checksum.name = 'bad_checksum'


                    class BadChecksum(object):
                        """
                        Bad Checksum Packet information
                        
                        .. attribute:: packet_number  <key>
                        
                        	Bad Checksum Packets number
                        	**type**\:  int
                        
                        	**range:** 0..9
                        
                        .. attribute:: computed_checksum
                        
                        	Computed Checksum
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: received_checksum
                        
                        	Received Checksum
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: received_data
                        
                        	Received Hexadecimal Data
                        	**type**\:  str
                        
                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                        
                        .. attribute:: timestamp
                        
                        	Packet Timestamp (relative to 1970/1/1 00\:00)
                        	**type**\:  :py:class:`Timestamp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.BadChecksums.BadChecksum.Timestamp>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.packet_number = None
                            self.computed_checksum = None
                            self.received_checksum = None
                            self.received_data = None
                            self.timestamp = Ospfv3.Processes.Process.DefaultVrf.BadChecksums.BadChecksum.Timestamp()
                            self.timestamp.parent = self


                        class Timestamp(object):
                            """
                            Packet Timestamp (relative to 1970/1/1 00\:00)
                            
                            .. attribute:: nanosecond
                            
                            	Nano seconds 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: second
                            
                            	Seconds 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.nanosecond = None
                                self.second = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:timestamp'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.nanosecond is not None:
                                    return True

                                if self.second is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.BadChecksums.BadChecksum.Timestamp']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.packet_number is None:
                                raise YPYModelError('Key property packet_number is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:bad-checksum[Cisco-IOS-XR-ipv6-ospfv3-oper:packet-number = ' + str(self.packet_number) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.packet_number is not None:
                                return True

                            if self.computed_checksum is not None:
                                return True

                            if self.received_checksum is not None:
                                return True

                            if self.received_data is not None:
                                return True

                            if self.timestamp is not None and self.timestamp._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.BadChecksums.BadChecksum']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:bad-checksums'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bad_checksum is not None:
                            for child_ref in self.bad_checksum:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.BadChecksums']['meta_info']


                class DatabaseSummaryAreas(object):
                    """
                    Database summary table
                    
                    .. attribute:: database_summary_area
                    
                    	Database summary area table
                    	**type**\: list of  :py:class:`DatabaseSummaryArea <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.database_summary_area = YList()
                        self.database_summary_area.parent = self
                        self.database_summary_area.name = 'database_summary_area'


                    class DatabaseSummaryArea(object):
                        """
                        Database summary area table
                        
                        .. attribute:: area_id  <key>
                        
                        	Area ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: database_summary
                        
                        	Database Summary information
                        	**type**\:  :py:class:`DatabaseSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area_id = None
                            self.database_summary = Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary()
                            self.database_summary.parent = self


                        class DatabaseSummary(object):
                            """
                            Database Summary information
                            
                            .. attribute:: area_database
                            
                            	OSPFv3 Area Database list 
                            	**type**\: list of  :py:class:`AreaDatabase <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase>`
                            
                            .. attribute:: database_counters
                            
                            	OSPFv3 database counters 
                            	**type**\:  :py:class:`DatabaseCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.DatabaseCounters>`
                            
                            .. attribute:: database_router_id
                            
                            	Database router ID 
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: is_opaque_database_capable
                            
                            	If true, opaque database is capable 
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.area_database = YList()
                                self.area_database.parent = self
                                self.area_database.name = 'area_database'
                                self.database_counters = Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.DatabaseCounters()
                                self.database_counters.parent = self
                                self.database_router_id = None
                                self.is_opaque_database_capable = None


                            class DatabaseCounters(object):
                                """
                                OSPFv3 database counters 
                                
                                .. attribute:: deleted_lsa
                                
                                	deleted lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa
                                
                                	lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_checksum
                                
                                	lsa checksum
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: max_age_lsa
                                
                                	max age lsa
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.deleted_lsa = YLeafList()
                                    self.deleted_lsa.parent = self
                                    self.deleted_lsa.name = 'deleted_lsa'
                                    self.lsa = YLeafList()
                                    self.lsa.parent = self
                                    self.lsa.name = 'lsa'
                                    self.lsa_checksum = YLeafList()
                                    self.lsa_checksum.parent = self
                                    self.lsa_checksum.name = 'lsa_checksum'
                                    self.max_age_lsa = YLeafList()
                                    self.max_age_lsa.parent = self
                                    self.max_age_lsa.name = 'max_age_lsa'

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.deleted_lsa is not None:
                                        for child in self.deleted_lsa:
                                            if child is not None:
                                                return True

                                    if self.lsa is not None:
                                        for child in self.lsa:
                                            if child is not None:
                                                return True

                                    if self.lsa_checksum is not None:
                                        for child in self.lsa_checksum:
                                            if child is not None:
                                                return True

                                    if self.max_age_lsa is not None:
                                        for child in self.max_age_lsa:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.DatabaseCounters']['meta_info']


                            class AreaDatabase(object):
                                """
                                OSPFv3 Area Database list 
                                
                                .. attribute:: area_database_summary
                                
                                	Area database summary 
                                	**type**\:  :py:class:`AreaDatabaseSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase.AreaDatabaseSummary>`
                                
                                .. attribute:: lsa_area_id
                                
                                	Area ID in decimal or dotted\-decimal format
                                	**type**\:  str
                                
                                	**range:** 0..16
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.area_database_summary = Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase.AreaDatabaseSummary()
                                    self.area_database_summary.parent = self
                                    self.lsa_area_id = None


                                class AreaDatabaseSummary(object):
                                    """
                                    Area database summary 
                                    
                                    .. attribute:: deleted_lsa
                                    
                                    	deleted lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa
                                    
                                    	lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lsa_checksum
                                    
                                    	lsa checksum
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: max_age_lsa
                                    
                                    	max age lsa
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'ipv6-ospfv3-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.deleted_lsa = YLeafList()
                                        self.deleted_lsa.parent = self
                                        self.deleted_lsa.name = 'deleted_lsa'
                                        self.lsa = YLeafList()
                                        self.lsa.parent = self
                                        self.lsa.name = 'lsa'
                                        self.lsa_checksum = YLeafList()
                                        self.lsa_checksum.parent = self
                                        self.lsa_checksum.name = 'lsa_checksum'
                                        self.max_age_lsa = YLeafList()
                                        self.max_age_lsa.parent = self
                                        self.max_age_lsa.name = 'max_age_lsa'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-database-summary'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.deleted_lsa is not None:
                                            for child in self.deleted_lsa:
                                                if child is not None:
                                                    return True

                                        if self.lsa is not None:
                                            for child in self.lsa:
                                                if child is not None:
                                                    return True

                                        if self.lsa_checksum is not None:
                                            for child in self.lsa_checksum:
                                                if child is not None:
                                                    return True

                                        if self.max_age_lsa is not None:
                                            for child in self.max_age_lsa:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase.AreaDatabaseSummary']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:area-database'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.area_database_summary is not None and self.area_database_summary._has_data():
                                        return True

                                    if self.lsa_area_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary.AreaDatabase']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.area_database is not None:
                                    for child_ref in self.area_database:
                                        if child_ref._has_data():
                                            return True

                                if self.database_counters is not None and self.database_counters._has_data():
                                    return True

                                if self.database_router_id is not None:
                                    return True

                                if self.is_opaque_database_capable is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea.DatabaseSummary']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.area_id is None:
                                raise YPYModelError('Key property area_id is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary-area[Cisco-IOS-XR-ipv6-ospfv3-oper:area-id = ' + str(self.area_id) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area_id is not None:
                                return True

                            if self.database_summary is not None and self.database_summary._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas.DatabaseSummaryArea']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-summary-areas'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.database_summary_area is not None:
                            for child_ref in self.database_summary_area:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseSummaryAreas']['meta_info']


                class NeighborProcessTable(object):
                    """
                    OSPFv3 neighbor information table for all areas
                    
                    .. attribute:: neighbor
                    
                    	OSPFv3 neighbor detail information
                    	**type**\: list of  :py:class:`Neighbor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.neighbor = YList()
                        self.neighbor.parent = self
                        self.neighbor.name = 'neighbor'


                    class Neighbor(object):
                        """
                        OSPFv3 neighbor detail information
                        
                        .. attribute:: interface_name
                        
                        	Interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_neighbor_sham_link
                        
                        	If true, neighbor is on a sham link 
                        	**type**\:  bool
                        
                        .. attribute:: is_neighbor_virtual_link
                        
                        	If true, neighbor is on a virtual link 
                        	**type**\:  bool
                        
                        .. attribute:: neighbor_address
                        
                        	Neighbor ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: neighbor_address_xr
                        
                        	Neighbor IP Address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: neighbor_bfd_info
                        
                        	Neighbor BFD information
                        	**type**\:  :py:class:`NeighborBfdInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborBfdInfo>`
                        
                        .. attribute:: neighbor_dead_timer
                        
                        	Time until neighbor's dead timer expires (seconds)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_designated_router
                        
                        	Designated router 
                        	**type**\:  str
                        
                        	**range:** 0..9
                        
                        .. attribute:: neighbor_detail
                        
                        	Detailed OSPFv3 neighbor information 
                        	**type**\:  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborDetail>`
                        
                        .. attribute:: neighbor_dr_priority
                        
                        	Neighbor's DR priority
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: neighbor_interface_id
                        
                        	Neighbor interface ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_sham_link_id
                        
                        	Neighbor sham link id 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_state
                        
                        	Neighbor's state
                        	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                        
                        .. attribute:: neighbor_up_time
                        
                        	Amount of time since the adjacency is up (seconds)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_virtual_link_id
                        
                        	Neighbor virtual link id 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_neighbor_sham_link = None
                            self.is_neighbor_virtual_link = None
                            self.neighbor_address = None
                            self.neighbor_address_xr = None
                            self.neighbor_bfd_info = Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborBfdInfo()
                            self.neighbor_bfd_info.parent = self
                            self.neighbor_dead_timer = None
                            self.neighbor_designated_router = None
                            self.neighbor_detail = Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborDetail()
                            self.neighbor_detail.parent = self
                            self.neighbor_dr_priority = None
                            self.neighbor_interface_id = None
                            self.neighbor_sham_link_id = None
                            self.neighbor_state = None
                            self.neighbor_up_time = None
                            self.neighbor_virtual_link_id = None


                        class NeighborDetail(object):
                            """
                            Detailed OSPFv3 neighbor information 
                            
                            .. attribute:: interface_type
                            
                            	Interface type
                            	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                            
                            .. attribute:: is_neighbor_filtered
                            
                            	If true, filter outgoing LSAs 
                            	**type**\:  bool
                            
                            .. attribute:: neighbor_backup_designated_router_address
                            
                            	Address of backup designated router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: neighbor_cost
                            
                            	Cost of path to this neighbor 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: neighbor_designated_router_address
                            
                            	Address of designated router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: neighbor_ignore_timer
                            
                            	Remaining time when ignore timer is running 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_option
                            
                            	 This is bitmask of neighbor's option field received 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_retransmission
                            
                            	Retransmission information with this neighbor
                            	**type**\:  :py:class:`NeighborRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborDetail.NeighborRetransmission>`
                            
                            .. attribute:: next_poll_interval
                            
                            	For NBMA networks, amount of time remaining in seconds before the next poll interval expires and Hello is sent (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pending_events
                            
                            	Number of pending events 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: poll_interval
                            
                            	Poll interval (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: state_changes
                            
                            	Number of state changes 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_type = None
                                self.is_neighbor_filtered = None
                                self.neighbor_backup_designated_router_address = None
                                self.neighbor_cost = None
                                self.neighbor_designated_router_address = None
                                self.neighbor_ignore_timer = None
                                self.neighbor_option = None
                                self.neighbor_retransmission = Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborDetail.NeighborRetransmission()
                                self.neighbor_retransmission.parent = self
                                self.next_poll_interval = None
                                self.pending_events = None
                                self.poll_interval = None
                                self.state_changes = None


                            class NeighborRetransmission(object):
                                """
                                Retransmission information with this neighbor
                                
                                .. attribute:: area_first_flood
                                
                                	First flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_first_flood_index
                                
                                	Index of the first flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_flood_index
                                
                                	Area scope LSA's flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_next_flood
                                
                                	Next flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_next_flood_index
                                
                                	Index of next flood item for Area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_first_flood
                                
                                	First flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_first_flood_index
                                
                                	Index for first flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_flood_index
                                
                                	AS scope LSA's flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_next_flood
                                
                                	Next flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_next_flood_index
                                
                                	Index of next flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: database_descriptor_retransmissions
                                
                                	Number of database descriptor retransmissions during last exchange
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: last_retransmission_length
                                
                                	Number of LSAs sent in last retransmission
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: last_retransmission_time
                                
                                	Last retransmission scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_first_flood
                                
                                	Link first flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_first_flood_index
                                
                                	Link first flood information index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_flood_index
                                
                                	Link flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_next_flood
                                
                                	Link next flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_next_flood_index
                                
                                	Link next flood information index 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_retransmission_timer
                                
                                	Time until next LSA retransmission (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_retransmission_length
                                
                                	Maximum number of LSAs sent in a retransmission
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_retransmission_time
                                
                                	Maximum retransmission scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_retransmissions
                                
                                	Number of neighbor retransmissions 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: retransmissions
                                
                                	Number of retransmissions for this neighbor
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.area_first_flood = None
                                    self.area_first_flood_index = None
                                    self.area_flood_index = None
                                    self.area_next_flood = None
                                    self.area_next_flood_index = None
                                    self.as_first_flood = None
                                    self.as_first_flood_index = None
                                    self.as_flood_index = None
                                    self.as_next_flood = None
                                    self.as_next_flood_index = None
                                    self.database_descriptor_retransmissions = None
                                    self.last_retransmission_length = None
                                    self.last_retransmission_time = None
                                    self.link_first_flood = None
                                    self.link_first_flood_index = None
                                    self.link_flood_index = None
                                    self.link_next_flood = None
                                    self.link_next_flood_index = None
                                    self.lsa_retransmission_timer = None
                                    self.maximum_retransmission_length = None
                                    self.maximum_retransmission_time = None
                                    self.neighbor_retransmissions = None
                                    self.retransmissions = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-retransmission'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.area_first_flood is not None:
                                        return True

                                    if self.area_first_flood_index is not None:
                                        return True

                                    if self.area_flood_index is not None:
                                        return True

                                    if self.area_next_flood is not None:
                                        return True

                                    if self.area_next_flood_index is not None:
                                        return True

                                    if self.as_first_flood is not None:
                                        return True

                                    if self.as_first_flood_index is not None:
                                        return True

                                    if self.as_flood_index is not None:
                                        return True

                                    if self.as_next_flood is not None:
                                        return True

                                    if self.as_next_flood_index is not None:
                                        return True

                                    if self.database_descriptor_retransmissions is not None:
                                        return True

                                    if self.last_retransmission_length is not None:
                                        return True

                                    if self.last_retransmission_time is not None:
                                        return True

                                    if self.link_first_flood is not None:
                                        return True

                                    if self.link_first_flood_index is not None:
                                        return True

                                    if self.link_flood_index is not None:
                                        return True

                                    if self.link_next_flood is not None:
                                        return True

                                    if self.link_next_flood_index is not None:
                                        return True

                                    if self.lsa_retransmission_timer is not None:
                                        return True

                                    if self.maximum_retransmission_length is not None:
                                        return True

                                    if self.maximum_retransmission_time is not None:
                                        return True

                                    if self.neighbor_retransmissions is not None:
                                        return True

                                    if self.retransmissions is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborDetail.NeighborRetransmission']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_type is not None:
                                    return True

                                if self.is_neighbor_filtered is not None:
                                    return True

                                if self.neighbor_backup_designated_router_address is not None:
                                    return True

                                if self.neighbor_cost is not None:
                                    return True

                                if self.neighbor_designated_router_address is not None:
                                    return True

                                if self.neighbor_ignore_timer is not None:
                                    return True

                                if self.neighbor_option is not None:
                                    return True

                                if self.neighbor_retransmission is not None and self.neighbor_retransmission._has_data():
                                    return True

                                if self.next_poll_interval is not None:
                                    return True

                                if self.pending_events is not None:
                                    return True

                                if self.poll_interval is not None:
                                    return True

                                if self.state_changes is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborDetail']['meta_info']


                        class NeighborBfdInfo(object):
                            """
                            Neighbor BFD information
                            
                            .. attribute:: bfd_intf_enable_mode
                            
                            	BFD enable mode \- Default/Strict
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: bfd_status_flag
                            
                            	Status of the BFD Session
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bfd_intf_enable_mode = None
                                self.bfd_status_flag = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-bfd-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bfd_intf_enable_mode is not None:
                                    return True

                                if self.bfd_status_flag is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor.NeighborBfdInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.is_neighbor_sham_link is not None:
                                return True

                            if self.is_neighbor_virtual_link is not None:
                                return True

                            if self.neighbor_address is not None:
                                return True

                            if self.neighbor_address_xr is not None:
                                return True

                            if self.neighbor_bfd_info is not None and self.neighbor_bfd_info._has_data():
                                return True

                            if self.neighbor_dead_timer is not None:
                                return True

                            if self.neighbor_designated_router is not None:
                                return True

                            if self.neighbor_detail is not None and self.neighbor_detail._has_data():
                                return True

                            if self.neighbor_dr_priority is not None:
                                return True

                            if self.neighbor_interface_id is not None:
                                return True

                            if self.neighbor_sham_link_id is not None:
                                return True

                            if self.neighbor_state is not None:
                                return True

                            if self.neighbor_up_time is not None:
                                return True

                            if self.neighbor_virtual_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable.Neighbor']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-process-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.neighbor is not None:
                            for child_ref in self.neighbor:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborProcessTable']['meta_info']


                class FastReroutes(object):
                    """
                    OSPFv3 fast reroute topology information table
                    
                    .. attribute:: fast_reroute
                    
                    	OSPFv3 fast reroute topology information
                    	**type**\: list of  :py:class:`FastReroute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.FastReroutes.FastReroute>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.fast_reroute = YList()
                        self.fast_reroute.parent = self
                        self.fast_reroute.name = 'fast_reroute'


                    class FastReroute(object):
                        """
                        OSPFv3 fast reroute topology information
                        
                        .. attribute:: area_id
                        
                        	AreaID
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: ipfrr_area_revision
                        
                        	IPFRR Topology Revision
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ipfrr_router_id
                        
                        	OSPF Router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipfrr_topo
                        
                        	IPFRR Topology entries
                        	**type**\: list of  :py:class:`IpfrrTopo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.FastReroutes.FastReroute.IpfrrTopo>`
                        
                        .. attribute:: ipfrr_topo_area_id
                        
                        	Area ID string in decimal or dotted decimal format
                        	**type**\:  str
                        
                        	**range:** 0..16
                        
                        .. attribute:: router_id
                        
                        	Router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.area_id = None
                            self.ipfrr_area_revision = None
                            self.ipfrr_router_id = None
                            self.ipfrr_topo = YList()
                            self.ipfrr_topo.parent = self
                            self.ipfrr_topo.name = 'ipfrr_topo'
                            self.ipfrr_topo_area_id = None
                            self.router_id = None


                        class IpfrrTopo(object):
                            """
                            IPFRR Topology entries
                            
                            .. attribute:: distance
                            
                            	IPFRR Topology Distance
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: dr
                            
                            	IPFRR Topology DR entry
                            	**type**\:  bool
                            
                            .. attribute:: lsaid
                            
                            	IPFRR Topology LSA ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_sourced
                            
                            	IPFRR Topology Neighbor Sourced
                            	**type**\:  bool
                            
                            .. attribute:: node_id
                            
                            	IPFRR Topology Node ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: revision
                            
                            	IPFRR Topology Revision
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: type4
                            
                            	IPFRR Topoogy Type\-4 entry
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.distance = None
                                self.dr = None
                                self.lsaid = None
                                self.neighbor_sourced = None
                                self.node_id = None
                                self.revision = None
                                self.type4 = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:ipfrr-topo'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.distance is not None:
                                    return True

                                if self.dr is not None:
                                    return True

                                if self.lsaid is not None:
                                    return True

                                if self.neighbor_sourced is not None:
                                    return True

                                if self.node_id is not None:
                                    return True

                                if self.revision is not None:
                                    return True

                                if self.type4 is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.FastReroutes.FastReroute.IpfrrTopo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:fast-reroute'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.area_id is not None:
                                return True

                            if self.ipfrr_area_revision is not None:
                                return True

                            if self.ipfrr_router_id is not None:
                                return True

                            if self.ipfrr_topo is not None:
                                for child_ref in self.ipfrr_topo:
                                    if child_ref._has_data():
                                        return True

                            if self.ipfrr_topo_area_id is not None:
                                return True

                            if self.router_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.FastReroutes.FastReroute']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:fast-reroutes'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.fast_reroute is not None:
                            for child_ref in self.fast_reroute:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.FastReroutes']['meta_info']


                class DatabaseUnknownAsLsas(object):
                    """
                    Database AS Unknown Information
                    
                    .. attribute:: database_unknown_as_lsa
                    
                    	Database Unknown LSA information
                    	**type**\: list of  :py:class:`DatabaseUnknownAsLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.database_unknown_as_lsa = YList()
                        self.database_unknown_as_lsa.parent = self
                        self.database_unknown_as_lsa.name = 'database_unknown_as_lsa'


                    class DatabaseUnknownAsLsa(object):
                        """
                        Database Unknown LSA information
                        
                        .. attribute:: advertising_router
                        
                        	Advertising Router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: interface_name_xr
                        
                        	LSA interface name 
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_sham_link
                        
                        	If true, it is a sham link 
                        	**type**\:  bool
                        
                        .. attribute:: is_virtual_link
                        
                        	If true, it is a virtual link 
                        	**type**\:  bool
                        
                        .. attribute:: ls_id
                        
                        	Link state ID
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: lsa_detail
                        
                        	Detailed LSA information
                        	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaDetail>`
                        
                        .. attribute:: lsa_header
                        
                        	Header information 
                        	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaHeader>`
                        
                        .. attribute:: lsa_type
                        
                        	LSA type
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: sham_link_id
                        
                        	Shamlink ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: virtual_link_id
                        
                        	Virtual link ID 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.advertising_router = None
                            self.interface_name_xr = None
                            self.is_sham_link = None
                            self.is_virtual_link = None
                            self.ls_id = None
                            self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaDetail()
                            self.lsa_detail.parent = self
                            self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaHeader()
                            self.lsa_header.parent = self
                            self.lsa_type = None
                            self.sham_link_id = None
                            self.virtual_link_id = None


                        class LsaHeader(object):
                            """
                            Header information 
                            
                            .. attribute:: advertising_router
                            
                            	Router ID of Advertising Router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: checksum
                            
                            	Checksum value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: is_do_not_age_lsa
                            
                            	If true, Do Not Age this LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_graceful_restart_active
                            
                            	If true, if grace restart is active 
                            	**type**\:  bool
                            
                            .. attribute:: ls_id
                            
                            	LS ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_age
                            
                            	LSA's Age (s)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsa_area_id
                            
                            	Area ID in decimal or dotted\-decimal format
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            .. attribute:: lsa_type
                            
                            	LSA type
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: sequence_number
                            
                            	Current Sequence number
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.advertising_router = None
                                self.checksum = None
                                self.is_do_not_age_lsa = None
                                self.is_graceful_restart_active = None
                                self.ls_id = None
                                self.lsa_age = None
                                self.lsa_area_id = None
                                self.lsa_type = None
                                self.sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.advertising_router is not None:
                                    return True

                                if self.checksum is not None:
                                    return True

                                if self.is_do_not_age_lsa is not None:
                                    return True

                                if self.is_graceful_restart_active is not None:
                                    return True

                                if self.ls_id is not None:
                                    return True

                                if self.lsa_age is not None:
                                    return True

                                if self.lsa_area_id is not None:
                                    return True

                                if self.lsa_type is not None:
                                    return True

                                if self.sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaHeader']['meta_info']


                        class LsaDetail(object):
                            """
                            Detailed LSA information
                            
                            .. attribute:: free_time
                            
                            	The amount of time since the last check was made to free this LSA (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: is_acknowledged
                            
                            	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                            	**type**\:  bool
                            
                            .. attribute:: is_advertising_router_reachable
                            
                            	If true, Advertising Router is reachable
                            	**type**\:  bool
                            
                            .. attribute:: is_deleted
                            
                            	If true, flag is set to delete this LSA 
                            	**type**\:  bool
                            
                            .. attribute:: is_flood_pending
                            
                            	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                            	**type**\:  bool
                            
                            .. attribute:: is_maximum_aged
                            
                            	If true, the reason not to delete this LSA is because it is in Maxage Queue
                            	**type**\:  bool
                            
                            .. attribute:: is_neighbor_exchange
                            
                            	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                            	**type**\:  bool
                            
                            .. attribute:: is_no_delete
                            
                            	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_nsr_ack_pending
                            
                            	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                            	**type**\:  bool
                            
                            .. attribute:: is_partial_spf
                            
                            	If true, the reason not to delete this LSA is because it is in partial SPF queue
                            	**type**\:  bool
                            
                            .. attribute:: is_routing_bit
                            
                            	If true, Routing Bit set on the LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_routing_table
                            
                            	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                            	**type**\:  bool
                            
                            .. attribute:: lsa_flood_required_post_fail_over
                            
                            	LSA flood required after FO
                            	**type**\:  bool
                            
                            .. attribute:: lsa_length
                            
                            	Length of the LSA
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsa_sync_state
                            
                            	State of LSA sync with active
                            	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                            
                            .. attribute:: minute_table_index
                            
                            	Minute table index
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: nsr_flood_required
                            
                            	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                            	**type**\:  bool
                            
                            .. attribute:: rate_limit
                            
                            	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                            	**type**\:  bool
                            
                            .. attribute:: second_table_index
                            
                            	Second table index
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.free_time = None
                                self.is_acknowledged = None
                                self.is_advertising_router_reachable = None
                                self.is_deleted = None
                                self.is_flood_pending = None
                                self.is_maximum_aged = None
                                self.is_neighbor_exchange = None
                                self.is_no_delete = None
                                self.is_nsr_ack_pending = None
                                self.is_partial_spf = None
                                self.is_routing_bit = None
                                self.is_routing_table = None
                                self.lsa_flood_required_post_fail_over = None
                                self.lsa_length = None
                                self.lsa_sync_state = None
                                self.minute_table_index = None
                                self.nsr_flood_required = None
                                self.rate_limit = None
                                self.second_table_index = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.free_time is not None:
                                    return True

                                if self.is_acknowledged is not None:
                                    return True

                                if self.is_advertising_router_reachable is not None:
                                    return True

                                if self.is_deleted is not None:
                                    return True

                                if self.is_flood_pending is not None:
                                    return True

                                if self.is_maximum_aged is not None:
                                    return True

                                if self.is_neighbor_exchange is not None:
                                    return True

                                if self.is_no_delete is not None:
                                    return True

                                if self.is_nsr_ack_pending is not None:
                                    return True

                                if self.is_partial_spf is not None:
                                    return True

                                if self.is_routing_bit is not None:
                                    return True

                                if self.is_routing_table is not None:
                                    return True

                                if self.lsa_flood_required_post_fail_over is not None:
                                    return True

                                if self.lsa_length is not None:
                                    return True

                                if self.lsa_sync_state is not None:
                                    return True

                                if self.minute_table_index is not None:
                                    return True

                                if self.nsr_flood_required is not None:
                                    return True

                                if self.rate_limit is not None:
                                    return True

                                if self.second_table_index is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa.LsaDetail']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-as-lsa'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.advertising_router is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_sham_link is not None:
                                return True

                            if self.is_virtual_link is not None:
                                return True

                            if self.ls_id is not None:
                                return True

                            if self.lsa_detail is not None and self.lsa_detail._has_data():
                                return True

                            if self.lsa_header is not None and self.lsa_header._has_data():
                                return True

                            if self.lsa_type is not None:
                                return True

                            if self.sham_link_id is not None:
                                return True

                            if self.virtual_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas.DatabaseUnknownAsLsa']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-unknown-as-lsas'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.database_unknown_as_lsa is not None:
                            for child_ref in self.database_unknown_as_lsa:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseUnknownAsLsas']['meta_info']


                class InterfaceBriefProcessTable(object):
                    """
                    OSPFv3 interface brief information table for all
                    areas
                    
                    .. attribute:: interface_brief
                    
                    	Interface brief information
                    	**type**\: list of  :py:class:`InterfaceBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.InterfaceBriefProcessTable.InterfaceBrief>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_brief = YList()
                        self.interface_brief.parent = self
                        self.interface_brief.name = 'interface_brief'


                    class InterfaceBrief(object):
                        """
                        Interface brief information
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: interface_address
                        
                        	Interface IP address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: interface_adjacent_neighbors
                        
                        	Total number of adjacent neighbors
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: interface_link_cost
                        
                        	Interface link cost
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: interface_neighbors
                        
                        	Total number of neighbors 
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: network_type
                        
                        	Network type
                        	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                        
                        .. attribute:: ospf_interface_state
                        
                        	Interface OSPF state
                        	**type**\:  :py:class:`Ospfv3InterfaceStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceStateEnum>`
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.interface_address = None
                            self.interface_adjacent_neighbors = None
                            self.interface_link_cost = None
                            self.interface_neighbors = None
                            self.network_type = None
                            self.ospf_interface_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-brief[Cisco-IOS-XR-ipv6-ospfv3-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.interface_address is not None:
                                return True

                            if self.interface_adjacent_neighbors is not None:
                                return True

                            if self.interface_link_cost is not None:
                                return True

                            if self.interface_neighbors is not None:
                                return True

                            if self.network_type is not None:
                                return True

                            if self.ospf_interface_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InterfaceBriefProcessTable.InterfaceBrief']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:interface-brief-process-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface_brief is not None:
                            for child_ref in self.interface_brief:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.InterfaceBriefProcessTable']['meta_info']


                class NeighborDetailProcessTable(object):
                    """
                    OSPFv3 neighbor information table for all areas
                    
                    .. attribute:: neighbor_detail
                    
                    	OSPFv3 neighbor detail information
                    	**type**\: list of  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.neighbor_detail = YList()
                        self.neighbor_detail.parent = self
                        self.neighbor_detail.name = 'neighbor_detail'


                    class NeighborDetail(object):
                        """
                        OSPFv3 neighbor detail information
                        
                        .. attribute:: interface_name
                        
                        	Interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_neighbor_sham_link
                        
                        	If true, neighbor is on a sham link 
                        	**type**\:  bool
                        
                        .. attribute:: is_neighbor_virtual_link
                        
                        	If true, neighbor is on a virtual link 
                        	**type**\:  bool
                        
                        .. attribute:: neighbor_address
                        
                        	Neighbor ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: neighbor_address_xr
                        
                        	Neighbor IP Address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: neighbor_bfd_info
                        
                        	Neighbor BFD information
                        	**type**\:  :py:class:`NeighborBfdInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborBfdInfo>`
                        
                        .. attribute:: neighbor_dead_timer
                        
                        	Time until neighbor's dead timer expires (seconds)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_designated_router
                        
                        	Designated router 
                        	**type**\:  str
                        
                        	**range:** 0..9
                        
                        .. attribute:: neighbor_detail
                        
                        	Detailed OSPFv3 neighbor information 
                        	**type**\:  :py:class:`NeighborDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail>`
                        
                        .. attribute:: neighbor_dr_priority
                        
                        	Neighbor's DR priority
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: neighbor_interface_id
                        
                        	Neighbor interface ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_sham_link_id
                        
                        	Neighbor sham link id 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_state
                        
                        	Neighbor's state
                        	**type**\:  :py:class:`Ospfv3NeighborStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3NeighborStateEnum>`
                        
                        .. attribute:: neighbor_up_time
                        
                        	Amount of time since the adjacency is up (seconds)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_virtual_link_id
                        
                        	Neighbor virtual link id 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_neighbor_sham_link = None
                            self.is_neighbor_virtual_link = None
                            self.neighbor_address = None
                            self.neighbor_address_xr = None
                            self.neighbor_bfd_info = Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborBfdInfo()
                            self.neighbor_bfd_info.parent = self
                            self.neighbor_dead_timer = None
                            self.neighbor_designated_router = None
                            self.neighbor_detail = Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail()
                            self.neighbor_detail.parent = self
                            self.neighbor_dr_priority = None
                            self.neighbor_interface_id = None
                            self.neighbor_sham_link_id = None
                            self.neighbor_state = None
                            self.neighbor_up_time = None
                            self.neighbor_virtual_link_id = None


                        class NeighborDetail(object):
                            """
                            Detailed OSPFv3 neighbor information 
                            
                            .. attribute:: interface_type
                            
                            	Interface type
                            	**type**\:  :py:class:`Ospfv3InterfaceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3InterfaceEnum>`
                            
                            .. attribute:: is_neighbor_filtered
                            
                            	If true, filter outgoing LSAs 
                            	**type**\:  bool
                            
                            .. attribute:: neighbor_backup_designated_router_address
                            
                            	Address of backup designated router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: neighbor_cost
                            
                            	Cost of path to this neighbor 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: neighbor_designated_router_address
                            
                            	Address of designated router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: neighbor_ignore_timer
                            
                            	Remaining time when ignore timer is running 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_option
                            
                            	 This is bitmask of neighbor's option field received 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: neighbor_retransmission
                            
                            	Retransmission information with this neighbor
                            	**type**\:  :py:class:`NeighborRetransmission <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail.NeighborRetransmission>`
                            
                            .. attribute:: next_poll_interval
                            
                            	For NBMA networks, amount of time remaining in seconds before the next poll interval expires and Hello is sent (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pending_events
                            
                            	Number of pending events 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: poll_interval
                            
                            	Poll interval (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: state_changes
                            
                            	Number of state changes 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_type = None
                                self.is_neighbor_filtered = None
                                self.neighbor_backup_designated_router_address = None
                                self.neighbor_cost = None
                                self.neighbor_designated_router_address = None
                                self.neighbor_ignore_timer = None
                                self.neighbor_option = None
                                self.neighbor_retransmission = Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail.NeighborRetransmission()
                                self.neighbor_retransmission.parent = self
                                self.next_poll_interval = None
                                self.pending_events = None
                                self.poll_interval = None
                                self.state_changes = None


                            class NeighborRetransmission(object):
                                """
                                Retransmission information with this neighbor
                                
                                .. attribute:: area_first_flood
                                
                                	First flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_first_flood_index
                                
                                	Index of the first flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_flood_index
                                
                                	Area scope LSA's flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_next_flood
                                
                                	Next flood item for area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: area_next_flood_index
                                
                                	Index of next flood item for Area scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_first_flood
                                
                                	First flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_first_flood_index
                                
                                	Index for first flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_flood_index
                                
                                	AS scope LSA's flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_next_flood
                                
                                	Next flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_next_flood_index
                                
                                	Index of next flood item for AS scope LSAs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: database_descriptor_retransmissions
                                
                                	Number of database descriptor retransmissions during last exchange
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: last_retransmission_length
                                
                                	Number of LSAs sent in last retransmission
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: last_retransmission_time
                                
                                	Last retransmission scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_first_flood
                                
                                	Link first flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_first_flood_index
                                
                                	Link first flood information index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_flood_index
                                
                                	Link flood index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_next_flood
                                
                                	Link next flood information 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: link_next_flood_index
                                
                                	Link next flood information index 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lsa_retransmission_timer
                                
                                	Time until next LSA retransmission (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_retransmission_length
                                
                                	Maximum number of LSAs sent in a retransmission
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: maximum_retransmission_time
                                
                                	Maximum retransmission scan time (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: neighbor_retransmissions
                                
                                	Number of neighbor retransmissions 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: retransmissions
                                
                                	Number of retransmissions for this neighbor
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'ipv6-ospfv3-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.area_first_flood = None
                                    self.area_first_flood_index = None
                                    self.area_flood_index = None
                                    self.area_next_flood = None
                                    self.area_next_flood_index = None
                                    self.as_first_flood = None
                                    self.as_first_flood_index = None
                                    self.as_flood_index = None
                                    self.as_next_flood = None
                                    self.as_next_flood_index = None
                                    self.database_descriptor_retransmissions = None
                                    self.last_retransmission_length = None
                                    self.last_retransmission_time = None
                                    self.link_first_flood = None
                                    self.link_first_flood_index = None
                                    self.link_flood_index = None
                                    self.link_next_flood = None
                                    self.link_next_flood_index = None
                                    self.lsa_retransmission_timer = None
                                    self.maximum_retransmission_length = None
                                    self.maximum_retransmission_time = None
                                    self.neighbor_retransmissions = None
                                    self.retransmissions = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-retransmission'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.area_first_flood is not None:
                                        return True

                                    if self.area_first_flood_index is not None:
                                        return True

                                    if self.area_flood_index is not None:
                                        return True

                                    if self.area_next_flood is not None:
                                        return True

                                    if self.area_next_flood_index is not None:
                                        return True

                                    if self.as_first_flood is not None:
                                        return True

                                    if self.as_first_flood_index is not None:
                                        return True

                                    if self.as_flood_index is not None:
                                        return True

                                    if self.as_next_flood is not None:
                                        return True

                                    if self.as_next_flood_index is not None:
                                        return True

                                    if self.database_descriptor_retransmissions is not None:
                                        return True

                                    if self.last_retransmission_length is not None:
                                        return True

                                    if self.last_retransmission_time is not None:
                                        return True

                                    if self.link_first_flood is not None:
                                        return True

                                    if self.link_first_flood_index is not None:
                                        return True

                                    if self.link_flood_index is not None:
                                        return True

                                    if self.link_next_flood is not None:
                                        return True

                                    if self.link_next_flood_index is not None:
                                        return True

                                    if self.lsa_retransmission_timer is not None:
                                        return True

                                    if self.maximum_retransmission_length is not None:
                                        return True

                                    if self.maximum_retransmission_time is not None:
                                        return True

                                    if self.neighbor_retransmissions is not None:
                                        return True

                                    if self.retransmissions is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail.NeighborRetransmission']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_type is not None:
                                    return True

                                if self.is_neighbor_filtered is not None:
                                    return True

                                if self.neighbor_backup_designated_router_address is not None:
                                    return True

                                if self.neighbor_cost is not None:
                                    return True

                                if self.neighbor_designated_router_address is not None:
                                    return True

                                if self.neighbor_ignore_timer is not None:
                                    return True

                                if self.neighbor_option is not None:
                                    return True

                                if self.neighbor_retransmission is not None and self.neighbor_retransmission._has_data():
                                    return True

                                if self.next_poll_interval is not None:
                                    return True

                                if self.pending_events is not None:
                                    return True

                                if self.poll_interval is not None:
                                    return True

                                if self.state_changes is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborDetail']['meta_info']


                        class NeighborBfdInfo(object):
                            """
                            Neighbor BFD information
                            
                            .. attribute:: bfd_intf_enable_mode
                            
                            	BFD enable mode \- Default/Strict
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: bfd_status_flag
                            
                            	Status of the BFD Session
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bfd_intf_enable_mode = None
                                self.bfd_status_flag = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-bfd-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bfd_intf_enable_mode is not None:
                                    return True

                                if self.bfd_status_flag is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail.NeighborBfdInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.is_neighbor_sham_link is not None:
                                return True

                            if self.is_neighbor_virtual_link is not None:
                                return True

                            if self.neighbor_address is not None:
                                return True

                            if self.neighbor_address_xr is not None:
                                return True

                            if self.neighbor_bfd_info is not None and self.neighbor_bfd_info._has_data():
                                return True

                            if self.neighbor_dead_timer is not None:
                                return True

                            if self.neighbor_designated_router is not None:
                                return True

                            if self.neighbor_detail is not None and self.neighbor_detail._has_data():
                                return True

                            if self.neighbor_dr_priority is not None:
                                return True

                            if self.neighbor_interface_id is not None:
                                return True

                            if self.neighbor_sham_link_id is not None:
                                return True

                            if self.neighbor_state is not None:
                                return True

                            if self.neighbor_up_time is not None:
                                return True

                            if self.neighbor_virtual_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable.NeighborDetail']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:neighbor-detail-process-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.neighbor_detail is not None:
                            for child_ref in self.neighbor_detail:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.NeighborDetailProcessTable']['meta_info']


                class DatabaseIntExternalLsas(object):
                    """
                    Internal database external LSA information
                    
                    .. attribute:: database_int_external_lsa
                    
                    	Internal database for external LSA information
                    	**type**\: list of  :py:class:`DatabaseIntExternalLsa <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa>`
                    
                    

                    """

                    _prefix = 'ipv6-ospfv3-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.database_int_external_lsa = YList()
                        self.database_int_external_lsa.parent = self
                        self.database_int_external_lsa.name = 'database_int_external_lsa'


                    class DatabaseIntExternalLsa(object):
                        """
                        Internal database for external LSA information
                        
                        .. attribute:: advertising_router
                        
                        	Advertising Router ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: external_tag
                        
                        	Route Tag
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: forwarding_address
                        
                        	Forwarding Address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: is_forwarding_address_set
                        
                        	If true, forwarding address is set 
                        	**type**\:  bool
                        
                        .. attribute:: ls_id
                        
                        	Link state ID
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: lsa_detail
                        
                        	Detailed LSA Information
                        	**type**\:  :py:class:`LsaDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaDetail>`
                        
                        .. attribute:: lsa_header
                        
                        	Header information 
                        	**type**\:  :py:class:`LsaHeader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaHeader>`
                        
                        .. attribute:: lsa_type
                        
                        	LSA type
                        	**type**\:  :py:class:`Ospfv3LsaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3LsaEnum>`
                        
                        .. attribute:: metric_type
                        
                        	Metric type 
                        	**type**\:  :py:class:`Ospfv3DefaultMetricEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.Ospfv3DefaultMetricEnum>`
                        
                        .. attribute:: prefix
                        
                        	Prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..128
                        
                        .. attribute:: prefix_length_xr
                        
                        	Prefix length 
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: prefix_xr
                        
                        	IPV6 address prefix 
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: priority
                        
                        	Prefix priority
                        	**type**\:  :py:class:`PrefixPriorityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.PrefixPriorityEnum>`
                        
                        .. attribute:: tos_cost
                        
                        	Type of service cost metric 
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv6-ospfv3-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.advertising_router = None
                            self.external_tag = None
                            self.forwarding_address = None
                            self.is_forwarding_address_set = None
                            self.ls_id = None
                            self.lsa_detail = Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaDetail()
                            self.lsa_detail.parent = self
                            self.lsa_header = Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaHeader()
                            self.lsa_header.parent = self
                            self.lsa_type = None
                            self.metric_type = None
                            self.prefix = None
                            self.prefix_length = None
                            self.prefix_length_xr = None
                            self.prefix_xr = None
                            self.priority = None
                            self.tos_cost = None


                        class LsaHeader(object):
                            """
                            Header information 
                            
                            .. attribute:: advertising_router
                            
                            	Router ID of Advertising Router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: checksum
                            
                            	Checksum value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: is_do_not_age_lsa
                            
                            	If true, Do Not Age this LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_graceful_restart_active
                            
                            	If true, if grace restart is active 
                            	**type**\:  bool
                            
                            .. attribute:: ls_id
                            
                            	LS ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lsa_age
                            
                            	LSA's Age (s)
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsa_area_id
                            
                            	Area ID in decimal or dotted\-decimal format
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            .. attribute:: lsa_type
                            
                            	LSA type
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: sequence_number
                            
                            	Current Sequence number
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.advertising_router = None
                                self.checksum = None
                                self.is_do_not_age_lsa = None
                                self.is_graceful_restart_active = None
                                self.ls_id = None
                                self.lsa_age = None
                                self.lsa_area_id = None
                                self.lsa_type = None
                                self.sequence_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-header'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.advertising_router is not None:
                                    return True

                                if self.checksum is not None:
                                    return True

                                if self.is_do_not_age_lsa is not None:
                                    return True

                                if self.is_graceful_restart_active is not None:
                                    return True

                                if self.ls_id is not None:
                                    return True

                                if self.lsa_age is not None:
                                    return True

                                if self.lsa_area_id is not None:
                                    return True

                                if self.lsa_type is not None:
                                    return True

                                if self.sequence_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaHeader']['meta_info']


                        class LsaDetail(object):
                            """
                            Detailed LSA Information
                            
                            .. attribute:: free_time
                            
                            	The amount of time since the last check was made to free this LSA (s)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: is_acknowledged
                            
                            	If true, the reason not to delete this LSA is because it's Acknowledgement list is not empty 
                            	**type**\:  bool
                            
                            .. attribute:: is_advertising_router_reachable
                            
                            	If true, Advertising Router is reachable
                            	**type**\:  bool
                            
                            .. attribute:: is_deleted
                            
                            	If true, flag is set to delete this LSA 
                            	**type**\:  bool
                            
                            .. attribute:: is_flood_pending
                            
                            	If true, the reason not to delete this LSA is because waiting for flooding or retransmission
                            	**type**\:  bool
                            
                            .. attribute:: is_maximum_aged
                            
                            	If true, the reason not to delete this LSA is because it is in Maxage Queue
                            	**type**\:  bool
                            
                            .. attribute:: is_neighbor_exchange
                            
                            	If true, the reason  not to delete this LSA is because neighbor is in exchange state
                            	**type**\:  bool
                            
                            .. attribute:: is_no_delete
                            
                            	If true, the reason not to delete this LSA is because delete flag not set on this LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_nsr_ack_pending
                            
                            	If true, the reason not to delete this LSA is because NSR ACK from standby is pending
                            	**type**\:  bool
                            
                            .. attribute:: is_partial_spf
                            
                            	If true, the reason not to delete this LSA is because it is in partial SPF queue
                            	**type**\:  bool
                            
                            .. attribute:: is_routing_bit
                            
                            	If true, Routing Bit set on the LSA
                            	**type**\:  bool
                            
                            .. attribute:: is_routing_table
                            
                            	If true, the reason  not to delete this LSA is because it has a contributing entry in the routing table 
                            	**type**\:  bool
                            
                            .. attribute:: lsa_flood_required_post_fail_over
                            
                            	LSA flood required after FO
                            	**type**\:  bool
                            
                            .. attribute:: lsa_length
                            
                            	Length of the LSA
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsa_sync_state
                            
                            	State of LSA sync with active
                            	**type**\:  :py:class:`OspfLsaSyncStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv6_ospfv3_oper.OspfLsaSyncStateEnum>`
                            
                            .. attribute:: minute_table_index
                            
                            	Minute table index
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: nsr_flood_required
                            
                            	If true, the reason not to delete this LSA is because it is pending flooding on switchover
                            	**type**\:  bool
                            
                            .. attribute:: rate_limit
                            
                            	If true, the reason not to delete this LSA is because waiting for next wait\-interval to expire
                            	**type**\:  bool
                            
                            .. attribute:: second_table_index
                            
                            	Second table index
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'ipv6-ospfv3-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.free_time = None
                                self.is_acknowledged = None
                                self.is_advertising_router_reachable = None
                                self.is_deleted = None
                                self.is_flood_pending = None
                                self.is_maximum_aged = None
                                self.is_neighbor_exchange = None
                                self.is_no_delete = None
                                self.is_nsr_ack_pending = None
                                self.is_partial_spf = None
                                self.is_routing_bit = None
                                self.is_routing_table = None
                                self.lsa_flood_required_post_fail_over = None
                                self.lsa_length = None
                                self.lsa_sync_state = None
                                self.minute_table_index = None
                                self.nsr_flood_required = None
                                self.rate_limit = None
                                self.second_table_index = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:lsa-detail'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.free_time is not None:
                                    return True

                                if self.is_acknowledged is not None:
                                    return True

                                if self.is_advertising_router_reachable is not None:
                                    return True

                                if self.is_deleted is not None:
                                    return True

                                if self.is_flood_pending is not None:
                                    return True

                                if self.is_maximum_aged is not None:
                                    return True

                                if self.is_neighbor_exchange is not None:
                                    return True

                                if self.is_no_delete is not None:
                                    return True

                                if self.is_nsr_ack_pending is not None:
                                    return True

                                if self.is_partial_spf is not None:
                                    return True

                                if self.is_routing_bit is not None:
                                    return True

                                if self.is_routing_table is not None:
                                    return True

                                if self.lsa_flood_required_post_fail_over is not None:
                                    return True

                                if self.lsa_length is not None:
                                    return True

                                if self.lsa_sync_state is not None:
                                    return True

                                if self.minute_table_index is not None:
                                    return True

                                if self.nsr_flood_required is not None:
                                    return True

                                if self.rate_limit is not None:
                                    return True

                                if self.second_table_index is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                                return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa.LsaDetail']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-external-lsa'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.advertising_router is not None:
                                return True

                            if self.external_tag is not None:
                                return True

                            if self.forwarding_address is not None:
                                return True

                            if self.is_forwarding_address_set is not None:
                                return True

                            if self.ls_id is not None:
                                return True

                            if self.lsa_detail is not None and self.lsa_detail._has_data():
                                return True

                            if self.lsa_header is not None and self.lsa_header._has_data():
                                return True

                            if self.lsa_type is not None:
                                return True

                            if self.metric_type is not None:
                                return True

                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.prefix_length_xr is not None:
                                return True

                            if self.prefix_xr is not None:
                                return True

                            if self.priority is not None:
                                return True

                            if self.tos_cost is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                            return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas.DatabaseIntExternalLsa']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:database-int-external-lsas'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.database_int_external_lsa is not None:
                            for child_ref in self.database_int_external_lsa:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                        return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf.DatabaseIntExternalLsas']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-ipv6-ospfv3-oper:default-vrf'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.area_informations is not None and self.area_informations._has_data():
                        return True

                    if self.areas is not None and self.areas._has_data():
                        return True

                    if self.bad_checksums is not None and self.bad_checksums._has_data():
                        return True

                    if self.border_routers is not None and self.border_routers._has_data():
                        return True

                    if self.connected_routes is not None and self.connected_routes._has_data():
                        return True

                    if self.database_areas is not None and self.database_areas._has_data():
                        return True

                    if self.database_external_lsas is not None and self.database_external_lsas._has_data():
                        return True

                    if self.database_int_external_lsas is not None and self.database_int_external_lsas._has_data():
                        return True

                    if self.database_int_unknown_as_lsas is not None and self.database_int_unknown_as_lsas._has_data():
                        return True

                    if self.database_summary_areas is not None and self.database_summary_areas._has_data():
                        return True

                    if self.database_summary_process_table is not None and self.database_summary_process_table._has_data():
                        return True

                    if self.database_unknown_as_lsas is not None and self.database_unknown_as_lsas._has_data():
                        return True

                    if self.external_routes is not None and self.external_routes._has_data():
                        return True

                    if self.fast_reroutes is not None and self.fast_reroutes._has_data():
                        return True

                    if self.flood_list_process_table is not None and self.flood_list_process_table._has_data():
                        return True

                    if self.interface_brief_process_table is not None and self.interface_brief_process_table._has_data():
                        return True

                    if self.interface_process_table is not None and self.interface_process_table._has_data():
                        return True

                    if self.internal_routes is not None and self.internal_routes._has_data():
                        return True

                    if self.neighbor_detail_process_table is not None and self.neighbor_detail_process_table._has_data():
                        return True

                    if self.neighbor_process_table is not None and self.neighbor_process_table._has_data():
                        return True

                    if self.protocol_areas is not None and self.protocol_areas._has_data():
                        return True

                    if self.redistributions is not None and self.redistributions._has_data():
                        return True

                    if self.request_list_process_table is not None and self.request_list_process_table._has_data():
                        return True

                    if self.retransmission_list_process_table is not None and self.retransmission_list_process_table._has_data():
                        return True

                    if self.route_summary is not None and self.route_summary._has_data():
                        return True

                    if self.sham_link_table is not None and self.sham_link_table._has_data():
                        return True

                    if self.summary is not None and self.summary._has_data():
                        return True

                    if self.summary_prefixes is not None and self.summary_prefixes._has_data():
                        return True

                    if self.virtual_link is not None and self.virtual_link._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                    return meta._meta_table['Ospfv3.Processes.Process.DefaultVrf']['meta_info']

            @property
            def _common_path(self):
                if self.process_name is None:
                    raise YPYModelError('Key property process_name is None')

                return '/Cisco-IOS-XR-ipv6-ospfv3-oper:ospfv3/Cisco-IOS-XR-ipv6-ospfv3-oper:processes/Cisco-IOS-XR-ipv6-ospfv3-oper:process[Cisco-IOS-XR-ipv6-ospfv3-oper:process-name = ' + str(self.process_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.process_name is not None:
                    return True

                if self.default_vrf is not None and self.default_vrf._has_data():
                    return True

                if self.vrfs is not None and self.vrfs._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
                return meta._meta_table['Ospfv3.Processes.Process']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-ipv6-ospfv3-oper:ospfv3/Cisco-IOS-XR-ipv6-ospfv3-oper:processes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.process is not None:
                for child_ref in self.process:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
            return meta._meta_table['Ospfv3.Processes']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-ipv6-ospfv3-oper:ospfv3'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.processes is not None and self.processes._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv6_ospfv3_oper as meta
        return meta._meta_table['Ospfv3']['meta_info']


