""" Cisco_IOS_XR_fib_common_oper 

This module contains a collection of YANG definitions
for Cisco IOS\-XR fib\-common package operational data.

This module contains definitions
for the following management objects\:
  fib\-statistics\: cef interface drops operational data
  fib\: fib
  mpls\-forwarding\: mpls forwarding
  fib\-mpls\: fib mpls

Copyright (c) 2013\-2015 by Cisco Systems, Inc.
All rights reserved.

"""


import re
import collections

from enum import Enum

from ydk.types import Empty, YList, YLeafList, DELETE, Decimal64, FixedBitsDict

from ydk.errors import YPYError, YPYModelError



class EosEnum(Enum):
    """
    EosEnum

    Eos

    .. data:: EOS0 = 0

    	EOS Disable

    .. data:: EOS1 = 1

    	EOS Enable

    """

    EOS0 = 0

    EOS1 = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['EosEnum']


class FibAdjacencyShowEnum(Enum):
    """
    FibAdjacencyShowEnum

    Adjacency types

    .. data:: FIB_ADJACENCY_NORMAL = 0

    	Normal adjacency

    .. data:: FIB_ADJACENCY_NULL = 1

    	Null adjacency

    .. data:: FIB_ADJACENCY_PUNT = 2

    	Punt adjacency

    .. data:: FIB_ADJACENCY_DROP = 3

    	Drop adjacency

    .. data:: FIB_ADJACENCY_GLEAN = 4

    	Glean adjacency

    .. data:: FIB_ADJACENCY_DISCARD = 5

    	Discard adjacency

    .. data:: FIB_ADJACENCY_BROADCAST = 6

    	Broadcast adjacency

    .. data:: FIB_ADJACENCY_EXTERNAL = 7

    	external adjacency

    .. data:: FIB_ADJACENCY_LISP = 8

    	LISP adjacency

    .. data:: FIB_ADJACENCY_UNKNOWN = 9

    	Unknown adjacency

    """

    FIB_ADJACENCY_NORMAL = 0

    FIB_ADJACENCY_NULL = 1

    FIB_ADJACENCY_PUNT = 2

    FIB_ADJACENCY_DROP = 3

    FIB_ADJACENCY_GLEAN = 4

    FIB_ADJACENCY_DISCARD = 5

    FIB_ADJACENCY_BROADCAST = 6

    FIB_ADJACENCY_EXTERNAL = 7

    FIB_ADJACENCY_LISP = 8

    FIB_ADJACENCY_UNKNOWN = 9


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibAdjacencyShowEnum']


class FibFrrProtocolShowEnum(Enum):
    """
    FibFrrProtocolShowEnum

    Fib frr protocol show

    .. data:: FRR_PROTOCOL_IPV4 = 0

    	frr protocol ipv4

    .. data:: FRR_PROTOCOL_IPV6 = 1

    	frr protocol ipv6

    .. data:: FRR_PROTOCOL_MPLS = 2

    	frr protocol mpls

    """

    FRR_PROTOCOL_IPV4 = 0

    FRR_PROTOCOL_IPV6 = 1

    FRR_PROTOCOL_MPLS = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibFrrProtocolShowEnum']


class FibLinkEnum(Enum):
    """
    FibLinkEnum

    Fib link

    .. data:: LINK_IPV4 = 0

    	IPv4 link protocol

    .. data:: LINK_IPV6 = 1

    	IPv6 link protocol

    .. data:: LINK_MPLS = 2

    	MPLS link protocol

    """

    LINK_IPV4 = 0

    LINK_IPV6 = 1

    LINK_MPLS = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibLinkEnum']


class FibLoadshareShowEnum(Enum):
    """
    FibLoadshareShowEnum

    Loadsharing type

    .. data:: FIB_LOAD_SHARE_NONE = 0

    	No loadsharing

    .. data:: FIB_LOAD_SHARE_PER_PACKET = 1

    	Per packet loadsharing

    .. data:: FIB_LOAD_SHARE_DEST_SHARING = 2

    	Destination loadsharing

    """

    FIB_LOAD_SHARE_NONE = 0

    FIB_LOAD_SHARE_PER_PACKET = 1

    FIB_LOAD_SHARE_DEST_SHARING = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibLoadshareShowEnum']


class FibNehEnum(Enum):
    """
    FibNehEnum

    Fib neh

    .. data:: NH_LOCAL = 0

    	nh local

    .. data:: NH_REMOTE = 1

    	nh remote

    .. data:: NH_SPECIAL = 2

    	nh special

    """

    NH_LOCAL = 0

    NH_REMOTE = 1

    NH_SPECIAL = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibNehEnum']


class FibNehSpecialEnum(Enum):
    """
    FibNehSpecialEnum

    Fib neh special

    .. data:: NH_NOT_FOUND = 0

    	nh not found

    .. data:: NH_NULL0 = 1

    	nh null0

    .. data:: NH_PUNT = 2

    	nh punt

    .. data:: NH_DROP = 3

    	nh drop

    .. data:: NH_GLEAN = 4

    	nh glean

    .. data:: NH_RECEIVE = 5

    	nh receive

    .. data:: NH_BROADCAST = 6

    	nh broadcast

    .. data:: NH_EXTERNAL = 7

    	nh external

    .. data:: NH_LISP = 8

    	nh lisp

    .. data:: NH_LOOKUP = 9

    	nh lookup

    .. data:: NH_MAX_TYPE = 10

    	nh max type

    """

    NH_NOT_FOUND = 0

    NH_NULL0 = 1

    NH_PUNT = 2

    NH_DROP = 3

    NH_GLEAN = 4

    NH_RECEIVE = 5

    NH_BROADCAST = 6

    NH_EXTERNAL = 7

    NH_LISP = 8

    NH_LOOKUP = 9

    NH_MAX_TYPE = 10


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibNehSpecialEnum']


class FibProtocolEnum(Enum):
    """
    FibProtocolEnum

    Fib protocol

    .. data:: IPV4 = 0

    	ipv4 protocol

    .. data:: IPV6 = 1

    	ipv6 protocol

    .. data:: MPLS = 2

    	MPLS protocol

    """

    IPV4 = 0

    IPV6 = 1

    MPLS = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibProtocolEnum']


class FibRouteSourceEnum(Enum):
    """
    FibRouteSourceEnum

    Fib route source

    .. data:: LSD = 5

    	LSD

    .. data:: RIB = 7

    	RIB

    .. data:: MRIB = 13

    	MRIB

    """

    LSD = 5

    RIB = 7

    MRIB = 13


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibRouteSourceEnum']


class FibRpfModeEnum(Enum):
    """
    FibRpfModeEnum

    RPF mode types

    .. data:: FIB_RPF_MODE_STRICT = 0

    	RPF mode strict

    .. data:: FIB_RPF_MODE_LOOSE = 1

    	RPF mode loose

    .. data:: FIB_RPF_MODE_UNKNOWN = 2

    	RPF mode unknown

    """

    FIB_RPF_MODE_STRICT = 0

    FIB_RPF_MODE_LOOSE = 1

    FIB_RPF_MODE_UNKNOWN = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibRpfModeEnum']


class FibShIpencapHdrEnum(Enum):
    """
    FibShIpencapHdrEnum

    IP Encap Header Type

    .. data:: FIB_SH_IP_ENCAP_NONE = 0

    	No Header

    .. data:: FIB_SH_IP_ENCAP_IP4 = 1

    	IPv4 Header

    .. data:: FIB_SH_IP_ENCAP_IP6 = 2

    	IPv6 Header

    .. data:: FIB_SH_IP_ENCAP_UDP = 3

    	UDP Header

    .. data:: FIB_SH_IP_ENCAP_LISP = 4

    	Lisp Header

    """

    FIB_SH_IP_ENCAP_NONE = 0

    FIB_SH_IP_ENCAP_IP4 = 1

    FIB_SH_IP_ENCAP_IP6 = 2

    FIB_SH_IP_ENCAP_UDP = 3

    FIB_SH_IP_ENCAP_LISP = 4


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibShIpencapHdrEnum']


class FibidbOperEnum(Enum):
    """
    FibidbOperEnum

    Fibidb oper

    .. data:: FIBIDB_NONE = 0

    	fibidb none

    .. data:: FIBIDB_CREATE = 1

    	fibidb create

    .. data:: FIBIDB_DELETE = 2

    	fibidb delete

    .. data:: FIBIDB_MODIFY = 3

    	fibidb modify

    .. data:: FIBIDB_MAX = 4

    	fibidb max

    """

    FIBIDB_NONE = 0

    FIBIDB_CREATE = 1

    FIBIDB_DELETE = 2

    FIBIDB_MODIFY = 3

    FIBIDB_MAX = 4


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibidbOperEnum']


class FibllcEntryEnum(Enum):
    """
    FibllcEntryEnum

    Fibllc entry

    .. data:: XC = 1

    	LabelXconnect

    .. data:: PFX = 2

    	IPPrefix

    """

    XC = 1

    PFX = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibllcEntryEnum']


class MgmtFibMplsFrrStateEnum(Enum):
    """
    MgmtFibMplsFrrStateEnum

    MPLS FRR entry state

    .. data:: PARTIAL = 0

    	Partial

    .. data:: ACTIVE = 1

    	Active

    .. data:: READY = 2

    	Ready

    .. data:: COMPLETE = 3

    	Complete

    .. data:: ANY = 4

    	Any

    """

    PARTIAL = 0

    ACTIVE = 1

    READY = 2

    COMPLETE = 3

    ANY = 4


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['MgmtFibMplsFrrStateEnum']


class MgmtFibMplsLspRoleEnum(Enum):
    """
    MgmtFibMplsLspRoleEnum

    MPLS FRR entry role

    .. data:: HEAD = 0

    	Head

    .. data:: MIDPOINT = 1

    	Midpoint

    """

    HEAD = 0

    MIDPOINT = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['MgmtFibMplsLspRoleEnum']


class MplseosEnum(Enum):
    """
    MplseosEnum

    Mplseos

    .. data:: EOS0 = 0

    	EOS Disable

    .. data:: EOS1 = 1

    	EOS Enable

    """

    EOS0 = 0

    EOS1 = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['MplseosEnum']


class NextHopEnum(Enum):
    """
    NextHopEnum

    MPLS Forwarding Next Hop Type

    .. data:: TX = 0

    	TX

    .. data:: RX = 1

    	RX

    .. data:: SPECIAL = 2

    	Special

    """

    TX = 0

    RX = 1

    SPECIAL = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['NextHopEnum']


class ProtoEnum(Enum):
    """
    ProtoEnum

    MPLS Forwarding Protocol Type

    .. data:: IPV4 = 0

    	IPv4

    .. data:: IPV6 = 1

    	IPv6

    .. data:: MPLS = 2

    	MPLS

    """

    IPV4 = 0

    IPV6 = 1

    MPLS = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['ProtoEnum']


class SsLbaStateEnum(Enum):
    """
    SsLbaStateEnum

    Load Balance config

    .. data:: L3 = 0

    	L3 Load Balance config

    .. data:: L4 = 1

    	L4 Load Balance config

    """

    L3 = 0

    L4 = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['SsLbaStateEnum']



class FibStatistics(object):
    """
    cef interface drops operational data
    
    .. attribute:: nodes
    
    	List of nodes
    	**type**\:  :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibStatistics.Nodes>`
    
    

    """

    _prefix = 'fib-common-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.nodes = FibStatistics.Nodes()
        self.nodes.parent = self


    class Nodes(object):
        """
        List of nodes
        
        .. attribute:: node
        
        	Specific node operational data
        	**type**\: list of  :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibStatistics.Nodes.Node>`
        
        

        """

        _prefix = 'fib-common-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.node = YList()
            self.node.parent = self
            self.node.name = 'node'


        class Node(object):
            """
            Specific node operational data
            
            .. attribute:: node_name  <key>
            
            	Node name
            	**type**\:  str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            .. attribute:: drops
            
            	Specific node drops
            	**type**\:  :py:class:`Drops <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibStatistics.Nodes.Node.Drops>`
            
            

            """

            _prefix = 'fib-common-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node_name = None
                self.drops = FibStatistics.Nodes.Node.Drops()
                self.drops.parent = self


            class Drops(object):
                """
                Specific node drops
                
                .. attribute:: acl_in_rpf_packets
                
                	ACL in RPF pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: checksum_error_packets
                
                	checksum error pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: df_unreachable_packets
                
                	DF unreachable pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: discard_packets
                
                	discard pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: encapsulation_failure_packets
                
                	encapsulation failure pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: fragmenation_consumed_packets
                
                	frag consumed packet pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: fragmenation_failure_packets
                
                	fragmenation failure pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: gre_error_drop
                
                	GRE processing errors
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: gre_lookup_failed_drop
                
                	GRE tunnel lookup failed drop pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: incomplete_adjacency_packets
                
                	incomplete adjacency pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: lisp_decap_error_drops
                
                	Lisp decap error drops
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: lisp_encap_error_drops
                
                	Lisp encap error drops
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: lisp_punt_drops
                
                	LISP Punt drops
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: mpls_disabled_interface
                
                	mpls disabled in interface
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: multi_label_drops
                
                	Drops for the packets with multi[le labels
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: no_route_packets
                
                	no route pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: null_packets
                
                	null0 pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: punt_unreachable_packets
                
                	Punt generate unreach pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rp_destination_drop_packets
                
                	rp dest drop pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rpf_check_failure_packets
                
                	RPF check failures pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: total_number_of_drop_packets
                
                	the total number of drop pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: unresolved_prefix_packets
                
                	unresolved prefix pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: unsupported_feature_packets
                
                	unsupported feature pkt
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.acl_in_rpf_packets = None
                    self.checksum_error_packets = None
                    self.df_unreachable_packets = None
                    self.discard_packets = None
                    self.encapsulation_failure_packets = None
                    self.fragmenation_consumed_packets = None
                    self.fragmenation_failure_packets = None
                    self.gre_error_drop = None
                    self.gre_lookup_failed_drop = None
                    self.incomplete_adjacency_packets = None
                    self.lisp_decap_error_drops = None
                    self.lisp_encap_error_drops = None
                    self.lisp_punt_drops = None
                    self.mpls_disabled_interface = None
                    self.multi_label_drops = None
                    self.no_route_packets = None
                    self.null_packets = None
                    self.punt_unreachable_packets = None
                    self.rp_destination_drop_packets = None
                    self.rpf_check_failure_packets = None
                    self.total_number_of_drop_packets = None
                    self.unresolved_prefix_packets = None
                    self.unsupported_feature_packets = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:drops'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.acl_in_rpf_packets is not None:
                        return True

                    if self.checksum_error_packets is not None:
                        return True

                    if self.df_unreachable_packets is not None:
                        return True

                    if self.discard_packets is not None:
                        return True

                    if self.encapsulation_failure_packets is not None:
                        return True

                    if self.fragmenation_consumed_packets is not None:
                        return True

                    if self.fragmenation_failure_packets is not None:
                        return True

                    if self.gre_error_drop is not None:
                        return True

                    if self.gre_lookup_failed_drop is not None:
                        return True

                    if self.incomplete_adjacency_packets is not None:
                        return True

                    if self.lisp_decap_error_drops is not None:
                        return True

                    if self.lisp_encap_error_drops is not None:
                        return True

                    if self.lisp_punt_drops is not None:
                        return True

                    if self.mpls_disabled_interface is not None:
                        return True

                    if self.multi_label_drops is not None:
                        return True

                    if self.no_route_packets is not None:
                        return True

                    if self.null_packets is not None:
                        return True

                    if self.punt_unreachable_packets is not None:
                        return True

                    if self.rp_destination_drop_packets is not None:
                        return True

                    if self.rpf_check_failure_packets is not None:
                        return True

                    if self.total_number_of_drop_packets is not None:
                        return True

                    if self.unresolved_prefix_packets is not None:
                        return True

                    if self.unsupported_feature_packets is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['FibStatistics.Nodes.Node.Drops']['meta_info']

            @property
            def _common_path(self):
                if self.node_name is None:
                    raise YPYModelError('Key property node_name is None')

                return '/Cisco-IOS-XR-fib-common-oper:fib-statistics/Cisco-IOS-XR-fib-common-oper:nodes/Cisco-IOS-XR-fib-common-oper:node[Cisco-IOS-XR-fib-common-oper:node-name = ' + str(self.node_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node_name is not None:
                    return True

                if self.drops is not None and self.drops._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                return meta._meta_table['FibStatistics.Nodes.Node']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-fib-common-oper:fib-statistics/Cisco-IOS-XR-fib-common-oper:nodes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.node is not None:
                for child_ref in self.node:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
            return meta._meta_table['FibStatistics.Nodes']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-fib-common-oper:fib-statistics'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.nodes is not None and self.nodes._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibStatistics']['meta_info']


class Fib(object):
    """
    fib
    
    .. attribute:: nodes
    
    	Table of nodes
    	**type**\:  :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes>`
    
    

    """

    _prefix = 'fib-common-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.nodes = Fib.Nodes()
        self.nodes.parent = self


    class Nodes(object):
        """
        Table of nodes
        
        .. attribute:: node
        
        	Operational data for a specific Node
        	**type**\: list of  :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node>`
        
        

        """

        _prefix = 'fib-common-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.node = YList()
            self.node.parent = self
            self.node.name = 'node'


        class Node(object):
            """
            Operational data for a specific Node
            
            .. attribute:: node_name  <key>
            
            	Node name
            	**type**\:  str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            .. attribute:: protocols
            
            	Protocol table
            	**type**\:  :py:class:`Protocols <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols>`
            
            

            """

            _prefix = 'fib-common-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node_name = None
                self.protocols = Fib.Nodes.Node.Protocols()
                self.protocols.parent = self


            class Protocols(object):
                """
                Protocol table
                
                .. attribute:: protocol
                
                	Protocol table entry
                	**type**\: list of  :py:class:`Protocol <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol>`
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.protocol = YList()
                    self.protocol.parent = self
                    self.protocol.name = 'protocol'


                class Protocol(object):
                    """
                    Protocol table entry
                    
                    .. attribute:: protocol_name  <key>
                    
                    	Protocol Name 
                    	**type**\:  :py:class:`FibProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibProtocolEnum>`
                    
                    .. attribute:: frr_log
                    
                    	Table of Fast Reroute activation logs
                    	**type**\:  :py:class:`FrrLog <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.FrrLog>`
                    
                    .. attribute:: issu_state
                    
                    	CEF ISSU State
                    	**type**\:  :py:class:`IssuState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.IssuState>`
                    
                    .. attribute:: local_label
                    
                    	Local label
                    	**type**\:  :py:class:`LocalLabel <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.LocalLabel>`
                    
                    .. attribute:: misc
                    
                    	CEF misc hidden data
                    	**type**\:  :py:class:`Misc <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc>`
                    
                    .. attribute:: vrfs
                    
                    	VRF table
                    	**type**\:  :py:class:`Vrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.protocol_name = None
                        self.frr_log = Fib.Nodes.Node.Protocols.Protocol.FrrLog()
                        self.frr_log.parent = self
                        self.issu_state = Fib.Nodes.Node.Protocols.Protocol.IssuState()
                        self.issu_state.parent = self
                        self.local_label = Fib.Nodes.Node.Protocols.Protocol.LocalLabel()
                        self.local_label.parent = self
                        self.misc = Fib.Nodes.Node.Protocols.Protocol.Misc()
                        self.misc.parent = self
                        self.vrfs = Fib.Nodes.Node.Protocols.Protocol.Vrfs()
                        self.vrfs.parent = self


                    class IssuState(object):
                        """
                        CEF ISSU State
                        
                        .. attribute:: eoc_received_imdr_time_stamp
                        
                        	End\-of\-config received from IMDR timestamp
                        	**type**\:  str
                        
                        	**range:** 0..33
                        
                        .. attribute:: eoc_received_slc_time_stamp
                        
                        	End\-of\-config received from SLC timestamp
                        	**type**\:  str
                        
                        	**range:** 0..33
                        
                        .. attribute:: eod_received_im_time_stamp
                        
                        	End\-of\-download received from IM timestamp
                        	**type**\:  str
                        
                        	**range:** 0..33
                        
                        .. attribute:: eod_sent_imdr_time_stamp
                        
                        	End\-of\-download send to IMDR timestamp
                        	**type**\:  str
                        
                        	**range:** 0..33
                        
                        .. attribute:: eod_sent_slc_time_stamp
                        
                        	End\-of\-download send to SLC timestamp
                        	**type**\:  str
                        
                        	**range:** 0..33
                        
                        .. attribute:: fis_issu_error_ts
                        
                        	ISSU error sent to ISSUMGR timetstamp
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: fis_issu_restart
                        
                        	ISSU restart
                        	**type**\:  bool
                        
                        .. attribute:: fis_proto_state
                        
                        	IMDR state for the protocols
                        	**type**\: list of  :py:class:`FisProtoState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.IssuState.FisProtoState>`
                        
                        .. attribute:: imdr_eoc_implicit
                        
                        	IMDR End\-of\-config implicit
                        	**type**\:  bool
                        
                        .. attribute:: imdr_support
                        
                        	IMDR supported
                        	**type**\:  bool
                        
                        .. attribute:: slc_eoc_implicit
                        
                        	SLC End\-of\-config implicit
                        	**type**\:  bool
                        
                        .. attribute:: slc_support
                        
                        	SLC supported
                        	**type**\:  bool
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.eoc_received_imdr_time_stamp = None
                            self.eoc_received_slc_time_stamp = None
                            self.eod_received_im_time_stamp = None
                            self.eod_sent_imdr_time_stamp = None
                            self.eod_sent_slc_time_stamp = None
                            self.fis_issu_error_ts = None
                            self.fis_issu_restart = None
                            self.fis_proto_state = YList()
                            self.fis_proto_state.parent = self
                            self.fis_proto_state.name = 'fis_proto_state'
                            self.imdr_eoc_implicit = None
                            self.imdr_support = None
                            self.slc_eoc_implicit = None
                            self.slc_support = None


                        class FisProtoState(object):
                            """
                            IMDR state for the protocols
                            
                            .. attribute:: aib_eod_time_stamp
                            
                            	AIB EODTimeStamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: bcdl_tables
                            
                            	Number of BCDL tables
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: converged_tables
                            
                            	Number of tables converged
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lmrib_eod_time_stamp
                            
                            	LMRIB EOD received timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: lmrib_eod_valid
                            
                            	LMRIB EOD expected/valid
                            	**type**\:  bool
                            
                            .. attribute:: lsd_eod_time_stamp
                            
                            	LSD EOD received timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: lsd_eod_valid
                            
                            	LSD EOD expected/valid
                            	**type**\:  bool
                            
                            .. attribute:: protocol_eod_time_stamp
                            
                            	Protocol EOD sent timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: protocol_eod_valid
                            
                            	Protocol EOD expected/valid
                            	**type**\:  bool
                            
                            .. attribute:: protocol_name
                            
                            	Protocol name
                            	**type**\:  str
                            
                            	**range:** 0..6
                            
                            .. attribute:: rib_info_valid
                            
                            	RIB table info valid
                            	**type**\:  bool
                            
                            .. attribute:: rib_tables_converged_time_stamp
                            
                            	All RIB tables converged timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: rsi_eod_time_stamp
                            
                            	RSI EOD received timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: rsi_eod_valid
                            
                            	RSI EOD expected/valid
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.aib_eod_time_stamp = None
                                self.bcdl_tables = None
                                self.converged_tables = None
                                self.lmrib_eod_time_stamp = None
                                self.lmrib_eod_valid = None
                                self.lsd_eod_time_stamp = None
                                self.lsd_eod_valid = None
                                self.protocol_eod_time_stamp = None
                                self.protocol_eod_valid = None
                                self.protocol_name = None
                                self.rib_info_valid = None
                                self.rib_tables_converged_time_stamp = None
                                self.rsi_eod_time_stamp = None
                                self.rsi_eod_valid = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fis-proto-state'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.aib_eod_time_stamp is not None:
                                    return True

                                if self.bcdl_tables is not None:
                                    return True

                                if self.converged_tables is not None:
                                    return True

                                if self.lmrib_eod_time_stamp is not None:
                                    return True

                                if self.lmrib_eod_valid is not None:
                                    return True

                                if self.lsd_eod_time_stamp is not None:
                                    return True

                                if self.lsd_eod_valid is not None:
                                    return True

                                if self.protocol_eod_time_stamp is not None:
                                    return True

                                if self.protocol_eod_valid is not None:
                                    return True

                                if self.protocol_name is not None:
                                    return True

                                if self.rib_info_valid is not None:
                                    return True

                                if self.rib_tables_converged_time_stamp is not None:
                                    return True

                                if self.rsi_eod_time_stamp is not None:
                                    return True

                                if self.rsi_eod_valid is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.IssuState.FisProtoState']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:issu-state'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.eoc_received_imdr_time_stamp is not None:
                                return True

                            if self.eoc_received_slc_time_stamp is not None:
                                return True

                            if self.eod_received_im_time_stamp is not None:
                                return True

                            if self.eod_sent_imdr_time_stamp is not None:
                                return True

                            if self.eod_sent_slc_time_stamp is not None:
                                return True

                            if self.fis_issu_error_ts is not None:
                                return True

                            if self.fis_issu_restart is not None:
                                return True

                            if self.fis_proto_state is not None:
                                for child_ref in self.fis_proto_state:
                                    if child_ref._has_data():
                                        return True

                            if self.imdr_eoc_implicit is not None:
                                return True

                            if self.imdr_support is not None:
                                return True

                            if self.slc_eoc_implicit is not None:
                                return True

                            if self.slc_support is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.IssuState']['meta_info']


                    class FrrLog(object):
                        """
                        Table of Fast Reroute activation logs
                        
                        .. attribute:: frr_interfaces
                        
                        	FRR Interface Table
                        	**type**\:  :py:class:`FrrInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces>`
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.frr_interfaces = Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces()
                            self.frr_interfaces.parent = self


                        class FrrInterfaces(object):
                            """
                            FRR Interface Table
                            
                            .. attribute:: frr_interface
                            
                            	Specify FRR Interface Name
                            	**type**\: list of  :py:class:`FrrInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.frr_interface = YList()
                                self.frr_interface.parent = self
                                self.frr_interface.name = 'frr_interface'


                            class FrrInterface(object):
                                """
                                Specify FRR Interface Name
                                
                                .. attribute:: frr_interface_name  <key>
                                
                                	Interface Name
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: logs
                                
                                	FRR log table
                                	**type**\:  :py:class:`Logs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface.Logs>`
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.frr_interface_name = None
                                    self.logs = Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface.Logs()
                                    self.logs.parent = self


                                class Logs(object):
                                    """
                                    FRR log table
                                    
                                    .. attribute:: log
                                    
                                    	Specify index into frr log table
                                    	**type**\: list of  :py:class:`Log <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface.Logs.Log>`
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.log = YList()
                                        self.log.parent = self
                                        self.log.name = 'log'


                                    class Log(object):
                                        """
                                        Specify index into frr log table
                                        
                                        .. attribute:: log_index  <key>
                                        
                                        	FRR Log Index
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        .. attribute:: bundle_member_interface_name
                                        
                                        	bundle member
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: frr_interface_name
                                        
                                        	Interface assoc w frr nh
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: frr_prefix
                                        
                                        	nh prefix
                                        	**type**\:  str
                                        
                                        	**range:** 0..52
                                        
                                        .. attribute:: frr_protocol_type
                                        
                                        	FIB Protocol Type
                                        	**type**\:  :py:class:`FibFrrProtocolShowEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibFrrProtocolShowEnum>`
                                        
                                        .. attribute:: frr_switching_time
                                        
                                        	frr switching time
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: frr_timestamp
                                        
                                        	frr timestamp
                                        	**type**\:  :py:class:`FrrTimestamp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface.Logs.Log.FrrTimestamp>`
                                        
                                        

                                        """

                                        _prefix = 'fib-common-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.log_index = None
                                            self.bundle_member_interface_name = None
                                            self.frr_interface_name = None
                                            self.frr_prefix = None
                                            self.frr_protocol_type = None
                                            self.frr_switching_time = None
                                            self.frr_timestamp = Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface.Logs.Log.FrrTimestamp()
                                            self.frr_timestamp.parent = self


                                        class FrrTimestamp(object):
                                            """
                                            frr timestamp
                                            
                                            .. attribute:: nano_seconds
                                            
                                            	NanoSeconds
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: seconds
                                            
                                            	Seconds
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            

                                            """

                                            _prefix = 'fib-common-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.nano_seconds = None
                                                self.seconds = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-timestamp'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.nano_seconds is not None:
                                                    return True

                                                if self.seconds is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface.Logs.Log.FrrTimestamp']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.log_index is None:
                                                raise YPYModelError('Key property log_index is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:log[Cisco-IOS-XR-fib-common-oper:log-index = ' + str(self.log_index) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.log_index is not None:
                                                return True

                                            if self.bundle_member_interface_name is not None:
                                                return True

                                            if self.frr_interface_name is not None:
                                                return True

                                            if self.frr_prefix is not None:
                                                return True

                                            if self.frr_protocol_type is not None:
                                                return True

                                            if self.frr_switching_time is not None:
                                                return True

                                            if self.frr_timestamp is not None and self.frr_timestamp._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface.Logs.Log']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:logs'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.log is not None:
                                            for child_ref in self.log:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface.Logs']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.frr_interface_name is None:
                                        raise YPYModelError('Key property frr_interface_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-interface[Cisco-IOS-XR-fib-common-oper:frr-interface-name = ' + str(self.frr_interface_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.frr_interface_name is not None:
                                        return True

                                    if self.logs is not None and self.logs._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces.FrrInterface']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-interfaces'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.frr_interface is not None:
                                    for child_ref in self.frr_interface:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.FrrLog.FrrInterfaces']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-log'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.frr_interfaces is not None and self.frr_interfaces._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.FrrLog']['meta_info']


                    class Vrfs(object):
                        """
                        VRF table
                        
                        .. attribute:: vrf
                        
                        	VRF table entry
                        	**type**\: list of  :py:class:`Vrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf>`
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.vrf = YList()
                            self.vrf.parent = self
                            self.vrf.name = 'vrf'


                        class Vrf(object):
                            """
                            VRF table entry
                            
                            .. attribute:: vrf_name  <key>
                            
                            	VRF Name
                            	**type**\:  str
                            
                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                            
                            .. attribute:: interface_infos
                            
                            	Table of InterfaceInfo
                            	**type**\:  :py:class:`InterfaceInfos <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos>`
                            
                            .. attribute:: ip_prefix_briefs
                            
                            	IP FIB prefix brief table
                            	**type**\:  :py:class:`IpPrefixBriefs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs>`
                            
                            .. attribute:: ip_prefix_details
                            
                            	IP FIB prefix detail table
                            	**type**\:  :py:class:`IpPrefixDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails>`
                            
                            .. attribute:: summary
                            
                            	Operational data for FIB Tablee
                            	**type**\:  :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.Summary>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.vrf_name = None
                                self.interface_infos = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos()
                                self.interface_infos.parent = self
                                self.ip_prefix_briefs = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs()
                                self.ip_prefix_briefs.parent = self
                                self.ip_prefix_details = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails()
                                self.ip_prefix_details.parent = self
                                self.summary = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.Summary()
                                self.summary.parent = self


                            class IpPrefixDetails(object):
                                """
                                IP FIB prefix detail table
                                
                                .. attribute:: ip_prefix_detail
                                
                                	IP FIB prefix detail table entry
                                	**type**\: list of  :py:class:`IpPrefixDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail>`
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ip_prefix_detail = YList()
                                    self.ip_prefix_detail.parent = self
                                    self.ip_prefix_detail.name = 'ip_prefix_detail'


                                class IpPrefixDetail(object):
                                    """
                                    IP FIB prefix detail table entry
                                    
                                    .. attribute:: broadcast_forward_flag
                                    
                                    	Broadcast forward flag
                                    	**type**\:  bool
                                    
                                    .. attribute:: broadcast_recive_flag
                                    
                                    	Broadcast receive flag
                                    	**type**\:  bool
                                    
                                    .. attribute:: detail_fib_entry_information
                                    
                                    	Detailed FIB entry information
                                    	**type**\:  :py:class:`DetailFibEntryInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation>`
                                    
                                    .. attribute:: dummy_real_zero_route
                                    
                                    	Dummy real zero route
                                    	**type**\:  bool
                                    
                                    .. attribute:: exact_route_result
                                    
                                    	exact\-route result
                                    	**type**\:  bool
                                    
                                    .. attribute:: external_switch_triggered
                                    
                                    	External switch function triggered
                                    	**type**\:  bool
                                    
                                    .. attribute:: fib_entry_path
                                    
                                    	FIB entry path details
                                    	**type**\:  :py:class:`FibEntryPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath>`
                                    
                                    .. attribute:: fib_route_download_priority
                                    
                                    	Priority at which the route was downloaded
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: flags_external_ldi
                                    
                                    	The flags of ext assocaited with LDI 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: l2_subscriber_ip_protocol
                                    
                                    	IP protocol associated with L2 subscriber
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: l2_subscriber_route
                                    
                                    	Is L2 Subscriber route
                                    	**type**\:  bool
                                    
                                    .. attribute:: l2_subscriber_xconnect_id
                                    
                                    	XConnect\-id associated with L2 subscriber
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: l2tpv3_cookie_length_bits
                                    
                                    	L2TPv3 cookie length for L2 subscriber
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ldi_flags
                                    
                                    	The LDI flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ldi_lw_flag
                                    
                                    	The LDI LW flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lspa_flags
                                    
                                    	The LSPA flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: number_of_referances_to_ldi
                                    
                                    	Number of references to the LDI
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: number_of_referances_to_path_list
                                    
                                    	Number of references to the pathlist
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: packet_should_recieve
                                    
                                    	Packet should always be received
                                    	**type**\:  bool
                                    
                                    .. attribute:: path_list_flags
                                    
                                    	The pathlist flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_list_source
                                    
                                    	The pathlist source
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: platform_hardware
                                    
                                    	Platform Hardware info
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: prefix
                                    
                                    	Destination IP address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_connected
                                    
                                    	Prefix is connected
                                    	**type**\:  bool
                                    
                                    .. attribute:: prefix_for_adjancency
                                    
                                    	Prefix is for an adjacency
                                    	**type**\:  bool
                                    
                                    .. attribute:: prefix_for_pic_next_hop
                                    
                                    	Prefix is for a PIC nexthop
                                    	**type**\:  bool
                                    
                                    .. attribute:: prefix_is_static_or_connected
                                    
                                    	Prefix is static or connected
                                    	**type**\:  bool
                                    
                                    .. attribute:: prefix_length
                                    
                                    	IP prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: protocol_type_fib_entry
                                    
                                    	Proto type for this entry
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: purgable_after_purge_interval
                                    
                                    	Purgable after the purge interval
                                    	**type**\:  bool
                                    
                                    .. attribute:: ref_counter_of_ldi_lw_ldi
                                    
                                    	The refcounter of LDI LW LDI
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: route_attribute_flag
                                    
                                    	Route attributes summary flag
                                    	**type**\:  bool
                                    
                                    .. attribute:: time_of_last_update_in_msec
                                    
                                    	The time of last update in msec
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: type_of_ldi_lw_ldi
                                    
                                    	The type of LDI LW LDI
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: version_of_route
                                    
                                    	The version of the route
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: zero_by_zero_route_as_default
                                    
                                    	0/0 route added as default route
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.broadcast_forward_flag = None
                                        self.broadcast_recive_flag = None
                                        self.detail_fib_entry_information = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation()
                                        self.detail_fib_entry_information.parent = self
                                        self.dummy_real_zero_route = None
                                        self.exact_route_result = None
                                        self.external_switch_triggered = None
                                        self.fib_entry_path = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath()
                                        self.fib_entry_path.parent = self
                                        self.fib_route_download_priority = None
                                        self.flags_external_ldi = None
                                        self.l2_subscriber_ip_protocol = None
                                        self.l2_subscriber_route = None
                                        self.l2_subscriber_xconnect_id = None
                                        self.l2tpv3_cookie_length_bits = None
                                        self.ldi_flags = None
                                        self.ldi_lw_flag = None
                                        self.lspa_flags = None
                                        self.number_of_referances_to_ldi = None
                                        self.number_of_referances_to_path_list = None
                                        self.packet_should_recieve = None
                                        self.path_list_flags = None
                                        self.path_list_source = None
                                        self.platform_hardware = None
                                        self.prefix = None
                                        self.prefix_connected = None
                                        self.prefix_for_adjancency = None
                                        self.prefix_for_pic_next_hop = None
                                        self.prefix_is_static_or_connected = None
                                        self.prefix_length = None
                                        self.protocol_type_fib_entry = None
                                        self.purgable_after_purge_interval = None
                                        self.ref_counter_of_ldi_lw_ldi = None
                                        self.route_attribute_flag = None
                                        self.time_of_last_update_in_msec = None
                                        self.type_of_ldi_lw_ldi = None
                                        self.version_of_route = None
                                        self.zero_by_zero_route_as_default = None


                                    class DetailFibEntryInformation(object):
                                        """
                                        Detailed FIB entry information
                                        
                                        .. attribute:: adjacency_address_length
                                        
                                        	ADJ ADDR LEN
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: adjacency_interface
                                        
                                        	ADJ IFH
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: afi_fib_protocol_type
                                        
                                        	AFI FIB protocol type
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: aib_l3_address
                                        
                                        	AIB L3 Address
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: bgp_attribute_id
                                        
                                        	BGP attribute id
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bgp_attribute_next_hop_as
                                        
                                        	BGP attribute next hop as
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bgp_attribute_origin_as
                                        
                                        	BGP attribute origin as
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bgp_local_attribute_id
                                        
                                        	BGP local attribute id
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bytes_through_fib_entry
                                        
                                        	Bytes through this FIB entry
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: com_string
                                        
                                        	com st
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: detailed_prefix_length
                                        
                                        	Prefix length
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: extcom_string
                                        
                                        	extcom st
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: extended_community
                                        
                                        	extended community
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: fast_adjacency_flag
                                        
                                        	Fast adjacency flag
                                        	**type**\:  bool
                                        
                                        .. attribute:: fib_entry_adjacency_address
                                        
                                        	FIB entry adj address
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: fib_entry_adjacency_interface
                                        
                                        	FIB entry adjacency interface
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: fib_entry_adjacency_type
                                        
                                        	FIB entry adjacency type
                                        	**type**\:  :py:class:`FibAdjacencyShowEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibAdjacencyShowEnum>`
                                        
                                        .. attribute:: fib_entry_version
                                        
                                        	FIB entry version number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: fib_protocol_type
                                        
                                        	FIB Protocol type
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: fib_special_nh_information_type
                                        
                                        	FIB Special NHINFO Type
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: flow_tag
                                        
                                        	PBR flow\-tag
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: forward_class
                                        
                                        	SPP forwarding class ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: illegal_fast_adjacency_flag
                                        
                                        	Illegal fast adjacency flag
                                        	**type**\:  bool
                                        
                                        .. attribute:: ldi_time_of_last_update_in_msec
                                        
                                        	The time of last update for LDI in msec
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: load_sharing_type
                                        
                                        	Load sharing type
                                        	**type**\:  :py:class:`FibLoadshareShowEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibLoadshareShowEnum>`
                                        
                                        .. attribute:: loadshare_information
                                        
                                        	Detailed Loadshare info
                                        	**type**\:  :py:class:`LoadshareInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation>`
                                        
                                        .. attribute:: lwldi_time_of_last_update_in_msec
                                        
                                        	The time of last update for LW\-LDI in msec
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: mpls_fec
                                        
                                        	mpls fec
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: packets_through_fib_entry
                                        
                                        	Packets through this FIB entry
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: path_string
                                        
                                        	As path string
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: per_prefix_accounting
                                        
                                        	Per Prefix Accounting
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: pl_time_of_last_update_in_msec
                                        
                                        	The time of last update for PL in msec
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: pl_time_stamp_type
                                        
                                        	The type of time\-stamp on PL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: precedence_forpackets
                                        
                                        	Precedence for packets to this entry
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: prefix_protocol
                                        
                                        	Prefix protocol
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: qos_group
                                        
                                        	qos group
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: qppb_qos_group_and_ip_precedence
                                        
                                        	qppb QOS group and IP precedence
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: remote_adjacency_flag
                                        
                                        	Remote adjacency flag
                                        	**type**\:  bool
                                        
                                        .. attribute:: switch_compontent_id
                                        
                                        	Switch function compontent ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: traffic_index_for_packets
                                        
                                        	Traffic index for packets to this entry
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'fib-common-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.adjacency_address_length = None
                                            self.adjacency_interface = None
                                            self.afi_fib_protocol_type = None
                                            self.aib_l3_address = None
                                            self.bgp_attribute_id = None
                                            self.bgp_attribute_next_hop_as = None
                                            self.bgp_attribute_origin_as = None
                                            self.bgp_local_attribute_id = None
                                            self.bytes_through_fib_entry = None
                                            self.com_string = None
                                            self.detailed_prefix_length = None
                                            self.extcom_string = None
                                            self.extended_community = None
                                            self.fast_adjacency_flag = None
                                            self.fib_entry_adjacency_address = None
                                            self.fib_entry_adjacency_interface = None
                                            self.fib_entry_adjacency_type = None
                                            self.fib_entry_version = None
                                            self.fib_protocol_type = None
                                            self.fib_special_nh_information_type = None
                                            self.flow_tag = None
                                            self.forward_class = None
                                            self.illegal_fast_adjacency_flag = None
                                            self.ldi_time_of_last_update_in_msec = None
                                            self.load_sharing_type = None
                                            self.loadshare_information = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation()
                                            self.loadshare_information.parent = self
                                            self.lwldi_time_of_last_update_in_msec = None
                                            self.mpls_fec = None
                                            self.packets_through_fib_entry = None
                                            self.path_string = None
                                            self.per_prefix_accounting = None
                                            self.pl_time_of_last_update_in_msec = None
                                            self.pl_time_stamp_type = None
                                            self.precedence_forpackets = None
                                            self.prefix_protocol = None
                                            self.qos_group = None
                                            self.qppb_qos_group_and_ip_precedence = None
                                            self.remote_adjacency_flag = None
                                            self.switch_compontent_id = None
                                            self.traffic_index_for_packets = None


                                        class LoadshareInformation(object):
                                            """
                                            Detailed Loadshare info
                                            
                                            .. attribute:: bytes_through_load_information
                                            
                                            	Bytes through this loadinfo
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: is_owner
                                            
                                            	Owner flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: load_information_owner_deleted_flag
                                            
                                            	Loadinfo owner deleted flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: load_information_reference_count
                                            
                                            	Loadinfo reference count
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: load_informtion_internal_data
                                            
                                            	Loadinfo internal data
                                            	**type**\:  :py:class:`LoadInformtionInternalData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData>`
                                            
                                            .. attribute:: loadinfo_sanity_flag
                                            
                                            	Loadinfo sanity flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: mask_length_of_owner
                                            
                                            	Mask length of the owner
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: packets_through_load_information
                                            
                                            	Packets through this loadinfo
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: per_dest_load_sharing_flag
                                            
                                            	Per destination load sharing flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: prefix_of_owner
                                            
                                            	Prefix of the owner
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: total_bytes_through_load_information
                                            
                                            	Total bytes through this loadinfo
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: total_packets_through_load_information
                                            
                                            	Total packets through this loadinfo
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            

                                            """

                                            _prefix = 'fib-common-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.bytes_through_load_information = None
                                                self.is_owner = None
                                                self.load_information_owner_deleted_flag = None
                                                self.load_information_reference_count = None
                                                self.load_informtion_internal_data = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData()
                                                self.load_informtion_internal_data.parent = self
                                                self.loadinfo_sanity_flag = None
                                                self.mask_length_of_owner = None
                                                self.packets_through_load_information = None
                                                self.per_dest_load_sharing_flag = None
                                                self.prefix_of_owner = None
                                                self.total_bytes_through_load_information = None
                                                self.total_packets_through_load_information = None


                                            class LoadInformtionInternalData(object):
                                                """
                                                Loadinfo internal data
                                                
                                                .. attribute:: adjacency_address
                                                
                                                	Adjacency address
                                                	**type**\: list of  :py:class:`AdjacencyAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.AdjacencyAddress>`
                                                
                                                .. attribute:: interface_handle
                                                
                                                	Interface handle
                                                	**type**\:  list of str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: is_pbts_info_valid
                                                
                                                	PBTS info valid flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: ldi_next_hop_buckets
                                                
                                                	Number of LDI next hop buckets
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: level_ofldis
                                                
                                                	level of ldis
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: maximum_index_arrays
                                                
                                                	Maximum index of the arrays
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: maximum_slots
                                                
                                                	Maximum slots
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: normalized_weights
                                                
                                                	Normalized weights
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: number_of_ldis
                                                
                                                	no. of ldis
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: path_indices
                                                
                                                	Path indices
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: path_ldi_numbers
                                                
                                                	Path indices
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: pbts_class_is_fallback_mapped
                                                
                                                	Does PBTS class fall back to drop or any class
                                                	**type**\: list of  :py:class:`PbtsClassIsFallbackMapped <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.PbtsClassIsFallbackMapped>`
                                                
                                                .. attribute:: pbts_class_num_paths
                                                
                                                	PBTS class num paths
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: pbts_class_offset
                                                
                                                	PBTS class offset
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: pbts_fallback_mapped_class
                                                
                                                	PBTS class falls back to class
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: pbts_fallback_to_drop
                                                
                                                	PBTS class falls back to drop
                                                	**type**\: list of  :py:class:`PbtsFallbackToDrop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.PbtsFallbackToDrop>`
                                                
                                                .. attribute:: platform_hardware_information
                                                
                                                	Platform Hardware info
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: round_robin_disable
                                                
                                                	Round Robin Disable
                                                	**type**\:  bool
                                                
                                                .. attribute:: sanity_flag
                                                
                                                	Sanity flag
                                                	**type**\:  list of bool
                                                
                                                .. attribute:: tunnel_class_value
                                                
                                                	Tunnel class value
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: tunnel_is_forward_class
                                                
                                                	Tunnel is forward class
                                                	**type**\: list of  :py:class:`TunnelIsForwardClass <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.TunnelIsForwardClass>`
                                                
                                                .. attribute:: weights_of_path
                                                
                                                	Weights of paths
                                                	**type**\:  list of int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'fib-common-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.adjacency_address = YList()
                                                    self.adjacency_address.parent = self
                                                    self.adjacency_address.name = 'adjacency_address'
                                                    self.interface_handle = YLeafList()
                                                    self.interface_handle.parent = self
                                                    self.interface_handle.name = 'interface_handle'
                                                    self.is_pbts_info_valid = None
                                                    self.ldi_next_hop_buckets = None
                                                    self.level_ofldis = None
                                                    self.maximum_index_arrays = None
                                                    self.maximum_slots = None
                                                    self.normalized_weights = None
                                                    self.number_of_ldis = None
                                                    self.path_indices = None
                                                    self.path_ldi_numbers = None
                                                    self.pbts_class_is_fallback_mapped = YList()
                                                    self.pbts_class_is_fallback_mapped.parent = self
                                                    self.pbts_class_is_fallback_mapped.name = 'pbts_class_is_fallback_mapped'
                                                    self.pbts_class_num_paths = None
                                                    self.pbts_class_offset = None
                                                    self.pbts_fallback_mapped_class = None
                                                    self.pbts_fallback_to_drop = YList()
                                                    self.pbts_fallback_to_drop.parent = self
                                                    self.pbts_fallback_to_drop.name = 'pbts_fallback_to_drop'
                                                    self.platform_hardware_information = None
                                                    self.round_robin_disable = None
                                                    self.sanity_flag = YLeafList()
                                                    self.sanity_flag.parent = self
                                                    self.sanity_flag.name = 'sanity_flag'
                                                    self.tunnel_class_value = None
                                                    self.tunnel_is_forward_class = YList()
                                                    self.tunnel_is_forward_class.parent = self
                                                    self.tunnel_is_forward_class.name = 'tunnel_is_forward_class'
                                                    self.weights_of_path = YLeafList()
                                                    self.weights_of_path.parent = self
                                                    self.weights_of_path.name = 'weights_of_path'


                                                class AdjacencyAddress(object):
                                                    """
                                                    Adjacency address
                                                    
                                                    .. attribute:: address
                                                    
                                                    	address
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..60
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.address = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:adjacency-address'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.address is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.AdjacencyAddress']['meta_info']


                                                class PbtsClassIsFallbackMapped(object):
                                                    """
                                                    Does PBTS class fall back to drop or any class
                                                    
                                                    .. attribute:: entry
                                                    
                                                    	Array entry
                                                    	**type**\:  bool
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.entry = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:pbts-class-is-fallback-mapped'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.entry is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.PbtsClassIsFallbackMapped']['meta_info']


                                                class PbtsFallbackToDrop(object):
                                                    """
                                                    PBTS class falls back to drop
                                                    
                                                    .. attribute:: entry
                                                    
                                                    	Array entry
                                                    	**type**\:  bool
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.entry = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:pbts-fallback-to-drop'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.entry is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.PbtsFallbackToDrop']['meta_info']


                                                class TunnelIsForwardClass(object):
                                                    """
                                                    Tunnel is forward class
                                                    
                                                    .. attribute:: entry
                                                    
                                                    	Array entry
                                                    	**type**\:  bool
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.entry = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:tunnel-is-forward-class'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.entry is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.TunnelIsForwardClass']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:load-informtion-internal-data'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.adjacency_address is not None:
                                                        for child_ref in self.adjacency_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.interface_handle is not None:
                                                        for child in self.interface_handle:
                                                            if child is not None:
                                                                return True

                                                    if self.is_pbts_info_valid is not None:
                                                        return True

                                                    if self.ldi_next_hop_buckets is not None:
                                                        return True

                                                    if self.level_ofldis is not None:
                                                        return True

                                                    if self.maximum_index_arrays is not None:
                                                        return True

                                                    if self.maximum_slots is not None:
                                                        return True

                                                    if self.normalized_weights is not None:
                                                        return True

                                                    if self.number_of_ldis is not None:
                                                        return True

                                                    if self.path_indices is not None:
                                                        return True

                                                    if self.path_ldi_numbers is not None:
                                                        return True

                                                    if self.pbts_class_is_fallback_mapped is not None:
                                                        for child_ref in self.pbts_class_is_fallback_mapped:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.pbts_class_num_paths is not None:
                                                        return True

                                                    if self.pbts_class_offset is not None:
                                                        return True

                                                    if self.pbts_fallback_mapped_class is not None:
                                                        return True

                                                    if self.pbts_fallback_to_drop is not None:
                                                        for child_ref in self.pbts_fallback_to_drop:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.platform_hardware_information is not None:
                                                        return True

                                                    if self.round_robin_disable is not None:
                                                        return True

                                                    if self.sanity_flag is not None:
                                                        for child in self.sanity_flag:
                                                            if child is not None:
                                                                return True

                                                    if self.tunnel_class_value is not None:
                                                        return True

                                                    if self.tunnel_is_forward_class is not None:
                                                        for child_ref in self.tunnel_is_forward_class:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.weights_of_path is not None:
                                                        for child in self.weights_of_path:
                                                            if child is not None:
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:loadshare-information'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.bytes_through_load_information is not None:
                                                    return True

                                                if self.is_owner is not None:
                                                    return True

                                                if self.load_information_owner_deleted_flag is not None:
                                                    return True

                                                if self.load_information_reference_count is not None:
                                                    return True

                                                if self.load_informtion_internal_data is not None and self.load_informtion_internal_data._has_data():
                                                    return True

                                                if self.loadinfo_sanity_flag is not None:
                                                    return True

                                                if self.mask_length_of_owner is not None:
                                                    return True

                                                if self.packets_through_load_information is not None:
                                                    return True

                                                if self.per_dest_load_sharing_flag is not None:
                                                    return True

                                                if self.prefix_of_owner is not None:
                                                    return True

                                                if self.total_bytes_through_load_information is not None:
                                                    return True

                                                if self.total_packets_through_load_information is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation.LoadshareInformation']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:detail-fib-entry-information'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.adjacency_address_length is not None:
                                                return True

                                            if self.adjacency_interface is not None:
                                                return True

                                            if self.afi_fib_protocol_type is not None:
                                                return True

                                            if self.aib_l3_address is not None:
                                                return True

                                            if self.bgp_attribute_id is not None:
                                                return True

                                            if self.bgp_attribute_next_hop_as is not None:
                                                return True

                                            if self.bgp_attribute_origin_as is not None:
                                                return True

                                            if self.bgp_local_attribute_id is not None:
                                                return True

                                            if self.bytes_through_fib_entry is not None:
                                                return True

                                            if self.com_string is not None:
                                                return True

                                            if self.detailed_prefix_length is not None:
                                                return True

                                            if self.extcom_string is not None:
                                                return True

                                            if self.extended_community is not None:
                                                return True

                                            if self.fast_adjacency_flag is not None:
                                                return True

                                            if self.fib_entry_adjacency_address is not None:
                                                return True

                                            if self.fib_entry_adjacency_interface is not None:
                                                return True

                                            if self.fib_entry_adjacency_type is not None:
                                                return True

                                            if self.fib_entry_version is not None:
                                                return True

                                            if self.fib_protocol_type is not None:
                                                return True

                                            if self.fib_special_nh_information_type is not None:
                                                return True

                                            if self.flow_tag is not None:
                                                return True

                                            if self.forward_class is not None:
                                                return True

                                            if self.illegal_fast_adjacency_flag is not None:
                                                return True

                                            if self.ldi_time_of_last_update_in_msec is not None:
                                                return True

                                            if self.load_sharing_type is not None:
                                                return True

                                            if self.loadshare_information is not None and self.loadshare_information._has_data():
                                                return True

                                            if self.lwldi_time_of_last_update_in_msec is not None:
                                                return True

                                            if self.mpls_fec is not None:
                                                return True

                                            if self.packets_through_fib_entry is not None:
                                                return True

                                            if self.path_string is not None:
                                                return True

                                            if self.per_prefix_accounting is not None:
                                                return True

                                            if self.pl_time_of_last_update_in_msec is not None:
                                                return True

                                            if self.pl_time_stamp_type is not None:
                                                return True

                                            if self.precedence_forpackets is not None:
                                                return True

                                            if self.prefix_protocol is not None:
                                                return True

                                            if self.qos_group is not None:
                                                return True

                                            if self.qppb_qos_group_and_ip_precedence is not None:
                                                return True

                                            if self.remote_adjacency_flag is not None:
                                                return True

                                            if self.switch_compontent_id is not None:
                                                return True

                                            if self.traffic_index_for_packets is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.DetailFibEntryInformation']['meta_info']


                                    class FibEntryPath(object):
                                        """
                                        FIB entry path details
                                        
                                        .. attribute:: fib_sh_tbl_path
                                        
                                        	fib sh tbl path
                                        	**type**\: list of  :py:class:`FibShTblPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath>`
                                        
                                        

                                        """

                                        _prefix = 'fib-common-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.fib_sh_tbl_path = YList()
                                            self.fib_sh_tbl_path.parent = self
                                            self.fib_sh_tbl_path.name = 'fib_sh_tbl_path'


                                        class FibShTblPath(object):
                                            """
                                            fib sh tbl path
                                            
                                            .. attribute:: attached_path
                                            
                                            	Attached path
                                            	**type**\:  bool
                                            
                                            .. attribute:: backup_index
                                            
                                            	Backup path index
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: backup_path
                                            
                                            	Backup path
                                            	**type**\:  bool
                                            
                                            .. attribute:: best_external_path
                                            
                                            	Best external path
                                            	**type**\:  bool
                                            
                                            .. attribute:: brief_interface_handle
                                            
                                            	Interface handle
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: brief_next_hop_prefix
                                            
                                            	Next hop prefix
                                            	**type**\:  str
                                            
                                            	**range:** 0..52
                                            
                                            .. attribute:: brief_pnode_address
                                            
                                            	P\-node address
                                            	**type**\:  str
                                            
                                            	**range:** 0..52
                                            
                                            .. attribute:: brief_qnode_address
                                            
                                            	Q\-node address
                                            	**type**\:  str
                                            
                                            	**range:** 0..52
                                            
                                            .. attribute:: hardware_information
                                            
                                            	Hardware info
                                            	**type**\:  str
                                            
                                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                            
                                            .. attribute:: more_detail_about_path
                                            
                                            	More detail about this path entry
                                            	**type**\:  :py:class:`MoreDetailAboutPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MoreDetailAboutPath>`
                                            
                                            .. attribute:: mpls_information_for_path
                                            
                                            	mpls info for this path entry
                                            	**type**\:  :py:class:`MplsInformationForPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MplsInformationForPath>`
                                            
                                            .. attribute:: next_hop_index
                                            
                                            	Next Hop Index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: packets_received_path
                                            
                                            	Packets received on this path
                                            	**type**\:  bool
                                            
                                            .. attribute:: parent_interface_handle
                                            
                                            	Parent Interface Handle
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: path_dlb
                                            
                                            	Is this the path used for DLB
                                            	**type**\:  bool
                                            
                                            .. attribute:: path_flags
                                            
                                            	Path flags
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: path_index
                                            
                                            	Path index
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: path_info_flags
                                            
                                            	Path Info flags
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: protect_ignore
                                            
                                            	Is protection ignored
                                            	**type**\:  bool
                                            
                                            .. attribute:: recursionvia_len
                                            
                                            	recursion via /N constraint
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: recursive_path
                                            
                                            	Recursive path
                                            	**type**\:  bool
                                            
                                            .. attribute:: resolved_path
                                            
                                            	Resolved path
                                            	**type**\:  bool
                                            
                                            .. attribute:: via_label_to_recurse
                                            
                                            	Local label to recurse over
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'fib-common-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.attached_path = None
                                                self.backup_index = None
                                                self.backup_path = None
                                                self.best_external_path = None
                                                self.brief_interface_handle = None
                                                self.brief_next_hop_prefix = None
                                                self.brief_pnode_address = None
                                                self.brief_qnode_address = None
                                                self.hardware_information = None
                                                self.more_detail_about_path = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MoreDetailAboutPath()
                                                self.more_detail_about_path.parent = self
                                                self.mpls_information_for_path = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MplsInformationForPath()
                                                self.mpls_information_for_path.parent = self
                                                self.next_hop_index = None
                                                self.packets_received_path = None
                                                self.parent_interface_handle = None
                                                self.path_dlb = None
                                                self.path_flags = None
                                                self.path_index = None
                                                self.path_info_flags = None
                                                self.protect_ignore = None
                                                self.recursionvia_len = None
                                                self.recursive_path = None
                                                self.resolved_path = None
                                                self.via_label_to_recurse = None


                                            class MoreDetailAboutPath(object):
                                                """
                                                More detail about this path entry
                                                
                                                .. attribute:: current_path_flag
                                                
                                                	Current path flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: detail_fib_adjacency_type
                                                
                                                	FIB entry adjacency type
                                                	**type**\:  :py:class:`FibAdjacencyShowEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibAdjacencyShowEnum>`
                                                
                                                .. attribute:: detail_next_hop_prefix
                                                
                                                	Next hop prefix
                                                	**type**\:  str
                                                
                                                	**range:** 0..52
                                                
                                                .. attribute:: external_adjacency
                                                
                                                	Path is an external adjacency
                                                	**type**\:  bool
                                                
                                                .. attribute:: fib_path_nh_information_type
                                                
                                                	FIB Nhinfo type
                                                	**type**\:  :py:class:`FibNehEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibNehEnum>`
                                                
                                                .. attribute:: fib_path_nh_information_type_special
                                                
                                                	FIB Nhinfo type special
                                                	**type**\:  :py:class:`FibNehSpecialEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibNehSpecialEnum>`
                                                
                                                .. attribute:: interface_associated_path
                                                
                                                	Interface associated with this path
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: ip_address_to_recurse
                                                
                                                	IP address to recurse to
                                                	**type**\:  str
                                                
                                                	**range:** 0..52
                                                
                                                .. attribute:: label_to_recurse
                                                
                                                	Local label to recurse over
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: lisprlocid
                                                
                                                	LISP RLOC ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: next_hop_interface
                                                
                                                	Next hop interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_mask_length
                                                
                                                	Next hop mask length
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: next_hop_vrf
                                                
                                                	Next hop VRF
                                                	**type**\:  str
                                                
                                                	**range:** 0..33
                                                
                                                .. attribute:: next_prefix_length
                                                
                                                	Next prefix length
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: next_prefix_length2
                                                
                                                	Next prefix2 length
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: next_prefix_recursion
                                                
                                                	Next prefix recursion in the path
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: next_prefix_recursion2
                                                
                                                	Next prefix2 recursion in the path
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: number_of_dependencies_this_path
                                                
                                                	No. of dependents for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: recurse_prefix_object
                                                
                                                	Is recursion object a leaf?
                                                	**type**\:  bool
                                                
                                                .. attribute:: recurse_prefix_object2
                                                
                                                	Recursion has two leaves (e.g. implicit\-null path)
                                                	**type**\:  bool
                                                
                                                .. attribute:: recursive_path_information
                                                
                                                	Recursive path information is available
                                                	**type**\:  bool
                                                
                                                .. attribute:: robin_reset_value
                                                
                                                	Round robin reset value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: spd_ipencap
                                                
                                                	IP Encap
                                                	**type**\: list of  :py:class:`SpdIpencap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MoreDetailAboutPath.SpdIpencap>`
                                                
                                                .. attribute:: tunnel_class
                                                
                                                	Tunnel class of the path
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: tunnel_is_forward_class
                                                
                                                	Tunnel is forward class
                                                	**type**\:  bool
                                                
                                                .. attribute:: tunnle_endpoint_id
                                                
                                                	Tunnel endpoint id
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: weight_of_path
                                                
                                                	Weight of the path
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'fib-common-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.current_path_flag = None
                                                    self.detail_fib_adjacency_type = None
                                                    self.detail_next_hop_prefix = None
                                                    self.external_adjacency = None
                                                    self.fib_path_nh_information_type = None
                                                    self.fib_path_nh_information_type_special = None
                                                    self.interface_associated_path = None
                                                    self.ip_address_to_recurse = None
                                                    self.label_to_recurse = None
                                                    self.lisprlocid = None
                                                    self.next_hop_interface = None
                                                    self.next_hop_mask_length = None
                                                    self.next_hop_vrf = None
                                                    self.next_prefix_length = None
                                                    self.next_prefix_length2 = None
                                                    self.next_prefix_recursion = None
                                                    self.next_prefix_recursion2 = None
                                                    self.number_of_dependencies_this_path = None
                                                    self.recurse_prefix_object = None
                                                    self.recurse_prefix_object2 = None
                                                    self.recursive_path_information = None
                                                    self.robin_reset_value = None
                                                    self.spd_ipencap = YList()
                                                    self.spd_ipencap.parent = self
                                                    self.spd_ipencap.name = 'spd_ipencap'
                                                    self.tunnel_class = None
                                                    self.tunnel_is_forward_class = None
                                                    self.tunnle_endpoint_id = None
                                                    self.weight_of_path = None


                                                class SpdIpencap(object):
                                                    """
                                                    IP Encap
                                                    
                                                    .. attribute:: ip_encap_hdr
                                                    
                                                    	Headers
                                                    	**type**\: list of  :py:class:`IpEncapHdr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MoreDetailAboutPath.SpdIpencap.IpEncapHdr>`
                                                    
                                                    .. attribute:: ip_encap_hdr_count
                                                    
                                                    	Header Count
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..255
                                                    
                                                    .. attribute:: ip_encap_locks
                                                    
                                                    	IPEncap Object Locks
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_parent
                                                    
                                                    	Pointer to parent
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_parent_type
                                                    
                                                    	Parent type enumeration
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_payload_af
                                                    
                                                    	Payload AF
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_payload_mtu
                                                    
                                                    	Payload MTU
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: ip_encap_transport_af
                                                    
                                                    	Transport AF
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_transport_tbl
                                                    
                                                    	Transport Table
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ipe_transport_vrf_name
                                                    
                                                    	Transport VRF name
                                                    	**type**\:  str
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.ip_encap_hdr = YList()
                                                        self.ip_encap_hdr.parent = self
                                                        self.ip_encap_hdr.name = 'ip_encap_hdr'
                                                        self.ip_encap_hdr_count = None
                                                        self.ip_encap_locks = None
                                                        self.ip_encap_parent = None
                                                        self.ip_encap_parent_type = None
                                                        self.ip_encap_payload_af = None
                                                        self.ip_encap_payload_mtu = None
                                                        self.ip_encap_transport_af = None
                                                        self.ip_encap_transport_tbl = None
                                                        self.ipe_transport_vrf_name = None


                                                    class IpEncapHdr(object):
                                                        """
                                                        Headers
                                                        
                                                        .. attribute:: ip_encap_hdr_dyn
                                                        
                                                        	Dynamic Header Fields
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: ip_encap_hdr_type
                                                        
                                                        	Header Type
                                                        	**type**\:  :py:class:`FibShIpencapHdrEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibShIpencapHdrEnum>`
                                                        
                                                        .. attribute:: ip_encap_hdrp
                                                        
                                                        	Static Header
                                                        	**type**\:  str
                                                        
                                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                        
                                                        

                                                        """

                                                        _prefix = 'fib-common-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.ip_encap_hdr_dyn = None
                                                            self.ip_encap_hdr_type = None
                                                            self.ip_encap_hdrp = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ip-encap-hdr'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.ip_encap_hdr_dyn is not None:
                                                                return True

                                                            if self.ip_encap_hdr_type is not None:
                                                                return True

                                                            if self.ip_encap_hdrp is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MoreDetailAboutPath.SpdIpencap.IpEncapHdr']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:spd-ipencap'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.ip_encap_hdr is not None:
                                                            for child_ref in self.ip_encap_hdr:
                                                                if child_ref._has_data():
                                                                    return True

                                                        if self.ip_encap_hdr_count is not None:
                                                            return True

                                                        if self.ip_encap_locks is not None:
                                                            return True

                                                        if self.ip_encap_parent is not None:
                                                            return True

                                                        if self.ip_encap_parent_type is not None:
                                                            return True

                                                        if self.ip_encap_payload_af is not None:
                                                            return True

                                                        if self.ip_encap_payload_mtu is not None:
                                                            return True

                                                        if self.ip_encap_transport_af is not None:
                                                            return True

                                                        if self.ip_encap_transport_tbl is not None:
                                                            return True

                                                        if self.ipe_transport_vrf_name is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MoreDetailAboutPath.SpdIpencap']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:more-detail-about-path'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.current_path_flag is not None:
                                                        return True

                                                    if self.detail_fib_adjacency_type is not None:
                                                        return True

                                                    if self.detail_next_hop_prefix is not None:
                                                        return True

                                                    if self.external_adjacency is not None:
                                                        return True

                                                    if self.fib_path_nh_information_type is not None:
                                                        return True

                                                    if self.fib_path_nh_information_type_special is not None:
                                                        return True

                                                    if self.interface_associated_path is not None:
                                                        return True

                                                    if self.ip_address_to_recurse is not None:
                                                        return True

                                                    if self.label_to_recurse is not None:
                                                        return True

                                                    if self.lisprlocid is not None:
                                                        return True

                                                    if self.next_hop_interface is not None:
                                                        return True

                                                    if self.next_hop_mask_length is not None:
                                                        return True

                                                    if self.next_hop_vrf is not None:
                                                        return True

                                                    if self.next_prefix_length is not None:
                                                        return True

                                                    if self.next_prefix_length2 is not None:
                                                        return True

                                                    if self.next_prefix_recursion is not None:
                                                        return True

                                                    if self.next_prefix_recursion2 is not None:
                                                        return True

                                                    if self.number_of_dependencies_this_path is not None:
                                                        return True

                                                    if self.recurse_prefix_object is not None:
                                                        return True

                                                    if self.recurse_prefix_object2 is not None:
                                                        return True

                                                    if self.recursive_path_information is not None:
                                                        return True

                                                    if self.robin_reset_value is not None:
                                                        return True

                                                    if self.spd_ipencap is not None:
                                                        for child_ref in self.spd_ipencap:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.tunnel_class is not None:
                                                        return True

                                                    if self.tunnel_is_forward_class is not None:
                                                        return True

                                                    if self.tunnle_endpoint_id is not None:
                                                        return True

                                                    if self.weight_of_path is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MoreDetailAboutPath']['meta_info']


                                            class MplsInformationForPath(object):
                                                """
                                                mpls info for this path entry
                                                
                                                .. attribute:: igp_label_stack_array
                                                
                                                	igp label stack array
                                                	**type**\: list of  :py:class:`IgpLabelStackArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MplsInformationForPath.IgpLabelStackArray>`
                                                
                                                .. attribute:: local_lable
                                                
                                                	LocalLable
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: number_of_igp_paths
                                                
                                                	NumberOfIGPPaths
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: recursive_fwd_chain
                                                
                                                	RecursiveFwdChain
                                                	**type**\:  bool
                                                
                                                .. attribute:: recursive_out_label_valid
                                                
                                                	RecursiveOutLabelValid
                                                	**type**\:  bool
                                                
                                                .. attribute:: recursive_out_lable
                                                
                                                	RecursiveOutLable
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: remote_backup
                                                
                                                	RemoteBackupPath
                                                	**type**\:  bool
                                                
                                                

                                                """

                                                _prefix = 'fib-common-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.igp_label_stack_array = YList()
                                                    self.igp_label_stack_array.parent = self
                                                    self.igp_label_stack_array.name = 'igp_label_stack_array'
                                                    self.local_lable = None
                                                    self.number_of_igp_paths = None
                                                    self.recursive_fwd_chain = None
                                                    self.recursive_out_label_valid = None
                                                    self.recursive_out_lable = None
                                                    self.remote_backup = None


                                                class IgpLabelStackArray(object):
                                                    """
                                                    igp label stack array
                                                    
                                                    .. attribute:: lstack
                                                    
                                                    	lstack
                                                    	**type**\:  list of int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: nh_address
                                                    
                                                    	NHAddress
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..52
                                                    
                                                    .. attribute:: number_of_labels
                                                    
                                                    	NumberOfLabels
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: out_interface
                                                    
                                                    	OutInterface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.lstack = YLeafList()
                                                        self.lstack.parent = self
                                                        self.lstack.name = 'lstack'
                                                        self.nh_address = None
                                                        self.number_of_labels = None
                                                        self.out_interface = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:igp-label-stack-array'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.lstack is not None:
                                                            for child in self.lstack:
                                                                if child is not None:
                                                                    return True

                                                        if self.nh_address is not None:
                                                            return True

                                                        if self.number_of_labels is not None:
                                                            return True

                                                        if self.out_interface is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MplsInformationForPath.IgpLabelStackArray']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mpls-information-for-path'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.igp_label_stack_array is not None:
                                                        for child_ref in self.igp_label_stack_array:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.local_lable is not None:
                                                        return True

                                                    if self.number_of_igp_paths is not None:
                                                        return True

                                                    if self.recursive_fwd_chain is not None:
                                                        return True

                                                    if self.recursive_out_label_valid is not None:
                                                        return True

                                                    if self.recursive_out_lable is not None:
                                                        return True

                                                    if self.remote_backup is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath.MplsInformationForPath']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-sh-tbl-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.attached_path is not None:
                                                    return True

                                                if self.backup_index is not None:
                                                    return True

                                                if self.backup_path is not None:
                                                    return True

                                                if self.best_external_path is not None:
                                                    return True

                                                if self.brief_interface_handle is not None:
                                                    return True

                                                if self.brief_next_hop_prefix is not None:
                                                    return True

                                                if self.brief_pnode_address is not None:
                                                    return True

                                                if self.brief_qnode_address is not None:
                                                    return True

                                                if self.hardware_information is not None:
                                                    return True

                                                if self.more_detail_about_path is not None and self.more_detail_about_path._has_data():
                                                    return True

                                                if self.mpls_information_for_path is not None and self.mpls_information_for_path._has_data():
                                                    return True

                                                if self.next_hop_index is not None:
                                                    return True

                                                if self.packets_received_path is not None:
                                                    return True

                                                if self.parent_interface_handle is not None:
                                                    return True

                                                if self.path_dlb is not None:
                                                    return True

                                                if self.path_flags is not None:
                                                    return True

                                                if self.path_index is not None:
                                                    return True

                                                if self.path_info_flags is not None:
                                                    return True

                                                if self.protect_ignore is not None:
                                                    return True

                                                if self.recursionvia_len is not None:
                                                    return True

                                                if self.recursive_path is not None:
                                                    return True

                                                if self.resolved_path is not None:
                                                    return True

                                                if self.via_label_to_recurse is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath.FibShTblPath']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-entry-path'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.fib_sh_tbl_path is not None:
                                                for child_ref in self.fib_sh_tbl_path:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail.FibEntryPath']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ip-prefix-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.broadcast_forward_flag is not None:
                                            return True

                                        if self.broadcast_recive_flag is not None:
                                            return True

                                        if self.detail_fib_entry_information is not None and self.detail_fib_entry_information._has_data():
                                            return True

                                        if self.dummy_real_zero_route is not None:
                                            return True

                                        if self.exact_route_result is not None:
                                            return True

                                        if self.external_switch_triggered is not None:
                                            return True

                                        if self.fib_entry_path is not None and self.fib_entry_path._has_data():
                                            return True

                                        if self.fib_route_download_priority is not None:
                                            return True

                                        if self.flags_external_ldi is not None:
                                            return True

                                        if self.l2_subscriber_ip_protocol is not None:
                                            return True

                                        if self.l2_subscriber_route is not None:
                                            return True

                                        if self.l2_subscriber_xconnect_id is not None:
                                            return True

                                        if self.l2tpv3_cookie_length_bits is not None:
                                            return True

                                        if self.ldi_flags is not None:
                                            return True

                                        if self.ldi_lw_flag is not None:
                                            return True

                                        if self.lspa_flags is not None:
                                            return True

                                        if self.number_of_referances_to_ldi is not None:
                                            return True

                                        if self.number_of_referances_to_path_list is not None:
                                            return True

                                        if self.packet_should_recieve is not None:
                                            return True

                                        if self.path_list_flags is not None:
                                            return True

                                        if self.path_list_source is not None:
                                            return True

                                        if self.platform_hardware is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_connected is not None:
                                            return True

                                        if self.prefix_for_adjancency is not None:
                                            return True

                                        if self.prefix_for_pic_next_hop is not None:
                                            return True

                                        if self.prefix_is_static_or_connected is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.protocol_type_fib_entry is not None:
                                            return True

                                        if self.purgable_after_purge_interval is not None:
                                            return True

                                        if self.ref_counter_of_ldi_lw_ldi is not None:
                                            return True

                                        if self.route_attribute_flag is not None:
                                            return True

                                        if self.time_of_last_update_in_msec is not None:
                                            return True

                                        if self.type_of_ldi_lw_ldi is not None:
                                            return True

                                        if self.version_of_route is not None:
                                            return True

                                        if self.zero_by_zero_route_as_default is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails.IpPrefixDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ip-prefix-details'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ip_prefix_detail is not None:
                                        for child_ref in self.ip_prefix_detail:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixDetails']['meta_info']


                            class Summary(object):
                                """
                                Operational data for FIB Tablee
                                
                                .. attribute:: cef_route_drops
                                
                                	Number of routes dropped by CEF
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: cef_version_mismatch_route_drops
                                
                                	the number of routes dropped due to version mismatch
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: cefl_bl_recycled_routes
                                
                                	Number of routes updates with recycled label handled
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: delete_cache_num_entries
                                
                                	Number of entries in the route delete cache
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: existing_leaves_revisions
                                
                                	Number of entries present on addition
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: explicit_load_sharing_element_bytes
                                
                                	Memory used by Explicit LDIs in bytes
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: explicit_load_sharing_elements
                                
                                	Explicit load share elements
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: extended_prefixes
                                
                                	Number of prefixes with extended path\-list
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: fib_default_prefix
                                
                                	Default prefix
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: fib_default_prefix_mask_length
                                
                                	Default prefix mask length
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: forwarding_elements
                                
                                	Number of forwarding elements linked to the table
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: imposition_prefixes
                                
                                	Number of prefixes with imposition LDI
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: incomplete_next_hops
                                
                                	Number of incomplete NHINFOS
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ldi_backwalks
                                
                                	pd backwalks on LDI modify with backup path
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: leaves_used_bytes
                                
                                	Total Bytes used by leaves
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lisp_eid_prefixes
                                
                                	Number of lisp eid prefixes associated with table
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lisp_eid_valid_prefixes
                                
                                	Number of lisp eid prefixes eligible for forwarding
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lisp_rloc_objects
                                
                                	Number of lisp rloc objects associated with table
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: load_balancing
                                
                                	LBA configuration state
                                	**type**\:  :py:class:`SsLbaStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.SsLbaStateEnum>`
                                
                                .. attribute:: load_sharing_elements
                                
                                	Count of load share elements
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: load_sharing_references
                                
                                	Count of load share references
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: max_resolution_timer
                                
                                	IP CEF max resolution time in seconds
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: new_unresolve_entries
                                
                                	Number of new unresolved entries
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: next_hops
                                
                                	Number of NHINFOS
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: old_unresolve_entries
                                
                                	Number of old unresolved entries
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: prefix
                                
                                	The router\-id
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: prefix_in_place_modifications
                                
                                	Number of inplace modifications
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: reresolve_entries
                                
                                	Number of reresolved entries
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: resolution_timer
                                
                                	IP CEF resolution timer in seconds
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: routes
                                
                                	Number of routes
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: shared_ldi_bytes
                                
                                	Memory used by Shared LDIs in bytes
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: shared_load_sharing_elements
                                
                                	Shared load share elements
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: slow_process_timer
                                
                                	IP CEF slow processing time in seconds
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ss_prot_route_count
                                
                                	Number of routes with FRR protection
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ss_tbl_id
                                
                                	Table Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ss_tbl_id_ptr
                                
                                	Table Id Ptr
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ss_vr_id
                                
                                	Virtual router instance Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ss_vrf_id
                                
                                	Virtual routing forwarding instance Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ss_vxlan_ltep_ifh
                                
                                	VXLAN local Interface handle
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: stale_prefix_deletes
                                
                                	Number of deleted stale leafs
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: total_load_share_element_bytes
                                
                                	Total Bytes used by load share elem
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: unresolve_entries
                                
                                	Number of total unresolved entries
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.cef_route_drops = None
                                    self.cef_version_mismatch_route_drops = None
                                    self.cefl_bl_recycled_routes = None
                                    self.delete_cache_num_entries = None
                                    self.existing_leaves_revisions = None
                                    self.explicit_load_sharing_element_bytes = None
                                    self.explicit_load_sharing_elements = None
                                    self.extended_prefixes = None
                                    self.fib_default_prefix = None
                                    self.fib_default_prefix_mask_length = None
                                    self.forwarding_elements = None
                                    self.imposition_prefixes = None
                                    self.incomplete_next_hops = None
                                    self.ldi_backwalks = None
                                    self.leaves_used_bytes = None
                                    self.lisp_eid_prefixes = None
                                    self.lisp_eid_valid_prefixes = None
                                    self.lisp_rloc_objects = None
                                    self.load_balancing = None
                                    self.load_sharing_elements = None
                                    self.load_sharing_references = None
                                    self.max_resolution_timer = None
                                    self.new_unresolve_entries = None
                                    self.next_hops = None
                                    self.old_unresolve_entries = None
                                    self.prefix = None
                                    self.prefix_in_place_modifications = None
                                    self.reresolve_entries = None
                                    self.resolution_timer = None
                                    self.routes = None
                                    self.shared_ldi_bytes = None
                                    self.shared_load_sharing_elements = None
                                    self.slow_process_timer = None
                                    self.ss_prot_route_count = None
                                    self.ss_tbl_id = None
                                    self.ss_tbl_id_ptr = None
                                    self.ss_vr_id = None
                                    self.ss_vrf_id = None
                                    self.ss_vxlan_ltep_ifh = None
                                    self.stale_prefix_deletes = None
                                    self.total_load_share_element_bytes = None
                                    self.unresolve_entries = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:summary'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.cef_route_drops is not None:
                                        return True

                                    if self.cef_version_mismatch_route_drops is not None:
                                        return True

                                    if self.cefl_bl_recycled_routes is not None:
                                        return True

                                    if self.delete_cache_num_entries is not None:
                                        return True

                                    if self.existing_leaves_revisions is not None:
                                        return True

                                    if self.explicit_load_sharing_element_bytes is not None:
                                        return True

                                    if self.explicit_load_sharing_elements is not None:
                                        return True

                                    if self.extended_prefixes is not None:
                                        return True

                                    if self.fib_default_prefix is not None:
                                        return True

                                    if self.fib_default_prefix_mask_length is not None:
                                        return True

                                    if self.forwarding_elements is not None:
                                        return True

                                    if self.imposition_prefixes is not None:
                                        return True

                                    if self.incomplete_next_hops is not None:
                                        return True

                                    if self.ldi_backwalks is not None:
                                        return True

                                    if self.leaves_used_bytes is not None:
                                        return True

                                    if self.lisp_eid_prefixes is not None:
                                        return True

                                    if self.lisp_eid_valid_prefixes is not None:
                                        return True

                                    if self.lisp_rloc_objects is not None:
                                        return True

                                    if self.load_balancing is not None:
                                        return True

                                    if self.load_sharing_elements is not None:
                                        return True

                                    if self.load_sharing_references is not None:
                                        return True

                                    if self.max_resolution_timer is not None:
                                        return True

                                    if self.new_unresolve_entries is not None:
                                        return True

                                    if self.next_hops is not None:
                                        return True

                                    if self.old_unresolve_entries is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_in_place_modifications is not None:
                                        return True

                                    if self.reresolve_entries is not None:
                                        return True

                                    if self.resolution_timer is not None:
                                        return True

                                    if self.routes is not None:
                                        return True

                                    if self.shared_ldi_bytes is not None:
                                        return True

                                    if self.shared_load_sharing_elements is not None:
                                        return True

                                    if self.slow_process_timer is not None:
                                        return True

                                    if self.ss_prot_route_count is not None:
                                        return True

                                    if self.ss_tbl_id is not None:
                                        return True

                                    if self.ss_tbl_id_ptr is not None:
                                        return True

                                    if self.ss_vr_id is not None:
                                        return True

                                    if self.ss_vrf_id is not None:
                                        return True

                                    if self.ss_vxlan_ltep_ifh is not None:
                                        return True

                                    if self.stale_prefix_deletes is not None:
                                        return True

                                    if self.total_load_share_element_bytes is not None:
                                        return True

                                    if self.unresolve_entries is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.Summary']['meta_info']


                            class InterfaceInfos(object):
                                """
                                Table of InterfaceInfo
                                
                                .. attribute:: interface_info
                                
                                	Specify link type
                                	**type**\: list of  :py:class:`InterfaceInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo>`
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_info = YList()
                                    self.interface_info.parent = self
                                    self.interface_info.name = 'interface_info'


                                class InterfaceInfo(object):
                                    """
                                    Specify link type
                                    
                                    .. attribute:: link_type  <key>
                                    
                                    	Link type
                                    	**type**\:  :py:class:`FibLinkEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibLinkEnum>`
                                    
                                    .. attribute:: interfaces
                                    
                                    	Table of interfaces
                                    	**type**\:  :py:class:`Interfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces>`
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_type = None
                                        self.interfaces = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces()
                                        self.interfaces.parent = self


                                    class Interfaces(object):
                                        """
                                        Table of interfaces
                                        
                                        .. attribute:: interface
                                        
                                        	Specify Interface name
                                        	**type**\: list of  :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface>`
                                        
                                        

                                        """

                                        _prefix = 'fib-common-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface = YList()
                                            self.interface.parent = self
                                            self.interface.name = 'interface'


                                        class Interface(object):
                                            """
                                            Specify Interface name
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Interface Name
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: detail_fib_int_information
                                            
                                            	Detailed FIB interface information
                                            	**type**\:  :py:class:`DetailFibIntInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.DetailFibIntInformation>`
                                            
                                            .. attribute:: drop_packets_while_fib_switching_flag
                                            
                                            	Drop packets while FIB switching flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: fib_id_extension_flags
                                            
                                            	Flags on fibidb extension
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: fib_id_extension_pointer
                                            
                                            	Pointer to fibidb extension
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: fib_id_flags
                                            
                                            	Flags on fibidb
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: fib_id_pointer
                                            
                                            	Pointer to fibidb
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: fib_interface_type
                                            
                                            	FIB Interface type
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: gre_tunnel_interface_flag
                                            
                                            	GRE Tunnel interface flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: interface_up_flag
                                            
                                            	Interface up flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: last_modified_time
                                            
                                            	Time last modified
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: last_operation
                                            
                                            	Last Oper
                                            	**type**\:  :py:class:`FibidbOperEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibidbOperEnum>`
                                            
                                            .. attribute:: loopback_interface_flag
                                            
                                            	Loopback interface flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: null_interface_flag
                                            
                                            	Null interface flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: number_of_dependent_next_hop_information
                                            
                                            	Number of dependent nhinfo's
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: number_of_input_bytes
                                            
                                            	Number of input bytes
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: number_of_input_packets
                                            
                                            	Number of input packets
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: number_of_output_bytes
                                            
                                            	Number of output bytes
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: number_of_output_packets
                                            
                                            	Number of output packets
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: p2p_interface_flag
                                            
                                            	P2P interface flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: per_interface
                                            
                                            	Interface handle
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: per_packet_load_balancing_flag
                                            
                                            	Per packet loadbalancing flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: primary_ipv4_address
                                            
                                            	Pimary local v4 address for the interface
                                            	**type**\:  str
                                            
                                            	**range:** 0..52
                                            
                                            .. attribute:: primary_ipv6_address
                                            
                                            	Pimary local v6 address for the interface
                                            	**type**\:  str
                                            
                                            	**range:** 0..52
                                            
                                            .. attribute:: protocol_enabled
                                            
                                            	Is the protocol configured?
                                            	**type**\:  bool
                                            
                                            .. attribute:: punt_packets_from_fib_switching_flag
                                            
                                            	Punt packets from FIB switching flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: punt_packets_from_linecard_flag
                                            
                                            	Punt packets from linecard flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: referance_count_for_protocol
                                            
                                            	Reference count for the protocol
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: reference_count
                                            
                                            	Reference count
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: si_internal
                                            
                                            	Internal Information
                                            	**type**\:  :py:class:`SiInternal <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal>`
                                            
                                            .. attribute:: tunnel_interface_flag
                                            
                                            	Tunnel interface flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: vrf_local_cef_information_pointer
                                            
                                            	Vrf local cef info ptr
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'fib-common-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.detail_fib_int_information = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.DetailFibIntInformation()
                                                self.detail_fib_int_information.parent = self
                                                self.drop_packets_while_fib_switching_flag = None
                                                self.fib_id_extension_flags = None
                                                self.fib_id_extension_pointer = None
                                                self.fib_id_flags = None
                                                self.fib_id_pointer = None
                                                self.fib_interface_type = None
                                                self.gre_tunnel_interface_flag = None
                                                self.interface_up_flag = None
                                                self.last_modified_time = None
                                                self.last_operation = None
                                                self.loopback_interface_flag = None
                                                self.null_interface_flag = None
                                                self.number_of_dependent_next_hop_information = None
                                                self.number_of_input_bytes = None
                                                self.number_of_input_packets = None
                                                self.number_of_output_bytes = None
                                                self.number_of_output_packets = None
                                                self.p2p_interface_flag = None
                                                self.per_interface = None
                                                self.per_packet_load_balancing_flag = None
                                                self.primary_ipv4_address = None
                                                self.primary_ipv6_address = None
                                                self.protocol_enabled = None
                                                self.punt_packets_from_fib_switching_flag = None
                                                self.punt_packets_from_linecard_flag = None
                                                self.referance_count_for_protocol = None
                                                self.reference_count = None
                                                self.si_internal = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal()
                                                self.si_internal.parent = self
                                                self.tunnel_interface_flag = None
                                                self.vrf_local_cef_information_pointer = None


                                            class DetailFibIntInformation(object):
                                                """
                                                Detailed FIB interface information
                                                
                                                .. attribute:: bgp_pa_input_configured_flag
                                                
                                                	BGP PA configured flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: bgp_pa_output_configured_flag
                                                
                                                	BGP PA configured flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: default_route_with_rpf
                                                
                                                	Allow default route with RPF
                                                	**type**\:  bool
                                                
                                                .. attribute:: destination_bgp_pa_input_configured_flag
                                                
                                                	dst BGP PA configured flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: destination_bgp_pa_output_configured_flag
                                                
                                                	dst BGP PA configured flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: forwarding_flag
                                                
                                                	Forwarding enabled/disabled flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: icmp_flag
                                                
                                                	ICMP  configured flag
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: interface_mtu
                                                
                                                	Interface Protocol MTU
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: multi_label_drop_flag
                                                
                                                	Drop packets with multiple\-label\-stack if set
                                                	**type**\:  bool
                                                
                                                .. attribute:: rpf_configured_flag
                                                
                                                	RPF configured flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: rpf_mode
                                                
                                                	RPF mode
                                                	**type**\:  :py:class:`FibRpfModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibRpfModeEnum>`
                                                
                                                .. attribute:: self_ping_with_rpf
                                                
                                                	Allow selfping with RPF
                                                	**type**\:  bool
                                                
                                                .. attribute:: source_bgp_pa_input_configured_flag
                                                
                                                	src BGP PA configured flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: source_bgp_pa_output_configured_flag
                                                
                                                	src BGP PA configured flag
                                                	**type**\:  bool
                                                
                                                

                                                """

                                                _prefix = 'fib-common-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.bgp_pa_input_configured_flag = None
                                                    self.bgp_pa_output_configured_flag = None
                                                    self.default_route_with_rpf = None
                                                    self.destination_bgp_pa_input_configured_flag = None
                                                    self.destination_bgp_pa_output_configured_flag = None
                                                    self.forwarding_flag = None
                                                    self.icmp_flag = None
                                                    self.interface_mtu = None
                                                    self.multi_label_drop_flag = None
                                                    self.rpf_configured_flag = None
                                                    self.rpf_mode = None
                                                    self.self_ping_with_rpf = None
                                                    self.source_bgp_pa_input_configured_flag = None
                                                    self.source_bgp_pa_output_configured_flag = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:detail-fib-int-information'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.bgp_pa_input_configured_flag is not None:
                                                        return True

                                                    if self.bgp_pa_output_configured_flag is not None:
                                                        return True

                                                    if self.default_route_with_rpf is not None:
                                                        return True

                                                    if self.destination_bgp_pa_input_configured_flag is not None:
                                                        return True

                                                    if self.destination_bgp_pa_output_configured_flag is not None:
                                                        return True

                                                    if self.forwarding_flag is not None:
                                                        return True

                                                    if self.icmp_flag is not None:
                                                        return True

                                                    if self.interface_mtu is not None:
                                                        return True

                                                    if self.multi_label_drop_flag is not None:
                                                        return True

                                                    if self.rpf_configured_flag is not None:
                                                        return True

                                                    if self.rpf_mode is not None:
                                                        return True

                                                    if self.self_ping_with_rpf is not None:
                                                        return True

                                                    if self.source_bgp_pa_input_configured_flag is not None:
                                                        return True

                                                    if self.source_bgp_pa_output_configured_flag is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.DetailFibIntInformation']['meta_info']


                                            class SiInternal(object):
                                                """
                                                Internal Information
                                                
                                                .. attribute:: fib_idb_hist
                                                
                                                	Event History for IDB
                                                	**type**\:  :py:class:`FibIdbHist <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibIdbHist>`
                                                
                                                .. attribute:: fib_srte_head_hist
                                                
                                                	Event History for Srtehead
                                                	**type**\:  :py:class:`FibSrteHeadHist <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibSrteHeadHist>`
                                                
                                                

                                                """

                                                _prefix = 'fib-common-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.fib_idb_hist = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibIdbHist()
                                                    self.fib_idb_hist.parent = self
                                                    self.fib_srte_head_hist = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibSrteHeadHist()
                                                    self.fib_srte_head_hist.parent = self


                                                class FibIdbHist(object):
                                                    """
                                                    Event History for IDB
                                                    
                                                    .. attribute:: evt_class_name
                                                    
                                                    	Class name string
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: evt_entry
                                                    
                                                    	Array of event entries
                                                    	**type**\: list of  :py:class:`EvtEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibIdbHist.EvtEntry>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.evt_class_name = None
                                                        self.evt_entry = YList()
                                                        self.evt_entry.parent = self
                                                        self.evt_entry.name = 'evt_entry'


                                                    class EvtEntry(object):
                                                        """
                                                        Array of event entries
                                                        
                                                        .. attribute:: evt_data
                                                        
                                                        	Optional data
                                                        	**type**\:  list of int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: evt_many
                                                        
                                                        	Multiple instance flag
                                                        	**type**\:  bool
                                                        
                                                        .. attribute:: evt_name
                                                        
                                                        	Event name
                                                        	**type**\:  str
                                                        
                                                        .. attribute:: evt_sticky
                                                        
                                                        	Sticky flag
                                                        	**type**\:  bool
                                                        
                                                        .. attribute:: evt_timestamp
                                                        
                                                        	The timestamp of the event
                                                        	**type**\:  str
                                                        
                                                        .. attribute:: evt_type
                                                        
                                                        	Event type
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'fib-common-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.evt_data = YLeafList()
                                                            self.evt_data.parent = self
                                                            self.evt_data.name = 'evt_data'
                                                            self.evt_many = None
                                                            self.evt_name = None
                                                            self.evt_sticky = None
                                                            self.evt_timestamp = None
                                                            self.evt_type = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:evt-entry'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.evt_data is not None:
                                                                for child in self.evt_data:
                                                                    if child is not None:
                                                                        return True

                                                            if self.evt_many is not None:
                                                                return True

                                                            if self.evt_name is not None:
                                                                return True

                                                            if self.evt_sticky is not None:
                                                                return True

                                                            if self.evt_timestamp is not None:
                                                                return True

                                                            if self.evt_type is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibIdbHist.EvtEntry']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-idb-hist'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.evt_class_name is not None:
                                                            return True

                                                        if self.evt_entry is not None:
                                                            for child_ref in self.evt_entry:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibIdbHist']['meta_info']


                                                class FibSrteHeadHist(object):
                                                    """
                                                    Event History for Srtehead
                                                    
                                                    .. attribute:: evt_class_name
                                                    
                                                    	Class name string
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: evt_entry
                                                    
                                                    	Array of event entries
                                                    	**type**\: list of  :py:class:`EvtEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibSrteHeadHist.EvtEntry>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.evt_class_name = None
                                                        self.evt_entry = YList()
                                                        self.evt_entry.parent = self
                                                        self.evt_entry.name = 'evt_entry'


                                                    class EvtEntry(object):
                                                        """
                                                        Array of event entries
                                                        
                                                        .. attribute:: evt_data
                                                        
                                                        	Optional data
                                                        	**type**\:  list of int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: evt_many
                                                        
                                                        	Multiple instance flag
                                                        	**type**\:  bool
                                                        
                                                        .. attribute:: evt_name
                                                        
                                                        	Event name
                                                        	**type**\:  str
                                                        
                                                        .. attribute:: evt_sticky
                                                        
                                                        	Sticky flag
                                                        	**type**\:  bool
                                                        
                                                        .. attribute:: evt_timestamp
                                                        
                                                        	The timestamp of the event
                                                        	**type**\:  str
                                                        
                                                        .. attribute:: evt_type
                                                        
                                                        	Event type
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'fib-common-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.evt_data = YLeafList()
                                                            self.evt_data.parent = self
                                                            self.evt_data.name = 'evt_data'
                                                            self.evt_many = None
                                                            self.evt_name = None
                                                            self.evt_sticky = None
                                                            self.evt_timestamp = None
                                                            self.evt_type = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:evt-entry'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.evt_data is not None:
                                                                for child in self.evt_data:
                                                                    if child is not None:
                                                                        return True

                                                            if self.evt_many is not None:
                                                                return True

                                                            if self.evt_name is not None:
                                                                return True

                                                            if self.evt_sticky is not None:
                                                                return True

                                                            if self.evt_timestamp is not None:
                                                                return True

                                                            if self.evt_type is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibSrteHeadHist.EvtEntry']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-srte-head-hist'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.evt_class_name is not None:
                                                            return True

                                                        if self.evt_entry is not None:
                                                            for child_ref in self.evt_entry:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal.FibSrteHeadHist']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:si-internal'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.fib_idb_hist is not None and self.fib_idb_hist._has_data():
                                                        return True

                                                    if self.fib_srte_head_hist is not None and self.fib_srte_head_hist._has_data():
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface.SiInternal']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:interface[Cisco-IOS-XR-fib-common-oper:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.detail_fib_int_information is not None and self.detail_fib_int_information._has_data():
                                                    return True

                                                if self.drop_packets_while_fib_switching_flag is not None:
                                                    return True

                                                if self.fib_id_extension_flags is not None:
                                                    return True

                                                if self.fib_id_extension_pointer is not None:
                                                    return True

                                                if self.fib_id_flags is not None:
                                                    return True

                                                if self.fib_id_pointer is not None:
                                                    return True

                                                if self.fib_interface_type is not None:
                                                    return True

                                                if self.gre_tunnel_interface_flag is not None:
                                                    return True

                                                if self.interface_up_flag is not None:
                                                    return True

                                                if self.last_modified_time is not None:
                                                    return True

                                                if self.last_operation is not None:
                                                    return True

                                                if self.loopback_interface_flag is not None:
                                                    return True

                                                if self.null_interface_flag is not None:
                                                    return True

                                                if self.number_of_dependent_next_hop_information is not None:
                                                    return True

                                                if self.number_of_input_bytes is not None:
                                                    return True

                                                if self.number_of_input_packets is not None:
                                                    return True

                                                if self.number_of_output_bytes is not None:
                                                    return True

                                                if self.number_of_output_packets is not None:
                                                    return True

                                                if self.p2p_interface_flag is not None:
                                                    return True

                                                if self.per_interface is not None:
                                                    return True

                                                if self.per_packet_load_balancing_flag is not None:
                                                    return True

                                                if self.primary_ipv4_address is not None:
                                                    return True

                                                if self.primary_ipv6_address is not None:
                                                    return True

                                                if self.protocol_enabled is not None:
                                                    return True

                                                if self.punt_packets_from_fib_switching_flag is not None:
                                                    return True

                                                if self.punt_packets_from_linecard_flag is not None:
                                                    return True

                                                if self.referance_count_for_protocol is not None:
                                                    return True

                                                if self.reference_count is not None:
                                                    return True

                                                if self.si_internal is not None and self.si_internal._has_data():
                                                    return True

                                                if self.tunnel_interface_flag is not None:
                                                    return True

                                                if self.vrf_local_cef_information_pointer is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces.Interface']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:interfaces'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface is not None:
                                                for child_ref in self.interface:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo.Interfaces']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.link_type is None:
                                            raise YPYModelError('Key property link_type is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:interface-info[Cisco-IOS-XR-fib-common-oper:link-type = ' + str(self.link_type) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_type is not None:
                                            return True

                                        if self.interfaces is not None and self.interfaces._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos.InterfaceInfo']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:interface-infos'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_info is not None:
                                        for child_ref in self.interface_info:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.InterfaceInfos']['meta_info']


                            class IpPrefixBriefs(object):
                                """
                                IP FIB prefix brief table
                                
                                .. attribute:: ip_prefix_brief
                                
                                	IP FIB prefix brief table entry
                                	**type**\: list of  :py:class:`IpPrefixBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief>`
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ip_prefix_brief = YList()
                                    self.ip_prefix_brief.parent = self
                                    self.ip_prefix_brief.name = 'ip_prefix_brief'


                                class IpPrefixBrief(object):
                                    """
                                    IP FIB prefix brief table entry
                                    
                                    .. attribute:: broadcast_forward_flag
                                    
                                    	Broadcast forward flag
                                    	**type**\:  bool
                                    
                                    .. attribute:: broadcast_recive_flag
                                    
                                    	Broadcast receive flag
                                    	**type**\:  bool
                                    
                                    .. attribute:: detail_fib_entry_information
                                    
                                    	Detailed FIB entry information
                                    	**type**\:  :py:class:`DetailFibEntryInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation>`
                                    
                                    .. attribute:: dummy_real_zero_route
                                    
                                    	Dummy real zero route
                                    	**type**\:  bool
                                    
                                    .. attribute:: exact_route_result
                                    
                                    	exact\-route result
                                    	**type**\:  bool
                                    
                                    .. attribute:: external_switch_triggered
                                    
                                    	External switch function triggered
                                    	**type**\:  bool
                                    
                                    .. attribute:: fib_entry_path
                                    
                                    	FIB entry path details
                                    	**type**\:  :py:class:`FibEntryPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath>`
                                    
                                    .. attribute:: fib_route_download_priority
                                    
                                    	Priority at which the route was downloaded
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: flags_external_ldi
                                    
                                    	The flags of ext assocaited with LDI 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: l2_subscriber_ip_protocol
                                    
                                    	IP protocol associated with L2 subscriber
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: l2_subscriber_route
                                    
                                    	Is L2 Subscriber route
                                    	**type**\:  bool
                                    
                                    .. attribute:: l2_subscriber_xconnect_id
                                    
                                    	XConnect\-id associated with L2 subscriber
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: l2tpv3_cookie_length_bits
                                    
                                    	L2TPv3 cookie length for L2 subscriber
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ldi_flags
                                    
                                    	The LDI flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ldi_lw_flag
                                    
                                    	The LDI LW flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: lspa_flags
                                    
                                    	The LSPA flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: number_of_referances_to_ldi
                                    
                                    	Number of references to the LDI
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: number_of_referances_to_path_list
                                    
                                    	Number of references to the pathlist
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: packet_should_recieve
                                    
                                    	Packet should always be received
                                    	**type**\:  bool
                                    
                                    .. attribute:: path_list_flags
                                    
                                    	The pathlist flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_list_source
                                    
                                    	The pathlist source
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: platform_hardware
                                    
                                    	Platform Hardware info
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: prefix
                                    
                                    	Destination IP address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_connected
                                    
                                    	Prefix is connected
                                    	**type**\:  bool
                                    
                                    .. attribute:: prefix_for_adjancency
                                    
                                    	Prefix is for an adjacency
                                    	**type**\:  bool
                                    
                                    .. attribute:: prefix_for_pic_next_hop
                                    
                                    	Prefix is for a PIC nexthop
                                    	**type**\:  bool
                                    
                                    .. attribute:: prefix_is_static_or_connected
                                    
                                    	Prefix is static or connected
                                    	**type**\:  bool
                                    
                                    .. attribute:: prefix_length
                                    
                                    	IP prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: protocol_type_fib_entry
                                    
                                    	Proto type for this entry
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: purgable_after_purge_interval
                                    
                                    	Purgable after the purge interval
                                    	**type**\:  bool
                                    
                                    .. attribute:: ref_counter_of_ldi_lw_ldi
                                    
                                    	The refcounter of LDI LW LDI
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: route_attribute_flag
                                    
                                    	Route attributes summary flag
                                    	**type**\:  bool
                                    
                                    .. attribute:: time_of_last_update_in_msec
                                    
                                    	The time of last update in msec
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: type_of_ldi_lw_ldi
                                    
                                    	The type of LDI LW LDI
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: version_of_route
                                    
                                    	The version of the route
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: zero_by_zero_route_as_default
                                    
                                    	0/0 route added as default route
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.broadcast_forward_flag = None
                                        self.broadcast_recive_flag = None
                                        self.detail_fib_entry_information = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation()
                                        self.detail_fib_entry_information.parent = self
                                        self.dummy_real_zero_route = None
                                        self.exact_route_result = None
                                        self.external_switch_triggered = None
                                        self.fib_entry_path = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath()
                                        self.fib_entry_path.parent = self
                                        self.fib_route_download_priority = None
                                        self.flags_external_ldi = None
                                        self.l2_subscriber_ip_protocol = None
                                        self.l2_subscriber_route = None
                                        self.l2_subscriber_xconnect_id = None
                                        self.l2tpv3_cookie_length_bits = None
                                        self.ldi_flags = None
                                        self.ldi_lw_flag = None
                                        self.lspa_flags = None
                                        self.number_of_referances_to_ldi = None
                                        self.number_of_referances_to_path_list = None
                                        self.packet_should_recieve = None
                                        self.path_list_flags = None
                                        self.path_list_source = None
                                        self.platform_hardware = None
                                        self.prefix = None
                                        self.prefix_connected = None
                                        self.prefix_for_adjancency = None
                                        self.prefix_for_pic_next_hop = None
                                        self.prefix_is_static_or_connected = None
                                        self.prefix_length = None
                                        self.protocol_type_fib_entry = None
                                        self.purgable_after_purge_interval = None
                                        self.ref_counter_of_ldi_lw_ldi = None
                                        self.route_attribute_flag = None
                                        self.time_of_last_update_in_msec = None
                                        self.type_of_ldi_lw_ldi = None
                                        self.version_of_route = None
                                        self.zero_by_zero_route_as_default = None


                                    class DetailFibEntryInformation(object):
                                        """
                                        Detailed FIB entry information
                                        
                                        .. attribute:: adjacency_address_length
                                        
                                        	ADJ ADDR LEN
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: adjacency_interface
                                        
                                        	ADJ IFH
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: afi_fib_protocol_type
                                        
                                        	AFI FIB protocol type
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: aib_l3_address
                                        
                                        	AIB L3 Address
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: bgp_attribute_id
                                        
                                        	BGP attribute id
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bgp_attribute_next_hop_as
                                        
                                        	BGP attribute next hop as
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bgp_attribute_origin_as
                                        
                                        	BGP attribute origin as
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bgp_local_attribute_id
                                        
                                        	BGP local attribute id
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bytes_through_fib_entry
                                        
                                        	Bytes through this FIB entry
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: com_string
                                        
                                        	com st
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: detailed_prefix_length
                                        
                                        	Prefix length
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: extcom_string
                                        
                                        	extcom st
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: extended_community
                                        
                                        	extended community
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: fast_adjacency_flag
                                        
                                        	Fast adjacency flag
                                        	**type**\:  bool
                                        
                                        .. attribute:: fib_entry_adjacency_address
                                        
                                        	FIB entry adj address
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: fib_entry_adjacency_interface
                                        
                                        	FIB entry adjacency interface
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: fib_entry_adjacency_type
                                        
                                        	FIB entry adjacency type
                                        	**type**\:  :py:class:`FibAdjacencyShowEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibAdjacencyShowEnum>`
                                        
                                        .. attribute:: fib_entry_version
                                        
                                        	FIB entry version number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: fib_protocol_type
                                        
                                        	FIB Protocol type
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: fib_special_nh_information_type
                                        
                                        	FIB Special NHINFO Type
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: flow_tag
                                        
                                        	PBR flow\-tag
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: forward_class
                                        
                                        	SPP forwarding class ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: illegal_fast_adjacency_flag
                                        
                                        	Illegal fast adjacency flag
                                        	**type**\:  bool
                                        
                                        .. attribute:: ldi_time_of_last_update_in_msec
                                        
                                        	The time of last update for LDI in msec
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: load_sharing_type
                                        
                                        	Load sharing type
                                        	**type**\:  :py:class:`FibLoadshareShowEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibLoadshareShowEnum>`
                                        
                                        .. attribute:: loadshare_information
                                        
                                        	Detailed Loadshare info
                                        	**type**\:  :py:class:`LoadshareInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation>`
                                        
                                        .. attribute:: lwldi_time_of_last_update_in_msec
                                        
                                        	The time of last update for LW\-LDI in msec
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: mpls_fec
                                        
                                        	mpls fec
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: packets_through_fib_entry
                                        
                                        	Packets through this FIB entry
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: path_string
                                        
                                        	As path string
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: per_prefix_accounting
                                        
                                        	Per Prefix Accounting
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: pl_time_of_last_update_in_msec
                                        
                                        	The time of last update for PL in msec
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: pl_time_stamp_type
                                        
                                        	The type of time\-stamp on PL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: precedence_forpackets
                                        
                                        	Precedence for packets to this entry
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: prefix_protocol
                                        
                                        	Prefix protocol
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: qos_group
                                        
                                        	qos group
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: qppb_qos_group_and_ip_precedence
                                        
                                        	qppb QOS group and IP precedence
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: remote_adjacency_flag
                                        
                                        	Remote adjacency flag
                                        	**type**\:  bool
                                        
                                        .. attribute:: switch_compontent_id
                                        
                                        	Switch function compontent ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: traffic_index_for_packets
                                        
                                        	Traffic index for packets to this entry
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'fib-common-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.adjacency_address_length = None
                                            self.adjacency_interface = None
                                            self.afi_fib_protocol_type = None
                                            self.aib_l3_address = None
                                            self.bgp_attribute_id = None
                                            self.bgp_attribute_next_hop_as = None
                                            self.bgp_attribute_origin_as = None
                                            self.bgp_local_attribute_id = None
                                            self.bytes_through_fib_entry = None
                                            self.com_string = None
                                            self.detailed_prefix_length = None
                                            self.extcom_string = None
                                            self.extended_community = None
                                            self.fast_adjacency_flag = None
                                            self.fib_entry_adjacency_address = None
                                            self.fib_entry_adjacency_interface = None
                                            self.fib_entry_adjacency_type = None
                                            self.fib_entry_version = None
                                            self.fib_protocol_type = None
                                            self.fib_special_nh_information_type = None
                                            self.flow_tag = None
                                            self.forward_class = None
                                            self.illegal_fast_adjacency_flag = None
                                            self.ldi_time_of_last_update_in_msec = None
                                            self.load_sharing_type = None
                                            self.loadshare_information = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation()
                                            self.loadshare_information.parent = self
                                            self.lwldi_time_of_last_update_in_msec = None
                                            self.mpls_fec = None
                                            self.packets_through_fib_entry = None
                                            self.path_string = None
                                            self.per_prefix_accounting = None
                                            self.pl_time_of_last_update_in_msec = None
                                            self.pl_time_stamp_type = None
                                            self.precedence_forpackets = None
                                            self.prefix_protocol = None
                                            self.qos_group = None
                                            self.qppb_qos_group_and_ip_precedence = None
                                            self.remote_adjacency_flag = None
                                            self.switch_compontent_id = None
                                            self.traffic_index_for_packets = None


                                        class LoadshareInformation(object):
                                            """
                                            Detailed Loadshare info
                                            
                                            .. attribute:: bytes_through_load_information
                                            
                                            	Bytes through this loadinfo
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: is_owner
                                            
                                            	Owner flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: load_information_owner_deleted_flag
                                            
                                            	Loadinfo owner deleted flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: load_information_reference_count
                                            
                                            	Loadinfo reference count
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: load_informtion_internal_data
                                            
                                            	Loadinfo internal data
                                            	**type**\:  :py:class:`LoadInformtionInternalData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData>`
                                            
                                            .. attribute:: loadinfo_sanity_flag
                                            
                                            	Loadinfo sanity flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: mask_length_of_owner
                                            
                                            	Mask length of the owner
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: packets_through_load_information
                                            
                                            	Packets through this loadinfo
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: per_dest_load_sharing_flag
                                            
                                            	Per destination load sharing flag
                                            	**type**\:  bool
                                            
                                            .. attribute:: prefix_of_owner
                                            
                                            	Prefix of the owner
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: total_bytes_through_load_information
                                            
                                            	Total bytes through this loadinfo
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            .. attribute:: total_packets_through_load_information
                                            
                                            	Total packets through this loadinfo
                                            	**type**\:  long
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            

                                            """

                                            _prefix = 'fib-common-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.bytes_through_load_information = None
                                                self.is_owner = None
                                                self.load_information_owner_deleted_flag = None
                                                self.load_information_reference_count = None
                                                self.load_informtion_internal_data = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData()
                                                self.load_informtion_internal_data.parent = self
                                                self.loadinfo_sanity_flag = None
                                                self.mask_length_of_owner = None
                                                self.packets_through_load_information = None
                                                self.per_dest_load_sharing_flag = None
                                                self.prefix_of_owner = None
                                                self.total_bytes_through_load_information = None
                                                self.total_packets_through_load_information = None


                                            class LoadInformtionInternalData(object):
                                                """
                                                Loadinfo internal data
                                                
                                                .. attribute:: adjacency_address
                                                
                                                	Adjacency address
                                                	**type**\: list of  :py:class:`AdjacencyAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.AdjacencyAddress>`
                                                
                                                .. attribute:: interface_handle
                                                
                                                	Interface handle
                                                	**type**\:  list of str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: is_pbts_info_valid
                                                
                                                	PBTS info valid flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: ldi_next_hop_buckets
                                                
                                                	Number of LDI next hop buckets
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: level_ofldis
                                                
                                                	level of ldis
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: maximum_index_arrays
                                                
                                                	Maximum index of the arrays
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: maximum_slots
                                                
                                                	Maximum slots
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: normalized_weights
                                                
                                                	Normalized weights
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: number_of_ldis
                                                
                                                	no. of ldis
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: path_indices
                                                
                                                	Path indices
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: path_ldi_numbers
                                                
                                                	Path indices
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: pbts_class_is_fallback_mapped
                                                
                                                	Does PBTS class fall back to drop or any class
                                                	**type**\: list of  :py:class:`PbtsClassIsFallbackMapped <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.PbtsClassIsFallbackMapped>`
                                                
                                                .. attribute:: pbts_class_num_paths
                                                
                                                	PBTS class num paths
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: pbts_class_offset
                                                
                                                	PBTS class offset
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: pbts_fallback_mapped_class
                                                
                                                	PBTS class falls back to class
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: pbts_fallback_to_drop
                                                
                                                	PBTS class falls back to drop
                                                	**type**\: list of  :py:class:`PbtsFallbackToDrop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.PbtsFallbackToDrop>`
                                                
                                                .. attribute:: platform_hardware_information
                                                
                                                	Platform Hardware info
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: round_robin_disable
                                                
                                                	Round Robin Disable
                                                	**type**\:  bool
                                                
                                                .. attribute:: sanity_flag
                                                
                                                	Sanity flag
                                                	**type**\:  list of bool
                                                
                                                .. attribute:: tunnel_class_value
                                                
                                                	Tunnel class value
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: tunnel_is_forward_class
                                                
                                                	Tunnel is forward class
                                                	**type**\: list of  :py:class:`TunnelIsForwardClass <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.TunnelIsForwardClass>`
                                                
                                                .. attribute:: weights_of_path
                                                
                                                	Weights of paths
                                                	**type**\:  list of int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'fib-common-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.adjacency_address = YList()
                                                    self.adjacency_address.parent = self
                                                    self.adjacency_address.name = 'adjacency_address'
                                                    self.interface_handle = YLeafList()
                                                    self.interface_handle.parent = self
                                                    self.interface_handle.name = 'interface_handle'
                                                    self.is_pbts_info_valid = None
                                                    self.ldi_next_hop_buckets = None
                                                    self.level_ofldis = None
                                                    self.maximum_index_arrays = None
                                                    self.maximum_slots = None
                                                    self.normalized_weights = None
                                                    self.number_of_ldis = None
                                                    self.path_indices = None
                                                    self.path_ldi_numbers = None
                                                    self.pbts_class_is_fallback_mapped = YList()
                                                    self.pbts_class_is_fallback_mapped.parent = self
                                                    self.pbts_class_is_fallback_mapped.name = 'pbts_class_is_fallback_mapped'
                                                    self.pbts_class_num_paths = None
                                                    self.pbts_class_offset = None
                                                    self.pbts_fallback_mapped_class = None
                                                    self.pbts_fallback_to_drop = YList()
                                                    self.pbts_fallback_to_drop.parent = self
                                                    self.pbts_fallback_to_drop.name = 'pbts_fallback_to_drop'
                                                    self.platform_hardware_information = None
                                                    self.round_robin_disable = None
                                                    self.sanity_flag = YLeafList()
                                                    self.sanity_flag.parent = self
                                                    self.sanity_flag.name = 'sanity_flag'
                                                    self.tunnel_class_value = None
                                                    self.tunnel_is_forward_class = YList()
                                                    self.tunnel_is_forward_class.parent = self
                                                    self.tunnel_is_forward_class.name = 'tunnel_is_forward_class'
                                                    self.weights_of_path = YLeafList()
                                                    self.weights_of_path.parent = self
                                                    self.weights_of_path.name = 'weights_of_path'


                                                class AdjacencyAddress(object):
                                                    """
                                                    Adjacency address
                                                    
                                                    .. attribute:: address
                                                    
                                                    	address
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..60
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.address = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:adjacency-address'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.address is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.AdjacencyAddress']['meta_info']


                                                class PbtsClassIsFallbackMapped(object):
                                                    """
                                                    Does PBTS class fall back to drop or any class
                                                    
                                                    .. attribute:: entry
                                                    
                                                    	Array entry
                                                    	**type**\:  bool
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.entry = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:pbts-class-is-fallback-mapped'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.entry is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.PbtsClassIsFallbackMapped']['meta_info']


                                                class PbtsFallbackToDrop(object):
                                                    """
                                                    PBTS class falls back to drop
                                                    
                                                    .. attribute:: entry
                                                    
                                                    	Array entry
                                                    	**type**\:  bool
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.entry = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:pbts-fallback-to-drop'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.entry is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.PbtsFallbackToDrop']['meta_info']


                                                class TunnelIsForwardClass(object):
                                                    """
                                                    Tunnel is forward class
                                                    
                                                    .. attribute:: entry
                                                    
                                                    	Array entry
                                                    	**type**\:  bool
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.entry = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:tunnel-is-forward-class'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.entry is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData.TunnelIsForwardClass']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:load-informtion-internal-data'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.adjacency_address is not None:
                                                        for child_ref in self.adjacency_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.interface_handle is not None:
                                                        for child in self.interface_handle:
                                                            if child is not None:
                                                                return True

                                                    if self.is_pbts_info_valid is not None:
                                                        return True

                                                    if self.ldi_next_hop_buckets is not None:
                                                        return True

                                                    if self.level_ofldis is not None:
                                                        return True

                                                    if self.maximum_index_arrays is not None:
                                                        return True

                                                    if self.maximum_slots is not None:
                                                        return True

                                                    if self.normalized_weights is not None:
                                                        return True

                                                    if self.number_of_ldis is not None:
                                                        return True

                                                    if self.path_indices is not None:
                                                        return True

                                                    if self.path_ldi_numbers is not None:
                                                        return True

                                                    if self.pbts_class_is_fallback_mapped is not None:
                                                        for child_ref in self.pbts_class_is_fallback_mapped:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.pbts_class_num_paths is not None:
                                                        return True

                                                    if self.pbts_class_offset is not None:
                                                        return True

                                                    if self.pbts_fallback_mapped_class is not None:
                                                        return True

                                                    if self.pbts_fallback_to_drop is not None:
                                                        for child_ref in self.pbts_fallback_to_drop:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.platform_hardware_information is not None:
                                                        return True

                                                    if self.round_robin_disable is not None:
                                                        return True

                                                    if self.sanity_flag is not None:
                                                        for child in self.sanity_flag:
                                                            if child is not None:
                                                                return True

                                                    if self.tunnel_class_value is not None:
                                                        return True

                                                    if self.tunnel_is_forward_class is not None:
                                                        for child_ref in self.tunnel_is_forward_class:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.weights_of_path is not None:
                                                        for child in self.weights_of_path:
                                                            if child is not None:
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation.LoadInformtionInternalData']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:loadshare-information'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.bytes_through_load_information is not None:
                                                    return True

                                                if self.is_owner is not None:
                                                    return True

                                                if self.load_information_owner_deleted_flag is not None:
                                                    return True

                                                if self.load_information_reference_count is not None:
                                                    return True

                                                if self.load_informtion_internal_data is not None and self.load_informtion_internal_data._has_data():
                                                    return True

                                                if self.loadinfo_sanity_flag is not None:
                                                    return True

                                                if self.mask_length_of_owner is not None:
                                                    return True

                                                if self.packets_through_load_information is not None:
                                                    return True

                                                if self.per_dest_load_sharing_flag is not None:
                                                    return True

                                                if self.prefix_of_owner is not None:
                                                    return True

                                                if self.total_bytes_through_load_information is not None:
                                                    return True

                                                if self.total_packets_through_load_information is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation.LoadshareInformation']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:detail-fib-entry-information'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.adjacency_address_length is not None:
                                                return True

                                            if self.adjacency_interface is not None:
                                                return True

                                            if self.afi_fib_protocol_type is not None:
                                                return True

                                            if self.aib_l3_address is not None:
                                                return True

                                            if self.bgp_attribute_id is not None:
                                                return True

                                            if self.bgp_attribute_next_hop_as is not None:
                                                return True

                                            if self.bgp_attribute_origin_as is not None:
                                                return True

                                            if self.bgp_local_attribute_id is not None:
                                                return True

                                            if self.bytes_through_fib_entry is not None:
                                                return True

                                            if self.com_string is not None:
                                                return True

                                            if self.detailed_prefix_length is not None:
                                                return True

                                            if self.extcom_string is not None:
                                                return True

                                            if self.extended_community is not None:
                                                return True

                                            if self.fast_adjacency_flag is not None:
                                                return True

                                            if self.fib_entry_adjacency_address is not None:
                                                return True

                                            if self.fib_entry_adjacency_interface is not None:
                                                return True

                                            if self.fib_entry_adjacency_type is not None:
                                                return True

                                            if self.fib_entry_version is not None:
                                                return True

                                            if self.fib_protocol_type is not None:
                                                return True

                                            if self.fib_special_nh_information_type is not None:
                                                return True

                                            if self.flow_tag is not None:
                                                return True

                                            if self.forward_class is not None:
                                                return True

                                            if self.illegal_fast_adjacency_flag is not None:
                                                return True

                                            if self.ldi_time_of_last_update_in_msec is not None:
                                                return True

                                            if self.load_sharing_type is not None:
                                                return True

                                            if self.loadshare_information is not None and self.loadshare_information._has_data():
                                                return True

                                            if self.lwldi_time_of_last_update_in_msec is not None:
                                                return True

                                            if self.mpls_fec is not None:
                                                return True

                                            if self.packets_through_fib_entry is not None:
                                                return True

                                            if self.path_string is not None:
                                                return True

                                            if self.per_prefix_accounting is not None:
                                                return True

                                            if self.pl_time_of_last_update_in_msec is not None:
                                                return True

                                            if self.pl_time_stamp_type is not None:
                                                return True

                                            if self.precedence_forpackets is not None:
                                                return True

                                            if self.prefix_protocol is not None:
                                                return True

                                            if self.qos_group is not None:
                                                return True

                                            if self.qppb_qos_group_and_ip_precedence is not None:
                                                return True

                                            if self.remote_adjacency_flag is not None:
                                                return True

                                            if self.switch_compontent_id is not None:
                                                return True

                                            if self.traffic_index_for_packets is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.DetailFibEntryInformation']['meta_info']


                                    class FibEntryPath(object):
                                        """
                                        FIB entry path details
                                        
                                        .. attribute:: fib_sh_tbl_path
                                        
                                        	fib sh tbl path
                                        	**type**\: list of  :py:class:`FibShTblPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath>`
                                        
                                        

                                        """

                                        _prefix = 'fib-common-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.fib_sh_tbl_path = YList()
                                            self.fib_sh_tbl_path.parent = self
                                            self.fib_sh_tbl_path.name = 'fib_sh_tbl_path'


                                        class FibShTblPath(object):
                                            """
                                            fib sh tbl path
                                            
                                            .. attribute:: attached_path
                                            
                                            	Attached path
                                            	**type**\:  bool
                                            
                                            .. attribute:: backup_index
                                            
                                            	Backup path index
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: backup_path
                                            
                                            	Backup path
                                            	**type**\:  bool
                                            
                                            .. attribute:: best_external_path
                                            
                                            	Best external path
                                            	**type**\:  bool
                                            
                                            .. attribute:: brief_interface_handle
                                            
                                            	Interface handle
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: brief_next_hop_prefix
                                            
                                            	Next hop prefix
                                            	**type**\:  str
                                            
                                            	**range:** 0..52
                                            
                                            .. attribute:: brief_pnode_address
                                            
                                            	P\-node address
                                            	**type**\:  str
                                            
                                            	**range:** 0..52
                                            
                                            .. attribute:: brief_qnode_address
                                            
                                            	Q\-node address
                                            	**type**\:  str
                                            
                                            	**range:** 0..52
                                            
                                            .. attribute:: hardware_information
                                            
                                            	Hardware info
                                            	**type**\:  str
                                            
                                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                            
                                            .. attribute:: more_detail_about_path
                                            
                                            	More detail about this path entry
                                            	**type**\:  :py:class:`MoreDetailAboutPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MoreDetailAboutPath>`
                                            
                                            .. attribute:: mpls_information_for_path
                                            
                                            	mpls info for this path entry
                                            	**type**\:  :py:class:`MplsInformationForPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MplsInformationForPath>`
                                            
                                            .. attribute:: next_hop_index
                                            
                                            	Next Hop Index
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: packets_received_path
                                            
                                            	Packets received on this path
                                            	**type**\:  bool
                                            
                                            .. attribute:: parent_interface_handle
                                            
                                            	Parent Interface Handle
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: path_dlb
                                            
                                            	Is this the path used for DLB
                                            	**type**\:  bool
                                            
                                            .. attribute:: path_flags
                                            
                                            	Path flags
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: path_index
                                            
                                            	Path index
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: path_info_flags
                                            
                                            	Path Info flags
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: protect_ignore
                                            
                                            	Is protection ignored
                                            	**type**\:  bool
                                            
                                            .. attribute:: recursionvia_len
                                            
                                            	recursion via /N constraint
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: recursive_path
                                            
                                            	Recursive path
                                            	**type**\:  bool
                                            
                                            .. attribute:: resolved_path
                                            
                                            	Resolved path
                                            	**type**\:  bool
                                            
                                            .. attribute:: via_label_to_recurse
                                            
                                            	Local label to recurse over
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'fib-common-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.attached_path = None
                                                self.backup_index = None
                                                self.backup_path = None
                                                self.best_external_path = None
                                                self.brief_interface_handle = None
                                                self.brief_next_hop_prefix = None
                                                self.brief_pnode_address = None
                                                self.brief_qnode_address = None
                                                self.hardware_information = None
                                                self.more_detail_about_path = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MoreDetailAboutPath()
                                                self.more_detail_about_path.parent = self
                                                self.mpls_information_for_path = Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MplsInformationForPath()
                                                self.mpls_information_for_path.parent = self
                                                self.next_hop_index = None
                                                self.packets_received_path = None
                                                self.parent_interface_handle = None
                                                self.path_dlb = None
                                                self.path_flags = None
                                                self.path_index = None
                                                self.path_info_flags = None
                                                self.protect_ignore = None
                                                self.recursionvia_len = None
                                                self.recursive_path = None
                                                self.resolved_path = None
                                                self.via_label_to_recurse = None


                                            class MoreDetailAboutPath(object):
                                                """
                                                More detail about this path entry
                                                
                                                .. attribute:: current_path_flag
                                                
                                                	Current path flag
                                                	**type**\:  bool
                                                
                                                .. attribute:: detail_fib_adjacency_type
                                                
                                                	FIB entry adjacency type
                                                	**type**\:  :py:class:`FibAdjacencyShowEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibAdjacencyShowEnum>`
                                                
                                                .. attribute:: detail_next_hop_prefix
                                                
                                                	Next hop prefix
                                                	**type**\:  str
                                                
                                                	**range:** 0..52
                                                
                                                .. attribute:: external_adjacency
                                                
                                                	Path is an external adjacency
                                                	**type**\:  bool
                                                
                                                .. attribute:: fib_path_nh_information_type
                                                
                                                	FIB Nhinfo type
                                                	**type**\:  :py:class:`FibNehEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibNehEnum>`
                                                
                                                .. attribute:: fib_path_nh_information_type_special
                                                
                                                	FIB Nhinfo type special
                                                	**type**\:  :py:class:`FibNehSpecialEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibNehSpecialEnum>`
                                                
                                                .. attribute:: interface_associated_path
                                                
                                                	Interface associated with this path
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: ip_address_to_recurse
                                                
                                                	IP address to recurse to
                                                	**type**\:  str
                                                
                                                	**range:** 0..52
                                                
                                                .. attribute:: label_to_recurse
                                                
                                                	Local label to recurse over
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: lisprlocid
                                                
                                                	LISP RLOC ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: next_hop_interface
                                                
                                                	Next hop interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_mask_length
                                                
                                                	Next hop mask length
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: next_hop_vrf
                                                
                                                	Next hop VRF
                                                	**type**\:  str
                                                
                                                	**range:** 0..33
                                                
                                                .. attribute:: next_prefix_length
                                                
                                                	Next prefix length
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: next_prefix_length2
                                                
                                                	Next prefix2 length
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: next_prefix_recursion
                                                
                                                	Next prefix recursion in the path
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: next_prefix_recursion2
                                                
                                                	Next prefix2 recursion in the path
                                                	**type**\:  str
                                                
                                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                
                                                .. attribute:: number_of_dependencies_this_path
                                                
                                                	No. of dependents for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: recurse_prefix_object
                                                
                                                	Is recursion object a leaf?
                                                	**type**\:  bool
                                                
                                                .. attribute:: recurse_prefix_object2
                                                
                                                	Recursion has two leaves (e.g. implicit\-null path)
                                                	**type**\:  bool
                                                
                                                .. attribute:: recursive_path_information
                                                
                                                	Recursive path information is available
                                                	**type**\:  bool
                                                
                                                .. attribute:: robin_reset_value
                                                
                                                	Round robin reset value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: spd_ipencap
                                                
                                                	IP Encap
                                                	**type**\: list of  :py:class:`SpdIpencap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MoreDetailAboutPath.SpdIpencap>`
                                                
                                                .. attribute:: tunnel_class
                                                
                                                	Tunnel class of the path
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: tunnel_is_forward_class
                                                
                                                	Tunnel is forward class
                                                	**type**\:  bool
                                                
                                                .. attribute:: tunnle_endpoint_id
                                                
                                                	Tunnel endpoint id
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: weight_of_path
                                                
                                                	Weight of the path
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'fib-common-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.current_path_flag = None
                                                    self.detail_fib_adjacency_type = None
                                                    self.detail_next_hop_prefix = None
                                                    self.external_adjacency = None
                                                    self.fib_path_nh_information_type = None
                                                    self.fib_path_nh_information_type_special = None
                                                    self.interface_associated_path = None
                                                    self.ip_address_to_recurse = None
                                                    self.label_to_recurse = None
                                                    self.lisprlocid = None
                                                    self.next_hop_interface = None
                                                    self.next_hop_mask_length = None
                                                    self.next_hop_vrf = None
                                                    self.next_prefix_length = None
                                                    self.next_prefix_length2 = None
                                                    self.next_prefix_recursion = None
                                                    self.next_prefix_recursion2 = None
                                                    self.number_of_dependencies_this_path = None
                                                    self.recurse_prefix_object = None
                                                    self.recurse_prefix_object2 = None
                                                    self.recursive_path_information = None
                                                    self.robin_reset_value = None
                                                    self.spd_ipencap = YList()
                                                    self.spd_ipencap.parent = self
                                                    self.spd_ipencap.name = 'spd_ipencap'
                                                    self.tunnel_class = None
                                                    self.tunnel_is_forward_class = None
                                                    self.tunnle_endpoint_id = None
                                                    self.weight_of_path = None


                                                class SpdIpencap(object):
                                                    """
                                                    IP Encap
                                                    
                                                    .. attribute:: ip_encap_hdr
                                                    
                                                    	Headers
                                                    	**type**\: list of  :py:class:`IpEncapHdr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MoreDetailAboutPath.SpdIpencap.IpEncapHdr>`
                                                    
                                                    .. attribute:: ip_encap_hdr_count
                                                    
                                                    	Header Count
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..255
                                                    
                                                    .. attribute:: ip_encap_locks
                                                    
                                                    	IPEncap Object Locks
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_parent
                                                    
                                                    	Pointer to parent
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_parent_type
                                                    
                                                    	Parent type enumeration
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_payload_af
                                                    
                                                    	Payload AF
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_payload_mtu
                                                    
                                                    	Payload MTU
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: ip_encap_transport_af
                                                    
                                                    	Transport AF
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ip_encap_transport_tbl
                                                    
                                                    	Transport Table
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: ipe_transport_vrf_name
                                                    
                                                    	Transport VRF name
                                                    	**type**\:  str
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.ip_encap_hdr = YList()
                                                        self.ip_encap_hdr.parent = self
                                                        self.ip_encap_hdr.name = 'ip_encap_hdr'
                                                        self.ip_encap_hdr_count = None
                                                        self.ip_encap_locks = None
                                                        self.ip_encap_parent = None
                                                        self.ip_encap_parent_type = None
                                                        self.ip_encap_payload_af = None
                                                        self.ip_encap_payload_mtu = None
                                                        self.ip_encap_transport_af = None
                                                        self.ip_encap_transport_tbl = None
                                                        self.ipe_transport_vrf_name = None


                                                    class IpEncapHdr(object):
                                                        """
                                                        Headers
                                                        
                                                        .. attribute:: ip_encap_hdr_dyn
                                                        
                                                        	Dynamic Header Fields
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: ip_encap_hdr_type
                                                        
                                                        	Header Type
                                                        	**type**\:  :py:class:`FibShIpencapHdrEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibShIpencapHdrEnum>`
                                                        
                                                        .. attribute:: ip_encap_hdrp
                                                        
                                                        	Static Header
                                                        	**type**\:  str
                                                        
                                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                                        
                                                        

                                                        """

                                                        _prefix = 'fib-common-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.ip_encap_hdr_dyn = None
                                                            self.ip_encap_hdr_type = None
                                                            self.ip_encap_hdrp = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ip-encap-hdr'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.ip_encap_hdr_dyn is not None:
                                                                return True

                                                            if self.ip_encap_hdr_type is not None:
                                                                return True

                                                            if self.ip_encap_hdrp is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MoreDetailAboutPath.SpdIpencap.IpEncapHdr']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:spd-ipencap'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.ip_encap_hdr is not None:
                                                            for child_ref in self.ip_encap_hdr:
                                                                if child_ref._has_data():
                                                                    return True

                                                        if self.ip_encap_hdr_count is not None:
                                                            return True

                                                        if self.ip_encap_locks is not None:
                                                            return True

                                                        if self.ip_encap_parent is not None:
                                                            return True

                                                        if self.ip_encap_parent_type is not None:
                                                            return True

                                                        if self.ip_encap_payload_af is not None:
                                                            return True

                                                        if self.ip_encap_payload_mtu is not None:
                                                            return True

                                                        if self.ip_encap_transport_af is not None:
                                                            return True

                                                        if self.ip_encap_transport_tbl is not None:
                                                            return True

                                                        if self.ipe_transport_vrf_name is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MoreDetailAboutPath.SpdIpencap']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:more-detail-about-path'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.current_path_flag is not None:
                                                        return True

                                                    if self.detail_fib_adjacency_type is not None:
                                                        return True

                                                    if self.detail_next_hop_prefix is not None:
                                                        return True

                                                    if self.external_adjacency is not None:
                                                        return True

                                                    if self.fib_path_nh_information_type is not None:
                                                        return True

                                                    if self.fib_path_nh_information_type_special is not None:
                                                        return True

                                                    if self.interface_associated_path is not None:
                                                        return True

                                                    if self.ip_address_to_recurse is not None:
                                                        return True

                                                    if self.label_to_recurse is not None:
                                                        return True

                                                    if self.lisprlocid is not None:
                                                        return True

                                                    if self.next_hop_interface is not None:
                                                        return True

                                                    if self.next_hop_mask_length is not None:
                                                        return True

                                                    if self.next_hop_vrf is not None:
                                                        return True

                                                    if self.next_prefix_length is not None:
                                                        return True

                                                    if self.next_prefix_length2 is not None:
                                                        return True

                                                    if self.next_prefix_recursion is not None:
                                                        return True

                                                    if self.next_prefix_recursion2 is not None:
                                                        return True

                                                    if self.number_of_dependencies_this_path is not None:
                                                        return True

                                                    if self.recurse_prefix_object is not None:
                                                        return True

                                                    if self.recurse_prefix_object2 is not None:
                                                        return True

                                                    if self.recursive_path_information is not None:
                                                        return True

                                                    if self.robin_reset_value is not None:
                                                        return True

                                                    if self.spd_ipencap is not None:
                                                        for child_ref in self.spd_ipencap:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.tunnel_class is not None:
                                                        return True

                                                    if self.tunnel_is_forward_class is not None:
                                                        return True

                                                    if self.tunnle_endpoint_id is not None:
                                                        return True

                                                    if self.weight_of_path is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MoreDetailAboutPath']['meta_info']


                                            class MplsInformationForPath(object):
                                                """
                                                mpls info for this path entry
                                                
                                                .. attribute:: igp_label_stack_array
                                                
                                                	igp label stack array
                                                	**type**\: list of  :py:class:`IgpLabelStackArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MplsInformationForPath.IgpLabelStackArray>`
                                                
                                                .. attribute:: local_lable
                                                
                                                	LocalLable
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: number_of_igp_paths
                                                
                                                	NumberOfIGPPaths
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: recursive_fwd_chain
                                                
                                                	RecursiveFwdChain
                                                	**type**\:  bool
                                                
                                                .. attribute:: recursive_out_label_valid
                                                
                                                	RecursiveOutLabelValid
                                                	**type**\:  bool
                                                
                                                .. attribute:: recursive_out_lable
                                                
                                                	RecursiveOutLable
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: remote_backup
                                                
                                                	RemoteBackupPath
                                                	**type**\:  bool
                                                
                                                

                                                """

                                                _prefix = 'fib-common-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.igp_label_stack_array = YList()
                                                    self.igp_label_stack_array.parent = self
                                                    self.igp_label_stack_array.name = 'igp_label_stack_array'
                                                    self.local_lable = None
                                                    self.number_of_igp_paths = None
                                                    self.recursive_fwd_chain = None
                                                    self.recursive_out_label_valid = None
                                                    self.recursive_out_lable = None
                                                    self.remote_backup = None


                                                class IgpLabelStackArray(object):
                                                    """
                                                    igp label stack array
                                                    
                                                    .. attribute:: lstack
                                                    
                                                    	lstack
                                                    	**type**\:  list of int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: nh_address
                                                    
                                                    	NHAddress
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..52
                                                    
                                                    .. attribute:: number_of_labels
                                                    
                                                    	NumberOfLabels
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: out_interface
                                                    
                                                    	OutInterface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    

                                                    """

                                                    _prefix = 'fib-common-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.lstack = YLeafList()
                                                        self.lstack.parent = self
                                                        self.lstack.name = 'lstack'
                                                        self.nh_address = None
                                                        self.number_of_labels = None
                                                        self.out_interface = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:igp-label-stack-array'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.lstack is not None:
                                                            for child in self.lstack:
                                                                if child is not None:
                                                                    return True

                                                        if self.nh_address is not None:
                                                            return True

                                                        if self.number_of_labels is not None:
                                                            return True

                                                        if self.out_interface is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MplsInformationForPath.IgpLabelStackArray']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mpls-information-for-path'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.igp_label_stack_array is not None:
                                                        for child_ref in self.igp_label_stack_array:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.local_lable is not None:
                                                        return True

                                                    if self.number_of_igp_paths is not None:
                                                        return True

                                                    if self.recursive_fwd_chain is not None:
                                                        return True

                                                    if self.recursive_out_label_valid is not None:
                                                        return True

                                                    if self.recursive_out_lable is not None:
                                                        return True

                                                    if self.remote_backup is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath.MplsInformationForPath']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-sh-tbl-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.attached_path is not None:
                                                    return True

                                                if self.backup_index is not None:
                                                    return True

                                                if self.backup_path is not None:
                                                    return True

                                                if self.best_external_path is not None:
                                                    return True

                                                if self.brief_interface_handle is not None:
                                                    return True

                                                if self.brief_next_hop_prefix is not None:
                                                    return True

                                                if self.brief_pnode_address is not None:
                                                    return True

                                                if self.brief_qnode_address is not None:
                                                    return True

                                                if self.hardware_information is not None:
                                                    return True

                                                if self.more_detail_about_path is not None and self.more_detail_about_path._has_data():
                                                    return True

                                                if self.mpls_information_for_path is not None and self.mpls_information_for_path._has_data():
                                                    return True

                                                if self.next_hop_index is not None:
                                                    return True

                                                if self.packets_received_path is not None:
                                                    return True

                                                if self.parent_interface_handle is not None:
                                                    return True

                                                if self.path_dlb is not None:
                                                    return True

                                                if self.path_flags is not None:
                                                    return True

                                                if self.path_index is not None:
                                                    return True

                                                if self.path_info_flags is not None:
                                                    return True

                                                if self.protect_ignore is not None:
                                                    return True

                                                if self.recursionvia_len is not None:
                                                    return True

                                                if self.recursive_path is not None:
                                                    return True

                                                if self.resolved_path is not None:
                                                    return True

                                                if self.via_label_to_recurse is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath.FibShTblPath']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-entry-path'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.fib_sh_tbl_path is not None:
                                                for child_ref in self.fib_sh_tbl_path:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief.FibEntryPath']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ip-prefix-brief'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.broadcast_forward_flag is not None:
                                            return True

                                        if self.broadcast_recive_flag is not None:
                                            return True

                                        if self.detail_fib_entry_information is not None and self.detail_fib_entry_information._has_data():
                                            return True

                                        if self.dummy_real_zero_route is not None:
                                            return True

                                        if self.exact_route_result is not None:
                                            return True

                                        if self.external_switch_triggered is not None:
                                            return True

                                        if self.fib_entry_path is not None and self.fib_entry_path._has_data():
                                            return True

                                        if self.fib_route_download_priority is not None:
                                            return True

                                        if self.flags_external_ldi is not None:
                                            return True

                                        if self.l2_subscriber_ip_protocol is not None:
                                            return True

                                        if self.l2_subscriber_route is not None:
                                            return True

                                        if self.l2_subscriber_xconnect_id is not None:
                                            return True

                                        if self.l2tpv3_cookie_length_bits is not None:
                                            return True

                                        if self.ldi_flags is not None:
                                            return True

                                        if self.ldi_lw_flag is not None:
                                            return True

                                        if self.lspa_flags is not None:
                                            return True

                                        if self.number_of_referances_to_ldi is not None:
                                            return True

                                        if self.number_of_referances_to_path_list is not None:
                                            return True

                                        if self.packet_should_recieve is not None:
                                            return True

                                        if self.path_list_flags is not None:
                                            return True

                                        if self.path_list_source is not None:
                                            return True

                                        if self.platform_hardware is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_connected is not None:
                                            return True

                                        if self.prefix_for_adjancency is not None:
                                            return True

                                        if self.prefix_for_pic_next_hop is not None:
                                            return True

                                        if self.prefix_is_static_or_connected is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.protocol_type_fib_entry is not None:
                                            return True

                                        if self.purgable_after_purge_interval is not None:
                                            return True

                                        if self.ref_counter_of_ldi_lw_ldi is not None:
                                            return True

                                        if self.route_attribute_flag is not None:
                                            return True

                                        if self.time_of_last_update_in_msec is not None:
                                            return True

                                        if self.type_of_ldi_lw_ldi is not None:
                                            return True

                                        if self.version_of_route is not None:
                                            return True

                                        if self.zero_by_zero_route_as_default is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs.IpPrefixBrief']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ip-prefix-briefs'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ip_prefix_brief is not None:
                                        for child_ref in self.ip_prefix_brief:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf.IpPrefixBriefs']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.vrf_name is None:
                                    raise YPYModelError('Key property vrf_name is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:vrf[Cisco-IOS-XR-fib-common-oper:vrf-name = ' + str(self.vrf_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_name is not None:
                                    return True

                                if self.interface_infos is not None and self.interface_infos._has_data():
                                    return True

                                if self.ip_prefix_briefs is not None and self.ip_prefix_briefs._has_data():
                                    return True

                                if self.ip_prefix_details is not None and self.ip_prefix_details._has_data():
                                    return True

                                if self.summary is not None and self.summary._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs.Vrf']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:vrfs'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf is not None:
                                for child_ref in self.vrf:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Vrfs']['meta_info']


                    class Misc(object):
                        """
                        CEF misc hidden data
                        
                        .. attribute:: mi_clock_time
                        
                        	clock download time
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: mi_cpu_time
                        
                        	CPU download time
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: mi_cpuless_count
                        
                        	count of cpuless line cards
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_cpuless_init
                        
                        	cpuless node list init
                        	**type**\:  bool
                        
                        .. attribute:: mi_cpuless_node
                        
                        	list of cpuless line cards
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_del
                        
                        	Timestamps of deleted routes
                        	**type**\: list of  :py:class:`MiDel <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiDel>`
                        
                        .. attribute:: mi_frr_stat
                        
                        	FRR statistics
                        	**type**\: list of  :py:class:`MiFrrStat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiFrrStat>`
                        
                        .. attribute:: mi_idb_ext_cleanup_failed_count
                        
                        	Number of recycled idb extensions that failed cleanup
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_idb_lsec_enabled_num
                        
                        	Number of interfaces having label security enabled
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_idb_purge_cntr
                        
                        	the number of counters used for purge counter stats
                        	**type**\: list of  :py:class:`MiIdbPurgeCntr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiIdbPurgeCntr>`
                        
                        .. attribute:: mi_idb_recycle_cleanup_count
                        
                        	Number of idb cleaned up after hitting ifh recycle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_idb_recycle_count
                        
                        	Number of idbs that hit ifh recycle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_issu_state
                        
                        	FIB ISSU state
                        	**type**\:  :py:class:`MiIssuState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiIssuState>`
                        
                        .. attribute:: mi_lrpf_num
                        
                        	Per protocol number of label RPFs
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_lrpf_stats_act
                        
                        	Per protocol actions stats for label RPF
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_lrpf_stats_fail
                        
                        	Per protocol Failure stats for label RPF
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_num_lisp_eid
                        
                        	number of LISP EID prefixes
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_num_lisp_valid_eid
                        
                        	number of LISP EID prefixes eligible for forwarding
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_num_mgmt_list
                        
                        	Number of management interfaces
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_num_virtual_ll_addresses_added
                        
                        	mi num virtual ll addresses added
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_num_virtual_ll_addresses_cached
                        
                        	mi num virtual ll addresses cached
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_num_virtual_ll_addresses_deleted
                        
                        	mi num virtual ll addresses deleted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_num_virtual_ll_addresses_dropped
                        
                        	mi num virtual ll addresses dropped
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mi_pfi_ifh_del
                        
                        	number of pfi ifh delete notif
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: mi_pfi_ifh_stale
                        
                        	number of stale ifh removed
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: mi_pfi_ifh_upd
                        
                        	number of pfi ifh create notif
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: mi_plat_capabilities
                        
                        	FIB platform capabilities
                        	**type**\:  :py:class:`MiPlatCapabilities <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities>`
                        
                        .. attribute:: mi_prefer_aib_routes_over_rib_cfg
                        
                        	Prefer AIB routes over RIB/LSD configured state
                        	**type**\:  bool
                        
                        .. attribute:: mi_prefer_aib_routes_over_rib_oper
                        
                        	Prefer AIB routes over RIB/LSD operational state
                        	**type**\:  bool
                        
                        .. attribute:: mi_proto_dbg_stat
                        
                        	Per protocol debug stats
                        	**type**\: list of  :py:class:`MiProtoDbgStat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat>`
                        
                        .. attribute:: mi_shm_reset_ts
                        
                        	Last FIB shared memory reset time stamp
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: mi_tot_dnld_time
                        
                        	total download time
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: mi_tot_gtrie_time
                        
                        	total time spent in gtrie operations
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: mi_tot_plat_upd_time
                        
                        	total platform update time
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.mi_clock_time = None
                            self.mi_cpu_time = None
                            self.mi_cpuless_count = None
                            self.mi_cpuless_init = None
                            self.mi_cpuless_node = YLeafList()
                            self.mi_cpuless_node.parent = self
                            self.mi_cpuless_node.name = 'mi_cpuless_node'
                            self.mi_del = YList()
                            self.mi_del.parent = self
                            self.mi_del.name = 'mi_del'
                            self.mi_frr_stat = YList()
                            self.mi_frr_stat.parent = self
                            self.mi_frr_stat.name = 'mi_frr_stat'
                            self.mi_idb_ext_cleanup_failed_count = YLeafList()
                            self.mi_idb_ext_cleanup_failed_count.parent = self
                            self.mi_idb_ext_cleanup_failed_count.name = 'mi_idb_ext_cleanup_failed_count'
                            self.mi_idb_lsec_enabled_num = YLeafList()
                            self.mi_idb_lsec_enabled_num.parent = self
                            self.mi_idb_lsec_enabled_num.name = 'mi_idb_lsec_enabled_num'
                            self.mi_idb_purge_cntr = YList()
                            self.mi_idb_purge_cntr.parent = self
                            self.mi_idb_purge_cntr.name = 'mi_idb_purge_cntr'
                            self.mi_idb_recycle_cleanup_count = None
                            self.mi_idb_recycle_count = None
                            self.mi_issu_state = Fib.Nodes.Node.Protocols.Protocol.Misc.MiIssuState()
                            self.mi_issu_state.parent = self
                            self.mi_lrpf_num = YLeafList()
                            self.mi_lrpf_num.parent = self
                            self.mi_lrpf_num.name = 'mi_lrpf_num'
                            self.mi_lrpf_stats_act = YLeafList()
                            self.mi_lrpf_stats_act.parent = self
                            self.mi_lrpf_stats_act.name = 'mi_lrpf_stats_act'
                            self.mi_lrpf_stats_fail = YLeafList()
                            self.mi_lrpf_stats_fail.parent = self
                            self.mi_lrpf_stats_fail.name = 'mi_lrpf_stats_fail'
                            self.mi_num_lisp_eid = YLeafList()
                            self.mi_num_lisp_eid.parent = self
                            self.mi_num_lisp_eid.name = 'mi_num_lisp_eid'
                            self.mi_num_lisp_valid_eid = YLeafList()
                            self.mi_num_lisp_valid_eid.parent = self
                            self.mi_num_lisp_valid_eid.name = 'mi_num_lisp_valid_eid'
                            self.mi_num_mgmt_list = None
                            self.mi_num_virtual_ll_addresses_added = None
                            self.mi_num_virtual_ll_addresses_cached = None
                            self.mi_num_virtual_ll_addresses_deleted = None
                            self.mi_num_virtual_ll_addresses_dropped = None
                            self.mi_pfi_ifh_del = None
                            self.mi_pfi_ifh_stale = None
                            self.mi_pfi_ifh_upd = None
                            self.mi_plat_capabilities = Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities()
                            self.mi_plat_capabilities.parent = self
                            self.mi_prefer_aib_routes_over_rib_cfg = None
                            self.mi_prefer_aib_routes_over_rib_oper = None
                            self.mi_proto_dbg_stat = YList()
                            self.mi_proto_dbg_stat.parent = self
                            self.mi_proto_dbg_stat.name = 'mi_proto_dbg_stat'
                            self.mi_shm_reset_ts = None
                            self.mi_tot_dnld_time = None
                            self.mi_tot_gtrie_time = None
                            self.mi_tot_plat_upd_time = None


                        class MiIssuState(object):
                            """
                            FIB ISSU state
                            
                            .. attribute:: eoc_received_imdr_time_stamp
                            
                            	End\-of\-config received from IMDR timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: eoc_received_slc_time_stamp
                            
                            	End\-of\-config received from SLC timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: eod_received_im_time_stamp
                            
                            	End\-of\-download received from IM timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: eod_sent_imdr_time_stamp
                            
                            	End\-of\-download send to IMDR timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: eod_sent_slc_time_stamp
                            
                            	End\-of\-download send to SLC timestamp
                            	**type**\:  str
                            
                            	**range:** 0..33
                            
                            .. attribute:: fis_issu_error_ts
                            
                            	ISSU error sent to ISSUMGR timetstamp
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fis_issu_restart
                            
                            	ISSU restart
                            	**type**\:  bool
                            
                            .. attribute:: fis_proto_state
                            
                            	IMDR state for the protocols
                            	**type**\: list of  :py:class:`FisProtoState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiIssuState.FisProtoState>`
                            
                            .. attribute:: imdr_eoc_implicit
                            
                            	IMDR End\-of\-config implicit
                            	**type**\:  bool
                            
                            .. attribute:: imdr_support
                            
                            	IMDR supported
                            	**type**\:  bool
                            
                            .. attribute:: slc_eoc_implicit
                            
                            	SLC End\-of\-config implicit
                            	**type**\:  bool
                            
                            .. attribute:: slc_support
                            
                            	SLC supported
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.eoc_received_imdr_time_stamp = None
                                self.eoc_received_slc_time_stamp = None
                                self.eod_received_im_time_stamp = None
                                self.eod_sent_imdr_time_stamp = None
                                self.eod_sent_slc_time_stamp = None
                                self.fis_issu_error_ts = None
                                self.fis_issu_restart = None
                                self.fis_proto_state = YList()
                                self.fis_proto_state.parent = self
                                self.fis_proto_state.name = 'fis_proto_state'
                                self.imdr_eoc_implicit = None
                                self.imdr_support = None
                                self.slc_eoc_implicit = None
                                self.slc_support = None


                            class FisProtoState(object):
                                """
                                IMDR state for the protocols
                                
                                .. attribute:: aib_eod_time_stamp
                                
                                	AIB EODTimeStamp
                                	**type**\:  str
                                
                                	**range:** 0..33
                                
                                .. attribute:: bcdl_tables
                                
                                	Number of BCDL tables
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: converged_tables
                                
                                	Number of tables converged
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: lmrib_eod_time_stamp
                                
                                	LMRIB EOD received timestamp
                                	**type**\:  str
                                
                                	**range:** 0..33
                                
                                .. attribute:: lmrib_eod_valid
                                
                                	LMRIB EOD expected/valid
                                	**type**\:  bool
                                
                                .. attribute:: lsd_eod_time_stamp
                                
                                	LSD EOD received timestamp
                                	**type**\:  str
                                
                                	**range:** 0..33
                                
                                .. attribute:: lsd_eod_valid
                                
                                	LSD EOD expected/valid
                                	**type**\:  bool
                                
                                .. attribute:: protocol_eod_time_stamp
                                
                                	Protocol EOD sent timestamp
                                	**type**\:  str
                                
                                	**range:** 0..33
                                
                                .. attribute:: protocol_eod_valid
                                
                                	Protocol EOD expected/valid
                                	**type**\:  bool
                                
                                .. attribute:: protocol_name
                                
                                	Protocol name
                                	**type**\:  str
                                
                                	**range:** 0..6
                                
                                .. attribute:: rib_info_valid
                                
                                	RIB table info valid
                                	**type**\:  bool
                                
                                .. attribute:: rib_tables_converged_time_stamp
                                
                                	All RIB tables converged timestamp
                                	**type**\:  str
                                
                                	**range:** 0..33
                                
                                .. attribute:: rsi_eod_time_stamp
                                
                                	RSI EOD received timestamp
                                	**type**\:  str
                                
                                	**range:** 0..33
                                
                                .. attribute:: rsi_eod_valid
                                
                                	RSI EOD expected/valid
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.aib_eod_time_stamp = None
                                    self.bcdl_tables = None
                                    self.converged_tables = None
                                    self.lmrib_eod_time_stamp = None
                                    self.lmrib_eod_valid = None
                                    self.lsd_eod_time_stamp = None
                                    self.lsd_eod_valid = None
                                    self.protocol_eod_time_stamp = None
                                    self.protocol_eod_valid = None
                                    self.protocol_name = None
                                    self.rib_info_valid = None
                                    self.rib_tables_converged_time_stamp = None
                                    self.rsi_eod_time_stamp = None
                                    self.rsi_eod_valid = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fis-proto-state'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.aib_eod_time_stamp is not None:
                                        return True

                                    if self.bcdl_tables is not None:
                                        return True

                                    if self.converged_tables is not None:
                                        return True

                                    if self.lmrib_eod_time_stamp is not None:
                                        return True

                                    if self.lmrib_eod_valid is not None:
                                        return True

                                    if self.lsd_eod_time_stamp is not None:
                                        return True

                                    if self.lsd_eod_valid is not None:
                                        return True

                                    if self.protocol_eod_time_stamp is not None:
                                        return True

                                    if self.protocol_eod_valid is not None:
                                        return True

                                    if self.protocol_name is not None:
                                        return True

                                    if self.rib_info_valid is not None:
                                        return True

                                    if self.rib_tables_converged_time_stamp is not None:
                                        return True

                                    if self.rsi_eod_time_stamp is not None:
                                        return True

                                    if self.rsi_eod_valid is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiIssuState.FisProtoState']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mi-issu-state'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.eoc_received_imdr_time_stamp is not None:
                                    return True

                                if self.eoc_received_slc_time_stamp is not None:
                                    return True

                                if self.eod_received_im_time_stamp is not None:
                                    return True

                                if self.eod_sent_imdr_time_stamp is not None:
                                    return True

                                if self.eod_sent_slc_time_stamp is not None:
                                    return True

                                if self.fis_issu_error_ts is not None:
                                    return True

                                if self.fis_issu_restart is not None:
                                    return True

                                if self.fis_proto_state is not None:
                                    for child_ref in self.fis_proto_state:
                                        if child_ref._has_data():
                                            return True

                                if self.imdr_eoc_implicit is not None:
                                    return True

                                if self.imdr_support is not None:
                                    return True

                                if self.slc_eoc_implicit is not None:
                                    return True

                                if self.slc_support is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiIssuState']['meta_info']


                        class MiPlatCapabilities(object):
                            """
                            FIB platform capabilities
                            
                            .. attribute:: fpc_dlb_support
                            
                            	Per\-destination load\-balancing support
                            	**type**\:  bool
                            
                            .. attribute:: fpc_exclude_deag_bkup
                            
                            	Exclude Deag backup Paths
                            	**type**\:  bool
                            
                            .. attribute:: fpc_lba_tuples_default
                            
                            	LBA tuples
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: fpc_link_mpls_nhinfo_in_ipv6_thread_support
                            
                            	Link MPLS IPv6 NH support
                            	**type**\:  bool
                            
                            .. attribute:: fpc_lisp_decap_over_v4
                            
                            	LISP Decap over 4
                            	**type**\: list of  :py:class:`FpcLispDecapOverV4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities.FpcLispDecapOverV4>`
                            
                            .. attribute:: fpc_lisp_decap_over_v6
                            
                            	LISP Decap over 6
                            	**type**\: list of  :py:class:`FpcLispDecapOverV6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities.FpcLispDecapOverV6>`
                            
                            .. attribute:: fpc_lisp_ucmp
                            
                            	LISP UCMP support
                            	**type**\: list of  :py:class:`FpcLispUcmp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities.FpcLispUcmp>`
                            
                            .. attribute:: fpc_loadinfo_filter_support
                            
                            	loadinfo filter support
                            	**type**\:  bool
                            
                            .. attribute:: fpc_local_label_split
                            
                            	Label split
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: fpc_mraps_support
                            
                            	MRAPS support
                            	**type**\:  bool
                            
                            .. attribute:: fpc_nhid
                            
                            	NHID support
                            	**type**\:  bool
                            
                            .. attribute:: fpc_num_fwding_stages
                            
                            	Forwarding stages
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: fpc_num_l3_lbl_levels
                            
                            	L3 LBL levels
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: fpc_num_l3_lbl_paths
                            
                            	L3 Hash buckets
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: fpc_num_l3_lbl_rec_paths
                            
                            	L3 Recursive Hash buckets
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: fpc_num_l3_ucmp_paths
                            
                            	L3 Unequal cost hash buckets
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: fpc_num_paths_per_pbts_class
                            
                            	Path per tunnel class
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: fpc_pbts_defclass_support
                            
                            	PBTS default class support
                            	**type**\:  bool
                            
                            .. attribute:: fpc_platf_ready_cb_wait
                            
                            	Plat ready cb register
                            	**type**\:  bool
                            
                            .. attribute:: fpc_platf_v4_upd_disable
                            
                            	V4 update disable
                            	**type**\:  bool
                            
                            .. attribute:: fpc_platf_v6_upd_disable
                            
                            	V6 update disable
                            	**type**\:  bool
                            
                            .. attribute:: fpc_prefix_filter_support
                            
                            	Prefix filter level of support
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: fpc_resolve_via_table
                            
                            	Fallback VRF support
                            	**type**\: list of  :py:class:`FpcResolveViaTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities.FpcResolveViaTable>`
                            
                            .. attribute:: fpc_stats_support
                            
                            	Statistics support
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.fpc_dlb_support = None
                                self.fpc_exclude_deag_bkup = None
                                self.fpc_lba_tuples_default = None
                                self.fpc_link_mpls_nhinfo_in_ipv6_thread_support = None
                                self.fpc_lisp_decap_over_v4 = YList()
                                self.fpc_lisp_decap_over_v4.parent = self
                                self.fpc_lisp_decap_over_v4.name = 'fpc_lisp_decap_over_v4'
                                self.fpc_lisp_decap_over_v6 = YList()
                                self.fpc_lisp_decap_over_v6.parent = self
                                self.fpc_lisp_decap_over_v6.name = 'fpc_lisp_decap_over_v6'
                                self.fpc_lisp_ucmp = YList()
                                self.fpc_lisp_ucmp.parent = self
                                self.fpc_lisp_ucmp.name = 'fpc_lisp_ucmp'
                                self.fpc_loadinfo_filter_support = None
                                self.fpc_local_label_split = None
                                self.fpc_mraps_support = None
                                self.fpc_nhid = None
                                self.fpc_num_fwding_stages = None
                                self.fpc_num_l3_lbl_levels = None
                                self.fpc_num_l3_lbl_paths = None
                                self.fpc_num_l3_lbl_rec_paths = None
                                self.fpc_num_l3_ucmp_paths = None
                                self.fpc_num_paths_per_pbts_class = None
                                self.fpc_pbts_defclass_support = None
                                self.fpc_platf_ready_cb_wait = None
                                self.fpc_platf_v4_upd_disable = None
                                self.fpc_platf_v6_upd_disable = None
                                self.fpc_prefix_filter_support = None
                                self.fpc_resolve_via_table = YList()
                                self.fpc_resolve_via_table.parent = self
                                self.fpc_resolve_via_table.name = 'fpc_resolve_via_table'
                                self.fpc_stats_support = None


                            class FpcLispDecapOverV4(object):
                                """
                                LISP Decap over 4
                                
                                .. attribute:: entry
                                
                                	Array entry
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.entry = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fpc-lisp-decap-over-v4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.entry is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities.FpcLispDecapOverV4']['meta_info']


                            class FpcLispDecapOverV6(object):
                                """
                                LISP Decap over 6
                                
                                .. attribute:: entry
                                
                                	Array entry
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.entry = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fpc-lisp-decap-over-v6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.entry is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities.FpcLispDecapOverV6']['meta_info']


                            class FpcLispUcmp(object):
                                """
                                LISP UCMP support
                                
                                .. attribute:: entry
                                
                                	Array entry
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.entry = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fpc-lisp-ucmp'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.entry is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities.FpcLispUcmp']['meta_info']


                            class FpcResolveViaTable(object):
                                """
                                Fallback VRF support
                                
                                .. attribute:: entry
                                
                                	Array entry
                                	**type**\:  bool
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.entry = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fpc-resolve-via-table'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.entry is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities.FpcResolveViaTable']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mi-plat-capabilities'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.fpc_dlb_support is not None:
                                    return True

                                if self.fpc_exclude_deag_bkup is not None:
                                    return True

                                if self.fpc_lba_tuples_default is not None:
                                    return True

                                if self.fpc_link_mpls_nhinfo_in_ipv6_thread_support is not None:
                                    return True

                                if self.fpc_lisp_decap_over_v4 is not None:
                                    for child_ref in self.fpc_lisp_decap_over_v4:
                                        if child_ref._has_data():
                                            return True

                                if self.fpc_lisp_decap_over_v6 is not None:
                                    for child_ref in self.fpc_lisp_decap_over_v6:
                                        if child_ref._has_data():
                                            return True

                                if self.fpc_lisp_ucmp is not None:
                                    for child_ref in self.fpc_lisp_ucmp:
                                        if child_ref._has_data():
                                            return True

                                if self.fpc_loadinfo_filter_support is not None:
                                    return True

                                if self.fpc_local_label_split is not None:
                                    return True

                                if self.fpc_mraps_support is not None:
                                    return True

                                if self.fpc_nhid is not None:
                                    return True

                                if self.fpc_num_fwding_stages is not None:
                                    return True

                                if self.fpc_num_l3_lbl_levels is not None:
                                    return True

                                if self.fpc_num_l3_lbl_paths is not None:
                                    return True

                                if self.fpc_num_l3_lbl_rec_paths is not None:
                                    return True

                                if self.fpc_num_l3_ucmp_paths is not None:
                                    return True

                                if self.fpc_num_paths_per_pbts_class is not None:
                                    return True

                                if self.fpc_pbts_defclass_support is not None:
                                    return True

                                if self.fpc_platf_ready_cb_wait is not None:
                                    return True

                                if self.fpc_platf_v4_upd_disable is not None:
                                    return True

                                if self.fpc_platf_v6_upd_disable is not None:
                                    return True

                                if self.fpc_prefix_filter_support is not None:
                                    return True

                                if self.fpc_resolve_via_table is not None:
                                    for child_ref in self.fpc_resolve_via_table:
                                        if child_ref._has_data():
                                            return True

                                if self.fpc_stats_support is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiPlatCapabilities']['meta_info']


                        class MiProtoDbgStat(object):
                            """
                            Per protocol debug stats
                            
                            .. attribute:: fpd_adj_del
                            
                            	the number of adjacency deletes
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_adj_drops
                            
                            	 number of adj updates dropped because of OOR
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_adj_msg
                            
                            	number of AIB messages
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_adj_tx_retry_nh_found
                            
                            	number of TX adj retries that found or created NH
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_adj_tx_retry_obj_reinit
                            
                            	number of times TX NH retry objects updated
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_adj_upd
                            
                            	the number of adjacency updates
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_adj_upd_tx
                            
                            	number of TX adjacency updates from AIB
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_adj_upd_tx_nh_found
                            
                            	number of TX adjacency updates that found or created NH
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_adj_upd_tx_retry_created
                            
                            	number of TX adjacency updates that went to retry
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_bcdl_msgs
                            
                            	the number of bcdl msgs
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_gbltbl_entries
                            
                            	the number of fib entries in global tbl
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_gbltbl_rej_entries
                            
                            	the number of fib entries in global retry tbl
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_gbltbl_src_entry
                            
                            	Number of global routes from                     each route source
                            	**type**\:  list of long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_gtrie_timing
                            
                            	Gtrie timing statistics
                            	**type**\:  :py:class:`FpdGtrieTiming <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdGtrieTiming>`
                            
                            .. attribute:: fpd_lbl_recycled
                            
                            	the number of routes handled with recycled label
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_avg_backup_activate_time
                            
                            	avg ldi mod time for backup activation
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_backup_activate_count
                            
                            	number of ldi backup path activications
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_last_backup_activate_time
                            
                            	ldi mod time for last backup activation
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_max_backup_activate_time
                            
                            	max ldi mod time for backup activation
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_min_backup_activate_time
                            
                            	min ldi mod time for backup activation
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_num_correct_fixup
                            
                            	the number of corrected fixup LDIs
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_num_del_refcnt
                            
                            	the number of deleted with non\-zero refcount
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_num_fixedup
                            
                            	the number of fixup LDIs
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_ldi_total_backup_activate_time
                            
                            	total ldi mod time for backup activation
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_num_allocs
                            
                            	the number of allocs for this proto
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_num_frees
                            
                            	the number of frees for this proto
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_num_retry
                            
                            	the number of retries of each type
                            	**type**\:  list of long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_num_retry_touts
                            
                            	the number of retry timeouts
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_num_tbls
                            
                            	the number of tables in table set
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: fpd_pl_backup_disable_count
                            
                            	 number of PLs unmarked to include backup path
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_pl_backup_enable_count
                            
                            	number of PLs marked to include backup path
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_pl_fast_nfn_count
                            
                            	number of PLs visited on fast notification
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_pl_inline_res_q
                            
                            	the number of PLs linked to resolving tables for inline res
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_pl_num_correct_fixup
                            
                            	the number of corrected fixup PLs
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_pl_num_queued_fixedup
                            
                            	the number of PL queued for fixup
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_pl_retry_add_exist
                            
                            	the number PLs added to retry while already in retry
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_pl_with_backup_create_count
                            
                            	number of pl creates with backu path
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_pl_with_backup_del_count
                            
                            	number of pl deletes with backup path
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_platf_upd_stats
                            
                            	platform update statistics
                            	**type**\:  :py:class:`FpdPlatfUpdStats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdPlatfUpdStats>`
                            
                            .. attribute:: fpd_recursion_constraint_count
                            
                            	number of resolution failures because of recursion constraint
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_retryq_size
                            
                            	the number of elements in retryq
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: fpd_route_del
                            
                            	the number of route deletes
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_route_drops
                            
                            	the number of routes dropped
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_route_rcv
                            
                            	the number of routes received
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_route_upd
                            
                            	the number of route updates
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_te_rcv
                            
                            	the number of TE upds received
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_te_version_mismatch_drops
                            
                            	the number of TE upds dropped because of version mismatch
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_version_mismatch_drops
                            
                            	the number of routes dropped because of version mismatch
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_vrftbl_entries
                            
                            	the number of fib entries in vrf tbls
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_vrftbl_rej_entries
                            
                            	the number of fib entries in vrf retry tbls
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: fpd_vrftbl_src_entry
                            
                            	Number of vrf routes from                        each route source
                            	**type**\:  list of long
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.fpd_adj_del = None
                                self.fpd_adj_drops = None
                                self.fpd_adj_msg = None
                                self.fpd_adj_tx_retry_nh_found = None
                                self.fpd_adj_tx_retry_obj_reinit = None
                                self.fpd_adj_upd = None
                                self.fpd_adj_upd_tx = None
                                self.fpd_adj_upd_tx_nh_found = None
                                self.fpd_adj_upd_tx_retry_created = None
                                self.fpd_bcdl_msgs = None
                                self.fpd_gbltbl_entries = None
                                self.fpd_gbltbl_rej_entries = None
                                self.fpd_gbltbl_src_entry = YLeafList()
                                self.fpd_gbltbl_src_entry.parent = self
                                self.fpd_gbltbl_src_entry.name = 'fpd_gbltbl_src_entry'
                                self.fpd_gtrie_timing = Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdGtrieTiming()
                                self.fpd_gtrie_timing.parent = self
                                self.fpd_lbl_recycled = None
                                self.fpd_ldi_avg_backup_activate_time = None
                                self.fpd_ldi_backup_activate_count = None
                                self.fpd_ldi_last_backup_activate_time = None
                                self.fpd_ldi_max_backup_activate_time = None
                                self.fpd_ldi_min_backup_activate_time = None
                                self.fpd_ldi_num_correct_fixup = None
                                self.fpd_ldi_num_del_refcnt = None
                                self.fpd_ldi_num_fixedup = None
                                self.fpd_ldi_total_backup_activate_time = None
                                self.fpd_num_allocs = None
                                self.fpd_num_frees = None
                                self.fpd_num_retry = YLeafList()
                                self.fpd_num_retry.parent = self
                                self.fpd_num_retry.name = 'fpd_num_retry'
                                self.fpd_num_retry_touts = None
                                self.fpd_num_tbls = None
                                self.fpd_pl_backup_disable_count = None
                                self.fpd_pl_backup_enable_count = None
                                self.fpd_pl_fast_nfn_count = None
                                self.fpd_pl_inline_res_q = None
                                self.fpd_pl_num_correct_fixup = None
                                self.fpd_pl_num_queued_fixedup = None
                                self.fpd_pl_retry_add_exist = None
                                self.fpd_pl_with_backup_create_count = None
                                self.fpd_pl_with_backup_del_count = None
                                self.fpd_platf_upd_stats = Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdPlatfUpdStats()
                                self.fpd_platf_upd_stats.parent = self
                                self.fpd_recursion_constraint_count = None
                                self.fpd_retryq_size = None
                                self.fpd_route_del = None
                                self.fpd_route_drops = None
                                self.fpd_route_rcv = None
                                self.fpd_route_upd = None
                                self.fpd_te_rcv = None
                                self.fpd_te_version_mismatch_drops = None
                                self.fpd_version_mismatch_drops = None
                                self.fpd_vrftbl_entries = None
                                self.fpd_vrftbl_rej_entries = None
                                self.fpd_vrftbl_src_entry = YLeafList()
                                self.fpd_vrftbl_src_entry.parent = self
                                self.fpd_vrftbl_src_entry.name = 'fpd_vrftbl_src_entry'


                            class FpdPlatfUpdStats(object):
                                """
                                platform update statistics
                                
                                .. attribute:: fpus_num_failure
                                
                                	Number of unsuccessful updates
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: fpus_num_success
                                
                                	Number of successful updates
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: fpus_obj_stat
                                
                                	Array of max time info indexed by object type
                                	**type**\: list of  :py:class:`FpusObjStat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdPlatfUpdStats.FpusObjStat>`
                                
                                .. attribute:: fpus_upd_total_time
                                
                                	Total time for all pd updates
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.fpus_num_failure = None
                                    self.fpus_num_success = None
                                    self.fpus_obj_stat = YList()
                                    self.fpus_obj_stat.parent = self
                                    self.fpus_obj_stat.name = 'fpus_obj_stat'
                                    self.fpus_upd_total_time = None


                                class FpusObjStat(object):
                                    """
                                    Array of max time info indexed by object type
                                    
                                    .. attribute:: fos_max_action_type
                                    
                                    	The action that took max time
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: fos_max_time
                                    
                                    	Time for the update
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: fos_max_tstamp
                                    
                                    	Time stamp of max update
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: fos_tot_upd_time
                                    
                                    	Total time for updates
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: fos_tot_updates
                                    
                                    	Total number of updates
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: fos_tot_updates_zero
                                    
                                    	Total number of updates with zero timing (due to timestamp granularity)
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.fos_max_action_type = None
                                        self.fos_max_time = None
                                        self.fos_max_tstamp = None
                                        self.fos_tot_upd_time = None
                                        self.fos_tot_updates = None
                                        self.fos_tot_updates_zero = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fpus-obj-stat'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.fos_max_action_type is not None:
                                            return True

                                        if self.fos_max_time is not None:
                                            return True

                                        if self.fos_max_tstamp is not None:
                                            return True

                                        if self.fos_tot_upd_time is not None:
                                            return True

                                        if self.fos_tot_updates is not None:
                                            return True

                                        if self.fos_tot_updates_zero is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdPlatfUpdStats.FpusObjStat']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fpd-platf-upd-stats'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.fpus_num_failure is not None:
                                        return True

                                    if self.fpus_num_success is not None:
                                        return True

                                    if self.fpus_obj_stat is not None:
                                        for child_ref in self.fpus_obj_stat:
                                            if child_ref._has_data():
                                                return True

                                    if self.fpus_upd_total_time is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdPlatfUpdStats']['meta_info']


                            class FpdGtrieTiming(object):
                                """
                                Gtrie timing statistics
                                
                                .. attribute:: fgt_gtrie_fn_timing
                                
                                	Array of max time info indexed by gtrie function
                                	**type**\: list of  :py:class:`FgtGtrieFnTiming <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdGtrieTiming.FgtGtrieFnTiming>`
                                
                                .. attribute:: fgt_num_failure
                                
                                	Number of unsuccessful updates
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: fgt_num_success
                                
                                	Number of successful updates
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: fgt_upd_total_time
                                
                                	Total time for all pd updates
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.fgt_gtrie_fn_timing = YList()
                                    self.fgt_gtrie_fn_timing.parent = self
                                    self.fgt_gtrie_fn_timing.name = 'fgt_gtrie_fn_timing'
                                    self.fgt_num_failure = None
                                    self.fgt_num_success = None
                                    self.fgt_upd_total_time = None


                                class FgtGtrieFnTiming(object):
                                    """
                                    Array of max time info indexed by gtrie function
                                    
                                    .. attribute:: fgft_fn
                                    
                                    	Gtrie operation
                                    	**type**\:  str
                                    
                                    	**range:** 0..64
                                    
                                    .. attribute:: fgft_max_time
                                    
                                    	Time for the update
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: fgft_max_tstamp
                                    
                                    	Time stamp of max update
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: fgft_tot_upd_time
                                    
                                    	Total time for updates
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: fgft_tot_updates
                                    
                                    	Total number of updates
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: fgft_tot_updates_zero
                                    
                                    	Total number of updates with zero timing (due to timestamp granularity)
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.fgft_fn = None
                                        self.fgft_max_time = None
                                        self.fgft_max_tstamp = None
                                        self.fgft_tot_upd_time = None
                                        self.fgft_tot_updates = None
                                        self.fgft_tot_updates_zero = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fgt-gtrie-fn-timing'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.fgft_fn is not None:
                                            return True

                                        if self.fgft_max_time is not None:
                                            return True

                                        if self.fgft_max_tstamp is not None:
                                            return True

                                        if self.fgft_tot_upd_time is not None:
                                            return True

                                        if self.fgft_tot_updates is not None:
                                            return True

                                        if self.fgft_tot_updates_zero is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdGtrieTiming.FgtGtrieFnTiming']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fpd-gtrie-timing'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.fgt_gtrie_fn_timing is not None:
                                        for child_ref in self.fgt_gtrie_fn_timing:
                                            if child_ref._has_data():
                                                return True

                                    if self.fgt_num_failure is not None:
                                        return True

                                    if self.fgt_num_success is not None:
                                        return True

                                    if self.fgt_upd_total_time is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat.FpdGtrieTiming']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mi-proto-dbg-stat'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.fpd_adj_del is not None:
                                    return True

                                if self.fpd_adj_drops is not None:
                                    return True

                                if self.fpd_adj_msg is not None:
                                    return True

                                if self.fpd_adj_tx_retry_nh_found is not None:
                                    return True

                                if self.fpd_adj_tx_retry_obj_reinit is not None:
                                    return True

                                if self.fpd_adj_upd is not None:
                                    return True

                                if self.fpd_adj_upd_tx is not None:
                                    return True

                                if self.fpd_adj_upd_tx_nh_found is not None:
                                    return True

                                if self.fpd_adj_upd_tx_retry_created is not None:
                                    return True

                                if self.fpd_bcdl_msgs is not None:
                                    return True

                                if self.fpd_gbltbl_entries is not None:
                                    return True

                                if self.fpd_gbltbl_rej_entries is not None:
                                    return True

                                if self.fpd_gbltbl_src_entry is not None:
                                    for child in self.fpd_gbltbl_src_entry:
                                        if child is not None:
                                            return True

                                if self.fpd_gtrie_timing is not None and self.fpd_gtrie_timing._has_data():
                                    return True

                                if self.fpd_lbl_recycled is not None:
                                    return True

                                if self.fpd_ldi_avg_backup_activate_time is not None:
                                    return True

                                if self.fpd_ldi_backup_activate_count is not None:
                                    return True

                                if self.fpd_ldi_last_backup_activate_time is not None:
                                    return True

                                if self.fpd_ldi_max_backup_activate_time is not None:
                                    return True

                                if self.fpd_ldi_min_backup_activate_time is not None:
                                    return True

                                if self.fpd_ldi_num_correct_fixup is not None:
                                    return True

                                if self.fpd_ldi_num_del_refcnt is not None:
                                    return True

                                if self.fpd_ldi_num_fixedup is not None:
                                    return True

                                if self.fpd_ldi_total_backup_activate_time is not None:
                                    return True

                                if self.fpd_num_allocs is not None:
                                    return True

                                if self.fpd_num_frees is not None:
                                    return True

                                if self.fpd_num_retry is not None:
                                    for child in self.fpd_num_retry:
                                        if child is not None:
                                            return True

                                if self.fpd_num_retry_touts is not None:
                                    return True

                                if self.fpd_num_tbls is not None:
                                    return True

                                if self.fpd_pl_backup_disable_count is not None:
                                    return True

                                if self.fpd_pl_backup_enable_count is not None:
                                    return True

                                if self.fpd_pl_fast_nfn_count is not None:
                                    return True

                                if self.fpd_pl_inline_res_q is not None:
                                    return True

                                if self.fpd_pl_num_correct_fixup is not None:
                                    return True

                                if self.fpd_pl_num_queued_fixedup is not None:
                                    return True

                                if self.fpd_pl_retry_add_exist is not None:
                                    return True

                                if self.fpd_pl_with_backup_create_count is not None:
                                    return True

                                if self.fpd_pl_with_backup_del_count is not None:
                                    return True

                                if self.fpd_platf_upd_stats is not None and self.fpd_platf_upd_stats._has_data():
                                    return True

                                if self.fpd_recursion_constraint_count is not None:
                                    return True

                                if self.fpd_retryq_size is not None:
                                    return True

                                if self.fpd_route_del is not None:
                                    return True

                                if self.fpd_route_drops is not None:
                                    return True

                                if self.fpd_route_rcv is not None:
                                    return True

                                if self.fpd_route_upd is not None:
                                    return True

                                if self.fpd_te_rcv is not None:
                                    return True

                                if self.fpd_te_version_mismatch_drops is not None:
                                    return True

                                if self.fpd_version_mismatch_drops is not None:
                                    return True

                                if self.fpd_vrftbl_entries is not None:
                                    return True

                                if self.fpd_vrftbl_rej_entries is not None:
                                    return True

                                if self.fpd_vrftbl_src_entry is not None:
                                    for child in self.fpd_vrftbl_src_entry:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiProtoDbgStat']['meta_info']


                        class MiIdbPurgeCntr(object):
                            """
                            the number of counters used for purge counter
                            stats
                            
                            .. attribute:: fpp_cntr
                            
                            	the number of frees for this proto
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.fpp_cntr = YLeafList()
                                self.fpp_cntr.parent = self
                                self.fpp_cntr.name = 'fpp_cntr'

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mi-idb-purge-cntr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.fpp_cntr is not None:
                                    for child in self.fpp_cntr:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiIdbPurgeCntr']['meta_info']


                        class MiDel(object):
                            """
                            Timestamps of deleted routes
                            
                            .. attribute:: msec_time
                            
                            	msec time
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: prfx
                            
                            	prfx
                            	**type**\:  str
                            
                            	**range:** 0..16
                            
                            .. attribute:: prfx_len
                            
                            	prfx len
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: prfx_proto
                            
                            	prfx proto
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: tableid
                            
                            	tableid
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.msec_time = None
                                self.prfx = None
                                self.prfx_len = None
                                self.prfx_proto = None
                                self.tableid = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mi-del'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.msec_time is not None:
                                    return True

                                if self.prfx is not None:
                                    return True

                                if self.prfx_len is not None:
                                    return True

                                if self.prfx_proto is not None:
                                    return True

                                if self.tableid is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiDel']['meta_info']


                        class MiFrrStat(object):
                            """
                            FRR statistics
                            
                            .. attribute:: mi_num_bfd_down
                            
                            	number of NH down FRR events frm BFD
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_bkup_frr_objects
                            
                            	total number of backup FRR objects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_frr_logs
                            
                            	frr log size
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_frr_proto_events
                            
                            	number of frr events received in proto thread
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_frr_reset
                            
                            	number of frr resets
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_frr_reset_queue_adds
                            
                            	number of frr reset queue adds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_frr_reset_queue_remove
                            
                            	number of frr reset queue deletes
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_intf_frr
                            
                            	number of FRR events sent on nh interface down
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_parent_intf_frr
                            
                            	number of FRR events sent on nh parent interface down
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_pfi_intf_down
                            
                            	number of interface down FRR events from PFI
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_prot_frr_objects
                            
                            	total number of prot FRR objects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_tunid_alloc_failures
                            
                            	total number of FRR tunnel ID allocation failures
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_tunid_allocs
                            
                            	total number of successful FRR tunnel ID allocations
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_tunid_free_failures
                            
                            	total number of FRR tunnel ID free failures
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mi_num_tunid_frees
                            
                            	total number of successful FRR tunnel ID frees
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mi_num_bfd_down = None
                                self.mi_num_bkup_frr_objects = None
                                self.mi_num_frr_logs = None
                                self.mi_num_frr_proto_events = None
                                self.mi_num_frr_reset = None
                                self.mi_num_frr_reset_queue_adds = None
                                self.mi_num_frr_reset_queue_remove = None
                                self.mi_num_intf_frr = None
                                self.mi_num_parent_intf_frr = None
                                self.mi_num_pfi_intf_down = None
                                self.mi_num_prot_frr_objects = None
                                self.mi_num_tunid_alloc_failures = None
                                self.mi_num_tunid_allocs = None
                                self.mi_num_tunid_free_failures = None
                                self.mi_num_tunid_frees = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mi-frr-stat'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mi_num_bfd_down is not None:
                                    return True

                                if self.mi_num_bkup_frr_objects is not None:
                                    return True

                                if self.mi_num_frr_logs is not None:
                                    return True

                                if self.mi_num_frr_proto_events is not None:
                                    return True

                                if self.mi_num_frr_reset is not None:
                                    return True

                                if self.mi_num_frr_reset_queue_adds is not None:
                                    return True

                                if self.mi_num_frr_reset_queue_remove is not None:
                                    return True

                                if self.mi_num_intf_frr is not None:
                                    return True

                                if self.mi_num_parent_intf_frr is not None:
                                    return True

                                if self.mi_num_pfi_intf_down is not None:
                                    return True

                                if self.mi_num_prot_frr_objects is not None:
                                    return True

                                if self.mi_num_tunid_alloc_failures is not None:
                                    return True

                                if self.mi_num_tunid_allocs is not None:
                                    return True

                                if self.mi_num_tunid_free_failures is not None:
                                    return True

                                if self.mi_num_tunid_frees is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc.MiFrrStat']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:misc'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.mi_clock_time is not None:
                                return True

                            if self.mi_cpu_time is not None:
                                return True

                            if self.mi_cpuless_count is not None:
                                return True

                            if self.mi_cpuless_init is not None:
                                return True

                            if self.mi_cpuless_node is not None:
                                for child in self.mi_cpuless_node:
                                    if child is not None:
                                        return True

                            if self.mi_del is not None:
                                for child_ref in self.mi_del:
                                    if child_ref._has_data():
                                        return True

                            if self.mi_frr_stat is not None:
                                for child_ref in self.mi_frr_stat:
                                    if child_ref._has_data():
                                        return True

                            if self.mi_idb_ext_cleanup_failed_count is not None:
                                for child in self.mi_idb_ext_cleanup_failed_count:
                                    if child is not None:
                                        return True

                            if self.mi_idb_lsec_enabled_num is not None:
                                for child in self.mi_idb_lsec_enabled_num:
                                    if child is not None:
                                        return True

                            if self.mi_idb_purge_cntr is not None:
                                for child_ref in self.mi_idb_purge_cntr:
                                    if child_ref._has_data():
                                        return True

                            if self.mi_idb_recycle_cleanup_count is not None:
                                return True

                            if self.mi_idb_recycle_count is not None:
                                return True

                            if self.mi_issu_state is not None and self.mi_issu_state._has_data():
                                return True

                            if self.mi_lrpf_num is not None:
                                for child in self.mi_lrpf_num:
                                    if child is not None:
                                        return True

                            if self.mi_lrpf_stats_act is not None:
                                for child in self.mi_lrpf_stats_act:
                                    if child is not None:
                                        return True

                            if self.mi_lrpf_stats_fail is not None:
                                for child in self.mi_lrpf_stats_fail:
                                    if child is not None:
                                        return True

                            if self.mi_num_lisp_eid is not None:
                                for child in self.mi_num_lisp_eid:
                                    if child is not None:
                                        return True

                            if self.mi_num_lisp_valid_eid is not None:
                                for child in self.mi_num_lisp_valid_eid:
                                    if child is not None:
                                        return True

                            if self.mi_num_mgmt_list is not None:
                                return True

                            if self.mi_num_virtual_ll_addresses_added is not None:
                                return True

                            if self.mi_num_virtual_ll_addresses_cached is not None:
                                return True

                            if self.mi_num_virtual_ll_addresses_deleted is not None:
                                return True

                            if self.mi_num_virtual_ll_addresses_dropped is not None:
                                return True

                            if self.mi_pfi_ifh_del is not None:
                                return True

                            if self.mi_pfi_ifh_stale is not None:
                                return True

                            if self.mi_pfi_ifh_upd is not None:
                                return True

                            if self.mi_plat_capabilities is not None and self.mi_plat_capabilities._has_data():
                                return True

                            if self.mi_prefer_aib_routes_over_rib_cfg is not None:
                                return True

                            if self.mi_prefer_aib_routes_over_rib_oper is not None:
                                return True

                            if self.mi_proto_dbg_stat is not None:
                                for child_ref in self.mi_proto_dbg_stat:
                                    if child_ref._has_data():
                                        return True

                            if self.mi_shm_reset_ts is not None:
                                return True

                            if self.mi_tot_dnld_time is not None:
                                return True

                            if self.mi_tot_gtrie_time is not None:
                                return True

                            if self.mi_tot_plat_upd_time is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.Misc']['meta_info']


                    class LocalLabel(object):
                        """
                        Local label
                        
                        .. attribute:: conflicts
                        
                        	FIB Local\-label conflicts database
                        	**type**\:  :py:class:`Conflicts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.LocalLabel.Conflicts>`
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.conflicts = Fib.Nodes.Node.Protocols.Protocol.LocalLabel.Conflicts()
                            self.conflicts.parent = self


                        class Conflicts(object):
                            """
                            FIB Local\-label conflicts database
                            
                            .. attribute:: conflict
                            
                            	CEF Local\-label conflicts entry
                            	**type**\: list of  :py:class:`Conflict <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.Fib.Nodes.Node.Protocols.Protocol.LocalLabel.Conflicts.Conflict>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.conflict = YList()
                                self.conflict.parent = self
                                self.conflict.name = 'conflict'


                            class Conflict(object):
                                """
                                CEF Local\-label conflicts entry
                                
                                .. attribute:: label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 16..1048575
                                
                                .. attribute:: ll_ctype
                                
                                	Type of entry
                                	**type**\:  :py:class:`FibllcEntryEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibllcEntryEnum>`
                                
                                .. attribute:: local_label
                                
                                	local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: num_retries
                                
                                	num retries
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pfx
                                
                                	pfx
                                	**type**\:  str
                                
                                	**range:** 0..52
                                
                                .. attribute:: pfx_tbl_id
                                
                                	Table ID of IP prefix
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: pfx_tblid
                                
                                	pfx tblid
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: prefix
                                
                                	IP Prefix
                                	**type**\:  str
                                
                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                
                                .. attribute:: prefix_len
                                
                                	Length of IP Prefix
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: retry_ts
                                
                                	retry ts
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: source
                                
                                	Route source
                                	**type**\:  :py:class:`FibRouteSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibRouteSourceEnum>`
                                
                                .. attribute:: source_xr
                                
                                	source xr
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: type
                                
                                	type
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: update_ts
                                
                                	update ts
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.label = None
                                    self.ll_ctype = None
                                    self.local_label = None
                                    self.num_retries = None
                                    self.pfx = None
                                    self.pfx_tbl_id = None
                                    self.pfx_tblid = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.retry_ts = None
                                    self.source = None
                                    self.source_xr = None
                                    self.type = None
                                    self.update_ts = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:conflict'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.label is not None:
                                        return True

                                    if self.ll_ctype is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.num_retries is not None:
                                        return True

                                    if self.pfx is not None:
                                        return True

                                    if self.pfx_tbl_id is not None:
                                        return True

                                    if self.pfx_tblid is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.retry_ts is not None:
                                        return True

                                    if self.source is not None:
                                        return True

                                    if self.source_xr is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    if self.update_ts is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.LocalLabel.Conflicts.Conflict']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:conflicts'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.conflict is not None:
                                    for child_ref in self.conflict:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.LocalLabel.Conflicts']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:local-label'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.conflicts is not None and self.conflicts._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol.LocalLabel']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.protocol_name is None:
                            raise YPYModelError('Key property protocol_name is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:protocol[Cisco-IOS-XR-fib-common-oper:protocol-name = ' + str(self.protocol_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.protocol_name is not None:
                            return True

                        if self.frr_log is not None and self.frr_log._has_data():
                            return True

                        if self.issu_state is not None and self.issu_state._has_data():
                            return True

                        if self.local_label is not None and self.local_label._has_data():
                            return True

                        if self.misc is not None and self.misc._has_data():
                            return True

                        if self.vrfs is not None and self.vrfs._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['Fib.Nodes.Node.Protocols.Protocol']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:protocols'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.protocol is not None:
                        for child_ref in self.protocol:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['Fib.Nodes.Node.Protocols']['meta_info']

            @property
            def _common_path(self):
                if self.node_name is None:
                    raise YPYModelError('Key property node_name is None')

                return '/Cisco-IOS-XR-fib-common-oper:fib/Cisco-IOS-XR-fib-common-oper:nodes/Cisco-IOS-XR-fib-common-oper:node[Cisco-IOS-XR-fib-common-oper:node-name = ' + str(self.node_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node_name is not None:
                    return True

                if self.protocols is not None and self.protocols._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                return meta._meta_table['Fib.Nodes.Node']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-fib-common-oper:fib/Cisco-IOS-XR-fib-common-oper:nodes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.node is not None:
                for child_ref in self.node:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
            return meta._meta_table['Fib.Nodes']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-fib-common-oper:fib'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.nodes is not None and self.nodes._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['Fib']['meta_info']


class MplsForwarding(object):
    """
    mpls forwarding
    
    .. attribute:: nodes
    
    	Table of Nodes
    	**type**\:  :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes>`
    
    

    """

    _prefix = 'fib-common-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.nodes = MplsForwarding.Nodes()
        self.nodes.parent = self


    class Nodes(object):
        """
        Table of Nodes
        
        .. attribute:: node
        
        	Operational data for a specific Node
        	**type**\: list of  :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node>`
        
        

        """

        _prefix = 'fib-common-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.node = YList()
            self.node.parent = self
            self.node.name = 'node'


        class Node(object):
            """
            Operational data for a specific Node
            
            .. attribute:: node_name  <key>
            
            	Node ID
            	**type**\:  str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            .. attribute:: forwarding_summary
            
            	FIB MPLS forwarding summary
            	**type**\:  :py:class:`ForwardingSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.ForwardingSummary>`
            
            .. attribute:: label_fib
            
            	Labels For FIB
            	**type**\:  :py:class:`LabelFib <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib>`
            
            

            """

            _prefix = 'fib-common-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node_name = None
                self.forwarding_summary = MplsForwarding.Nodes.Node.ForwardingSummary()
                self.forwarding_summary.parent = self
                self.label_fib = MplsForwarding.Nodes.Node.LabelFib()
                self.label_fib.parent = self


            class ForwardingSummary(object):
                """
                FIB MPLS forwarding summary
                
                .. attribute:: deleted_stale_entries
                
                	Number of delete stale label entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: global_dropped_packets
                
                	Number of global FIB packets dropped
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: global_failed_lookups
                
                	Number of global failed lookups
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: global_fragmented_packets
                
                	Number of global FIB packets fragmented
                	**type**\:  long
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: highest_label
                
                	Highest Label in use
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ignore_protect
                
                	Number of TE tunnels treated as non\-protected
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ipv4_imposition_entries
                
                	Number of IPv4 imposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: label_switched_entries
                
                	Number of label swap/disposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: lowest_label
                
                	Lowest label in use
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: lrpf_entries
                
                	Number of labels with RPF
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mte_head_entries
                
                	Number of MTE tunnel head entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mte_ll_entries
                
                	Number of MTE local entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mte_midpoint_entries
                
                	Number of MTE midpoint entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: reserved_label_entries
                
                	Number of reserved label entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_head_entries
                
                	Number of TE FRR tunnel head imposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_interface_entries
                
                	Number of TE FRR protected interface entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_internal_entries
                
                	Number of TE internal forwarding entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_mid_points_entries
                
                	Number of TE FRR MidPoints forwarding entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_next_hop_entries
                
                	Number of TE FRR protected next\-hop entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_head_entries
                
                	Number of TE tunnel head imposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_internal_entries
                
                	Number of TE internal forwarding entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_mid_points_entries
                
                	Number of TE MidPoints forwarding entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_forwarding_update_messages
                
                	Total forwarding update messages from LSD to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_forwarding_updates
                
                	Total forwarding updates from LSD to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_forwarding_added_or_modify_messages
                
                	Total p2mp forwarding add/modify messages from MRIB to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_forwarding_delete_messages
                
                	Total p2mp forwarding del messages from MRIB to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_forwarding_drop_messages
                
                	Total p2mp forwarding messages dropped from MRIB to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_forwarding_updates
                
                	Total forwarding updates from MRIB to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_iir_forwarding_drop_messages
                
                	Total IIR triggered p2mp forwarding MRIB messages dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.deleted_stale_entries = None
                    self.global_dropped_packets = None
                    self.global_failed_lookups = None
                    self.global_fragmented_packets = None
                    self.highest_label = None
                    self.ignore_protect = None
                    self.ipv4_imposition_entries = None
                    self.label_switched_entries = None
                    self.lowest_label = None
                    self.lrpf_entries = None
                    self.mte_head_entries = None
                    self.mte_ll_entries = None
                    self.mte_midpoint_entries = None
                    self.reserved_label_entries = None
                    self.te_frr_head_entries = None
                    self.te_frr_interface_entries = None
                    self.te_frr_internal_entries = None
                    self.te_frr_mid_points_entries = None
                    self.te_frr_next_hop_entries = None
                    self.te_head_entries = None
                    self.te_internal_entries = None
                    self.te_mid_points_entries = None
                    self.total_forwarding_update_messages = None
                    self.total_forwarding_updates = None
                    self.total_p2mp_forwarding_added_or_modify_messages = None
                    self.total_p2mp_forwarding_delete_messages = None
                    self.total_p2mp_forwarding_drop_messages = None
                    self.total_p2mp_forwarding_updates = None
                    self.total_p2mp_iir_forwarding_drop_messages = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.deleted_stale_entries is not None:
                        return True

                    if self.global_dropped_packets is not None:
                        return True

                    if self.global_failed_lookups is not None:
                        return True

                    if self.global_fragmented_packets is not None:
                        return True

                    if self.highest_label is not None:
                        return True

                    if self.ignore_protect is not None:
                        return True

                    if self.ipv4_imposition_entries is not None:
                        return True

                    if self.label_switched_entries is not None:
                        return True

                    if self.lowest_label is not None:
                        return True

                    if self.lrpf_entries is not None:
                        return True

                    if self.mte_head_entries is not None:
                        return True

                    if self.mte_ll_entries is not None:
                        return True

                    if self.mte_midpoint_entries is not None:
                        return True

                    if self.reserved_label_entries is not None:
                        return True

                    if self.te_frr_head_entries is not None:
                        return True

                    if self.te_frr_interface_entries is not None:
                        return True

                    if self.te_frr_internal_entries is not None:
                        return True

                    if self.te_frr_mid_points_entries is not None:
                        return True

                    if self.te_frr_next_hop_entries is not None:
                        return True

                    if self.te_head_entries is not None:
                        return True

                    if self.te_internal_entries is not None:
                        return True

                    if self.te_mid_points_entries is not None:
                        return True

                    if self.total_forwarding_update_messages is not None:
                        return True

                    if self.total_forwarding_updates is not None:
                        return True

                    if self.total_p2mp_forwarding_added_or_modify_messages is not None:
                        return True

                    if self.total_p2mp_forwarding_delete_messages is not None:
                        return True

                    if self.total_p2mp_forwarding_drop_messages is not None:
                        return True

                    if self.total_p2mp_forwarding_updates is not None:
                        return True

                    if self.total_p2mp_iir_forwarding_drop_messages is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['MplsForwarding.Nodes.Node.ForwardingSummary']['meta_info']


            class LabelFib(object):
                """
                Labels For FIB
                
                .. attribute:: forwarding_details
                
                	MPLS Forwarding Detail table
                	**type**\:  :py:class:`ForwardingDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails>`
                
                .. attribute:: informations
                
                	Forwarding filtering details
                	**type**\:  :py:class:`Informations <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.Informations>`
                
                .. attribute:: label_security
                
                	MPLS label security
                	**type**\:  :py:class:`LabelSecurity <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.LabelSecurity>`
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.forwarding_details = MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails()
                    self.forwarding_details.parent = self
                    self.informations = MplsForwarding.Nodes.Node.LabelFib.Informations()
                    self.informations.parent = self
                    self.label_security = MplsForwarding.Nodes.Node.LabelFib.LabelSecurity()
                    self.label_security.parent = self


                class ForwardingDetails(object):
                    """
                    MPLS Forwarding Detail table
                    
                    .. attribute:: forwarding_detail
                    
                    	FIB MPLS forwarding details
                    	**type**\: list of  :py:class:`ForwardingDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.forwarding_detail = YList()
                        self.forwarding_detail.parent = self
                        self.forwarding_detail.name = 'forwarding_detail'


                    class ForwardingDetail(object):
                        """
                        FIB MPLS forwarding details
                        
                        .. attribute:: afi_table_id
                        
                        	The AFI table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: eos
                        
                        	End of stack flag
                        	**type**\:  :py:class:`MplseosEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplseosEnum>`
                        
                        .. attribute:: eos_bit
                        
                        	EOS bit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: hardware_information
                        
                        	Hardware info
                        	**type**\:  str
                        
                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                        
                        .. attribute:: label_information
                        
                        	Label\-info in FIB leaf
                        	**type**\:  :py:class:`LabelInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation>`
                        
                        .. attribute:: label_value
                        
                        	Local label value
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: ldi_flags
                        
                        	The LDI flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_information
                        
                        	LDI\-info in FIB leaf
                        	**type**\:  :py:class:`LdiInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LdiInformation>`
                        
                        .. attribute:: ldi_pointer
                        
                        	The pointer to the LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_referance_count
                        
                        	Number of references to the LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_type
                        
                        	The LDI type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_flags
                        
                        	The leaf flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_local_label
                        
                        	Local label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_referance_count
                        
                        	Number of references to the leaf
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_time_in_milli_seconds
                        
                        	The time of last update in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: lspa_flags
                        
                        	The LSPA flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_pointer
                        
                        	The pointer to the LW\-LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_refernace_count
                        
                        	The LW\-LDI refcounter
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_type
                        
                        	The LW\-LDI type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_shared_ldi_pointer
                        
                        	The pointer to the shared LDI in LW\-LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: multicast_information
                        
                        	The multicast info
                        	**type**\:  :py:class:`MulticastInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.MulticastInformation>`
                        
                        .. attribute:: multicast_label
                        
                        	The unicast or multicast label
                        	**type**\:  bool
                        
                        .. attribute:: path_list_flags
                        
                        	The pathlist flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: path_list_referance_count
                        
                        	Number of references to the pathlist
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.afi_table_id = None
                            self.eos = None
                            self.eos_bit = None
                            self.hardware_information = None
                            self.label_information = MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation()
                            self.label_information.parent = self
                            self.label_value = None
                            self.ldi_flags = None
                            self.ldi_information = MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LdiInformation()
                            self.ldi_information.parent = self
                            self.ldi_pointer = None
                            self.ldi_referance_count = None
                            self.ldi_type = None
                            self.leaf_flags = None
                            self.leaf_local_label = None
                            self.leaf_referance_count = None
                            self.leaf_time_in_milli_seconds = None
                            self.lspa_flags = None
                            self.lw_ldi_pointer = None
                            self.lw_ldi_refernace_count = None
                            self.lw_ldi_type = None
                            self.lw_shared_ldi_pointer = None
                            self.multicast_information = MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.MulticastInformation()
                            self.multicast_information.parent = self
                            self.multicast_label = None
                            self.path_list_flags = None
                            self.path_list_referance_count = None


                        class LabelInformation(object):
                            """
                            Label\-info in FIB leaf
                            
                            .. attribute:: mpls_adj_info
                            
                            	mpls adj info
                            	**type**\: list of  :py:class:`MplsAdjInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.MplsAdjInfo>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mpls_adj_info = YList()
                                self.mpls_adj_info.parent = self
                                self.mpls_adj_info.name = 'mpls_adj_info'


                            class MplsAdjInfo(object):
                                """
                                mpls adj info
                                
                                .. attribute:: label_information_detail
                                
                                	Detail label info
                                	**type**\:  :py:class:`LabelInformationDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.MplsAdjInfo.LabelInformationDetail>`
                                
                                .. attribute:: label_information_next_hop_protocol
                                
                                	The address family (v4/v6) 
                                	**type**\:  :py:class:`ProtoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.ProtoEnum>`
                                
                                .. attribute:: label_information_next_hop_string
                                
                                	Next hop address in string format
                                	**type**\:  str
                                
                                	**range:** 0..60
                                
                                .. attribute:: label_information_next_hop_type
                                
                                	NHinfo Type
                                	**type**\:  :py:class:`NextHopEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.NextHopEnum>`
                                
                                .. attribute:: label_information_path_index
                                
                                	LabelInformationPathIndex
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_route_version
                                
                                	The version of the route
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_time_in_milli_seconds
                                
                                	The time of last update in msec
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_type
                                
                                	Label\-Info type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: mpls_adjacency_flags
                                
                                	MPLS Adjacency flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: outgoing_interface_string
                                
                                	Output Interface in string format
                                	**type**\:  str
                                
                                	**range:** 0..64
                                
                                .. attribute:: outgoing_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_label_string
                                
                                	Output Label in string format
                                	**type**\:  str
                                
                                	**range:** 0..64
                                
                                .. attribute:: outgoing_physical_interface
                                
                                	Outgoing Physical Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix_or_id
                                
                                	Prefix Or ID
                                	**type**\:  str
                                
                                	**range:** 0..64
                                
                                .. attribute:: tunnel_id_present
                                
                                	Tunnel id present?
                                	**type**\:  bool
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: tx_bytes
                                
                                	Bytes transmitted per LSP
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: tx_packets
                                
                                	Packets transmitted per LSP
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.label_information_detail = MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.MplsAdjInfo.LabelInformationDetail()
                                    self.label_information_detail.parent = self
                                    self.label_information_next_hop_protocol = None
                                    self.label_information_next_hop_string = None
                                    self.label_information_next_hop_type = None
                                    self.label_information_path_index = None
                                    self.label_information_route_version = None
                                    self.label_information_time_in_milli_seconds = None
                                    self.label_information_type = None
                                    self.local_label = None
                                    self.mpls_adjacency_flags = None
                                    self.outgoing_interface = None
                                    self.outgoing_interface_string = None
                                    self.outgoing_label = None
                                    self.outgoing_label_string = None
                                    self.outgoing_physical_interface = None
                                    self.prefix_or_id = None
                                    self.tunnel_id_present = None
                                    self.tunnel_interface = None
                                    self.tx_bytes = None
                                    self.tx_packets = None


                                class LabelInformationDetail(object):
                                    """
                                    Detail label info
                                    
                                    .. attribute:: l3_mtu
                                    
                                    	L3 MTU
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_stack
                                    
                                    	Label stack
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: mac_size
                                    
                                    	Length of L2 encapsulation
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_interface
                                    
                                    	Next hop interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: next_hop_protocol
                                    
                                    	The address family (V4/V6) 
                                    	**type**\:  :py:class:`ProtoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.ProtoEnum>`
                                    
                                    .. attribute:: next_hop_string
                                    
                                    	Next hop address in string format
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: status
                                    
                                    	Status
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: total_encapsulation_size
                                    
                                    	Total encapsulation size\: L2 + MPLS
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: transmit_number_of_bytes_switched
                                    
                                    	Number of Bytes switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: transmit_number_of_packets_switched
                                    
                                    	Number of packets switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.l3_mtu = None
                                        self.label_stack = YLeafList()
                                        self.label_stack.parent = self
                                        self.label_stack.name = 'label_stack'
                                        self.mac_size = None
                                        self.next_hop_interface = None
                                        self.next_hop_protocol = None
                                        self.next_hop_string = None
                                        self.status = None
                                        self.total_encapsulation_size = None
                                        self.transmit_number_of_bytes_switched = None
                                        self.transmit_number_of_packets_switched = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.l3_mtu is not None:
                                            return True

                                        if self.label_stack is not None:
                                            for child in self.label_stack:
                                                if child is not None:
                                                    return True

                                        if self.mac_size is not None:
                                            return True

                                        if self.next_hop_interface is not None:
                                            return True

                                        if self.next_hop_protocol is not None:
                                            return True

                                        if self.next_hop_string is not None:
                                            return True

                                        if self.status is not None:
                                            return True

                                        if self.total_encapsulation_size is not None:
                                            return True

                                        if self.transmit_number_of_bytes_switched is not None:
                                            return True

                                        if self.transmit_number_of_packets_switched is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.MplsAdjInfo.LabelInformationDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mpls-adj-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.label_information_detail is not None and self.label_information_detail._has_data():
                                        return True

                                    if self.label_information_next_hop_protocol is not None:
                                        return True

                                    if self.label_information_next_hop_string is not None:
                                        return True

                                    if self.label_information_next_hop_type is not None:
                                        return True

                                    if self.label_information_path_index is not None:
                                        return True

                                    if self.label_information_route_version is not None:
                                        return True

                                    if self.label_information_time_in_milli_seconds is not None:
                                        return True

                                    if self.label_information_type is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.mpls_adjacency_flags is not None:
                                        return True

                                    if self.outgoing_interface is not None:
                                        return True

                                    if self.outgoing_interface_string is not None:
                                        return True

                                    if self.outgoing_label is not None:
                                        return True

                                    if self.outgoing_label_string is not None:
                                        return True

                                    if self.outgoing_physical_interface is not None:
                                        return True

                                    if self.prefix_or_id is not None:
                                        return True

                                    if self.tunnel_id_present is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    if self.tx_bytes is not None:
                                        return True

                                    if self.tx_packets is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.MplsAdjInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mpls_adj_info is not None:
                                    for child_ref in self.mpls_adj_info:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation']['meta_info']


                        class LdiInformation(object):
                            """
                            LDI\-info in FIB leaf
                            
                            .. attribute:: ldi_hardware_information
                            
                            	Hardware info
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.ldi_hardware_information = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ldi-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.ldi_hardware_information is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LdiInformation']['meta_info']


                        class MulticastInformation(object):
                            """
                            The multicast info
                            
                            .. attribute:: multicast_encap_id
                            
                            	The multicast ENCAP\-ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_mol_base_flags
                            
                            	MOL base flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_mol_flags
                            
                            	MOL flags
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mol_referance_count
                            
                            	MOL refcount
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_local_output_paths
                            
                            	num multicast mpls local output paths
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_output_paths
                            
                            	num multicast mpls output paths 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_protocol_output_paths
                            
                            	num multicast mpls prot output paths 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_platform_data
                            
                            	The multicast platform data
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: multicast_platform_data_length
                            
                            	The multicast platform data len
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: multicast_rpf_id
                            
                            	The multicast RPF\-ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_id
                            
                            	multicast mpls P2MP\-TE tunnel id or MLDP Tunnel LSMID on all nodes
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_interface_handler
                            
                            	multicast mpls tunnel
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: multicast_tunnel_lspvif
                            
                            	multicast LSPVIF for MLDP Tunnels
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_next_hop_information
                            
                            	multicast nhinfo for p2mp TE Head
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.multicast_encap_id = None
                                self.multicast_mol_base_flags = None
                                self.multicast_mol_flags = None
                                self.multicast_mol_referance_count = None
                                self.multicast_mpls_local_output_paths = None
                                self.multicast_mpls_output_paths = None
                                self.multicast_mpls_protocol_output_paths = None
                                self.multicast_platform_data = None
                                self.multicast_platform_data_length = None
                                self.multicast_rpf_id = None
                                self.multicast_tunnel_id = None
                                self.multicast_tunnel_interface_handler = None
                                self.multicast_tunnel_lspvif = None
                                self.multicast_tunnel_next_hop_information = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:multicast-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.multicast_encap_id is not None:
                                    return True

                                if self.multicast_mol_base_flags is not None:
                                    return True

                                if self.multicast_mol_flags is not None:
                                    return True

                                if self.multicast_mol_referance_count is not None:
                                    return True

                                if self.multicast_mpls_local_output_paths is not None:
                                    return True

                                if self.multicast_mpls_output_paths is not None:
                                    return True

                                if self.multicast_mpls_protocol_output_paths is not None:
                                    return True

                                if self.multicast_platform_data is not None:
                                    return True

                                if self.multicast_platform_data_length is not None:
                                    return True

                                if self.multicast_rpf_id is not None:
                                    return True

                                if self.multicast_tunnel_id is not None:
                                    return True

                                if self.multicast_tunnel_interface_handler is not None:
                                    return True

                                if self.multicast_tunnel_lspvif is not None:
                                    return True

                                if self.multicast_tunnel_next_hop_information is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.MulticastInformation']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding-detail'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.afi_table_id is not None:
                                return True

                            if self.eos is not None:
                                return True

                            if self.eos_bit is not None:
                                return True

                            if self.hardware_information is not None:
                                return True

                            if self.label_information is not None and self.label_information._has_data():
                                return True

                            if self.label_value is not None:
                                return True

                            if self.ldi_flags is not None:
                                return True

                            if self.ldi_information is not None and self.ldi_information._has_data():
                                return True

                            if self.ldi_pointer is not None:
                                return True

                            if self.ldi_referance_count is not None:
                                return True

                            if self.ldi_type is not None:
                                return True

                            if self.leaf_flags is not None:
                                return True

                            if self.leaf_local_label is not None:
                                return True

                            if self.leaf_referance_count is not None:
                                return True

                            if self.leaf_time_in_milli_seconds is not None:
                                return True

                            if self.lspa_flags is not None:
                                return True

                            if self.lw_ldi_pointer is not None:
                                return True

                            if self.lw_ldi_refernace_count is not None:
                                return True

                            if self.lw_ldi_type is not None:
                                return True

                            if self.lw_shared_ldi_pointer is not None:
                                return True

                            if self.multicast_information is not None and self.multicast_information._has_data():
                                return True

                            if self.multicast_label is not None:
                                return True

                            if self.path_list_flags is not None:
                                return True

                            if self.path_list_referance_count is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding-details'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.forwarding_detail is not None:
                            for child_ref in self.forwarding_detail:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.ForwardingDetails']['meta_info']


                class Informations(object):
                    """
                    Forwarding filtering details
                    
                    .. attribute:: information
                    
                    	FIB MPLS forwarding information
                    	**type**\: list of  :py:class:`Information <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.Informations.Information>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.information = YList()
                        self.information.parent = self
                        self.information.name = 'information'


                    class Information(object):
                        """
                        FIB MPLS forwarding information
                        
                        .. attribute:: afi_table_id
                        
                        	The AFI table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: eos
                        
                        	End of stack flag
                        	**type**\:  :py:class:`MplseosEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplseosEnum>`
                        
                        .. attribute:: eos_bit
                        
                        	EOS bit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: hardware_information
                        
                        	Hardware info
                        	**type**\:  str
                        
                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                        
                        .. attribute:: label_information
                        
                        	Label\-info in FIB leaf
                        	**type**\:  :py:class:`LabelInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LabelInformation>`
                        
                        .. attribute:: label_value
                        
                        	Local label value
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: ldi_flags
                        
                        	The LDI flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_information
                        
                        	LDI\-info in FIB leaf
                        	**type**\:  :py:class:`LdiInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LdiInformation>`
                        
                        .. attribute:: ldi_pointer
                        
                        	The pointer to the LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_referance_count
                        
                        	Number of references to the LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_type
                        
                        	The LDI type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_flags
                        
                        	The leaf flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_local_label
                        
                        	Local label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_referance_count
                        
                        	Number of references to the leaf
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_time_in_milli_seconds
                        
                        	The time of last update in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: lspa_flags
                        
                        	The LSPA flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_pointer
                        
                        	The pointer to the LW\-LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_refernace_count
                        
                        	The LW\-LDI refcounter
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_type
                        
                        	The LW\-LDI type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_shared_ldi_pointer
                        
                        	The pointer to the shared LDI in LW\-LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: multicast_information
                        
                        	The multicast info
                        	**type**\:  :py:class:`MulticastInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.Informations.Information.MulticastInformation>`
                        
                        .. attribute:: multicast_label
                        
                        	The unicast or multicast label
                        	**type**\:  bool
                        
                        .. attribute:: path_list_flags
                        
                        	The pathlist flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: path_list_referance_count
                        
                        	Number of references to the pathlist
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.afi_table_id = None
                            self.eos = None
                            self.eos_bit = None
                            self.hardware_information = None
                            self.label_information = MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LabelInformation()
                            self.label_information.parent = self
                            self.label_value = None
                            self.ldi_flags = None
                            self.ldi_information = MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LdiInformation()
                            self.ldi_information.parent = self
                            self.ldi_pointer = None
                            self.ldi_referance_count = None
                            self.ldi_type = None
                            self.leaf_flags = None
                            self.leaf_local_label = None
                            self.leaf_referance_count = None
                            self.leaf_time_in_milli_seconds = None
                            self.lspa_flags = None
                            self.lw_ldi_pointer = None
                            self.lw_ldi_refernace_count = None
                            self.lw_ldi_type = None
                            self.lw_shared_ldi_pointer = None
                            self.multicast_information = MplsForwarding.Nodes.Node.LabelFib.Informations.Information.MulticastInformation()
                            self.multicast_information.parent = self
                            self.multicast_label = None
                            self.path_list_flags = None
                            self.path_list_referance_count = None


                        class LabelInformation(object):
                            """
                            Label\-info in FIB leaf
                            
                            .. attribute:: mpls_adj_info
                            
                            	mpls adj info
                            	**type**\: list of  :py:class:`MplsAdjInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LabelInformation.MplsAdjInfo>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mpls_adj_info = YList()
                                self.mpls_adj_info.parent = self
                                self.mpls_adj_info.name = 'mpls_adj_info'


                            class MplsAdjInfo(object):
                                """
                                mpls adj info
                                
                                .. attribute:: label_information_detail
                                
                                	Detail label info
                                	**type**\:  :py:class:`LabelInformationDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LabelInformation.MplsAdjInfo.LabelInformationDetail>`
                                
                                .. attribute:: label_information_next_hop_protocol
                                
                                	The address family (v4/v6) 
                                	**type**\:  :py:class:`ProtoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.ProtoEnum>`
                                
                                .. attribute:: label_information_next_hop_string
                                
                                	Next hop address in string format
                                	**type**\:  str
                                
                                	**range:** 0..60
                                
                                .. attribute:: label_information_next_hop_type
                                
                                	NHinfo Type
                                	**type**\:  :py:class:`NextHopEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.NextHopEnum>`
                                
                                .. attribute:: label_information_path_index
                                
                                	LabelInformationPathIndex
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_route_version
                                
                                	The version of the route
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_time_in_milli_seconds
                                
                                	The time of last update in msec
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_type
                                
                                	Label\-Info type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: mpls_adjacency_flags
                                
                                	MPLS Adjacency flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: outgoing_interface_string
                                
                                	Output Interface in string format
                                	**type**\:  str
                                
                                	**range:** 0..64
                                
                                .. attribute:: outgoing_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_label_string
                                
                                	Output Label in string format
                                	**type**\:  str
                                
                                	**range:** 0..64
                                
                                .. attribute:: outgoing_physical_interface
                                
                                	Outgoing Physical Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix_or_id
                                
                                	Prefix Or ID
                                	**type**\:  str
                                
                                	**range:** 0..64
                                
                                .. attribute:: tunnel_id_present
                                
                                	Tunnel id present?
                                	**type**\:  bool
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: tx_bytes
                                
                                	Bytes transmitted per LSP
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: tx_packets
                                
                                	Packets transmitted per LSP
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.label_information_detail = MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LabelInformation.MplsAdjInfo.LabelInformationDetail()
                                    self.label_information_detail.parent = self
                                    self.label_information_next_hop_protocol = None
                                    self.label_information_next_hop_string = None
                                    self.label_information_next_hop_type = None
                                    self.label_information_path_index = None
                                    self.label_information_route_version = None
                                    self.label_information_time_in_milli_seconds = None
                                    self.label_information_type = None
                                    self.local_label = None
                                    self.mpls_adjacency_flags = None
                                    self.outgoing_interface = None
                                    self.outgoing_interface_string = None
                                    self.outgoing_label = None
                                    self.outgoing_label_string = None
                                    self.outgoing_physical_interface = None
                                    self.prefix_or_id = None
                                    self.tunnel_id_present = None
                                    self.tunnel_interface = None
                                    self.tx_bytes = None
                                    self.tx_packets = None


                                class LabelInformationDetail(object):
                                    """
                                    Detail label info
                                    
                                    .. attribute:: l3_mtu
                                    
                                    	L3 MTU
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_stack
                                    
                                    	Label stack
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: mac_size
                                    
                                    	Length of L2 encapsulation
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_interface
                                    
                                    	Next hop interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: next_hop_protocol
                                    
                                    	The address family (V4/V6) 
                                    	**type**\:  :py:class:`ProtoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.ProtoEnum>`
                                    
                                    .. attribute:: next_hop_string
                                    
                                    	Next hop address in string format
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: status
                                    
                                    	Status
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: total_encapsulation_size
                                    
                                    	Total encapsulation size\: L2 + MPLS
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: transmit_number_of_bytes_switched
                                    
                                    	Number of Bytes switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: transmit_number_of_packets_switched
                                    
                                    	Number of packets switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.l3_mtu = None
                                        self.label_stack = YLeafList()
                                        self.label_stack.parent = self
                                        self.label_stack.name = 'label_stack'
                                        self.mac_size = None
                                        self.next_hop_interface = None
                                        self.next_hop_protocol = None
                                        self.next_hop_string = None
                                        self.status = None
                                        self.total_encapsulation_size = None
                                        self.transmit_number_of_bytes_switched = None
                                        self.transmit_number_of_packets_switched = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.l3_mtu is not None:
                                            return True

                                        if self.label_stack is not None:
                                            for child in self.label_stack:
                                                if child is not None:
                                                    return True

                                        if self.mac_size is not None:
                                            return True

                                        if self.next_hop_interface is not None:
                                            return True

                                        if self.next_hop_protocol is not None:
                                            return True

                                        if self.next_hop_string is not None:
                                            return True

                                        if self.status is not None:
                                            return True

                                        if self.total_encapsulation_size is not None:
                                            return True

                                        if self.transmit_number_of_bytes_switched is not None:
                                            return True

                                        if self.transmit_number_of_packets_switched is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LabelInformation.MplsAdjInfo.LabelInformationDetail']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mpls-adj-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.label_information_detail is not None and self.label_information_detail._has_data():
                                        return True

                                    if self.label_information_next_hop_protocol is not None:
                                        return True

                                    if self.label_information_next_hop_string is not None:
                                        return True

                                    if self.label_information_next_hop_type is not None:
                                        return True

                                    if self.label_information_path_index is not None:
                                        return True

                                    if self.label_information_route_version is not None:
                                        return True

                                    if self.label_information_time_in_milli_seconds is not None:
                                        return True

                                    if self.label_information_type is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.mpls_adjacency_flags is not None:
                                        return True

                                    if self.outgoing_interface is not None:
                                        return True

                                    if self.outgoing_interface_string is not None:
                                        return True

                                    if self.outgoing_label is not None:
                                        return True

                                    if self.outgoing_label_string is not None:
                                        return True

                                    if self.outgoing_physical_interface is not None:
                                        return True

                                    if self.prefix_or_id is not None:
                                        return True

                                    if self.tunnel_id_present is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    if self.tx_bytes is not None:
                                        return True

                                    if self.tx_packets is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LabelInformation.MplsAdjInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mpls_adj_info is not None:
                                    for child_ref in self.mpls_adj_info:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LabelInformation']['meta_info']


                        class LdiInformation(object):
                            """
                            LDI\-info in FIB leaf
                            
                            .. attribute:: ldi_hardware_information
                            
                            	Hardware info
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.ldi_hardware_information = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ldi-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.ldi_hardware_information is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.Informations.Information.LdiInformation']['meta_info']


                        class MulticastInformation(object):
                            """
                            The multicast info
                            
                            .. attribute:: multicast_encap_id
                            
                            	The multicast ENCAP\-ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_mol_base_flags
                            
                            	MOL base flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_mol_flags
                            
                            	MOL flags
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mol_referance_count
                            
                            	MOL refcount
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_local_output_paths
                            
                            	num multicast mpls local output paths
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_output_paths
                            
                            	num multicast mpls output paths 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_protocol_output_paths
                            
                            	num multicast mpls prot output paths 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_platform_data
                            
                            	The multicast platform data
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: multicast_platform_data_length
                            
                            	The multicast platform data len
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: multicast_rpf_id
                            
                            	The multicast RPF\-ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_id
                            
                            	multicast mpls P2MP\-TE tunnel id or MLDP Tunnel LSMID on all nodes
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_interface_handler
                            
                            	multicast mpls tunnel
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: multicast_tunnel_lspvif
                            
                            	multicast LSPVIF for MLDP Tunnels
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_next_hop_information
                            
                            	multicast nhinfo for p2mp TE Head
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.multicast_encap_id = None
                                self.multicast_mol_base_flags = None
                                self.multicast_mol_flags = None
                                self.multicast_mol_referance_count = None
                                self.multicast_mpls_local_output_paths = None
                                self.multicast_mpls_output_paths = None
                                self.multicast_mpls_protocol_output_paths = None
                                self.multicast_platform_data = None
                                self.multicast_platform_data_length = None
                                self.multicast_rpf_id = None
                                self.multicast_tunnel_id = None
                                self.multicast_tunnel_interface_handler = None
                                self.multicast_tunnel_lspvif = None
                                self.multicast_tunnel_next_hop_information = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:multicast-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.multicast_encap_id is not None:
                                    return True

                                if self.multicast_mol_base_flags is not None:
                                    return True

                                if self.multicast_mol_flags is not None:
                                    return True

                                if self.multicast_mol_referance_count is not None:
                                    return True

                                if self.multicast_mpls_local_output_paths is not None:
                                    return True

                                if self.multicast_mpls_output_paths is not None:
                                    return True

                                if self.multicast_mpls_protocol_output_paths is not None:
                                    return True

                                if self.multicast_platform_data is not None:
                                    return True

                                if self.multicast_platform_data_length is not None:
                                    return True

                                if self.multicast_rpf_id is not None:
                                    return True

                                if self.multicast_tunnel_id is not None:
                                    return True

                                if self.multicast_tunnel_interface_handler is not None:
                                    return True

                                if self.multicast_tunnel_lspvif is not None:
                                    return True

                                if self.multicast_tunnel_next_hop_information is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.Informations.Information.MulticastInformation']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:information'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.afi_table_id is not None:
                                return True

                            if self.eos is not None:
                                return True

                            if self.eos_bit is not None:
                                return True

                            if self.hardware_information is not None:
                                return True

                            if self.label_information is not None and self.label_information._has_data():
                                return True

                            if self.label_value is not None:
                                return True

                            if self.ldi_flags is not None:
                                return True

                            if self.ldi_information is not None and self.ldi_information._has_data():
                                return True

                            if self.ldi_pointer is not None:
                                return True

                            if self.ldi_referance_count is not None:
                                return True

                            if self.ldi_type is not None:
                                return True

                            if self.leaf_flags is not None:
                                return True

                            if self.leaf_local_label is not None:
                                return True

                            if self.leaf_referance_count is not None:
                                return True

                            if self.leaf_time_in_milli_seconds is not None:
                                return True

                            if self.lspa_flags is not None:
                                return True

                            if self.lw_ldi_pointer is not None:
                                return True

                            if self.lw_ldi_refernace_count is not None:
                                return True

                            if self.lw_ldi_type is not None:
                                return True

                            if self.lw_shared_ldi_pointer is not None:
                                return True

                            if self.multicast_information is not None and self.multicast_information._has_data():
                                return True

                            if self.multicast_label is not None:
                                return True

                            if self.path_list_flags is not None:
                                return True

                            if self.path_list_referance_count is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.Informations.Information']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:informations'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.information is not None:
                            for child_ref in self.information:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.Informations']['meta_info']


                class LabelSecurity(object):
                    """
                    MPLS label security
                    
                    .. attribute:: interfaces
                    
                    	MPLS label security interface table
                    	**type**\:  :py:class:`Interfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.LabelSecurity.Interfaces>`
                    
                    .. attribute:: summary
                    
                    	MPLS label security summary
                    	**type**\:  :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.LabelSecurity.Summary>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interfaces = MplsForwarding.Nodes.Node.LabelFib.LabelSecurity.Interfaces()
                        self.interfaces.parent = self
                        self.summary = MplsForwarding.Nodes.Node.LabelFib.LabelSecurity.Summary()
                        self.summary.parent = self


                    class Interfaces(object):
                        """
                        MPLS label security interface table
                        
                        .. attribute:: interface
                        
                        	Specify interface Name
                        	**type**\: list of  :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MplsForwarding.Nodes.Node.LabelFib.LabelSecurity.Interfaces.Interface>`
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface = YList()
                            self.interface.parent = self
                            self.interface.name = 'interface'


                        class Interface(object):
                            """
                            Specify interface Name
                            
                            .. attribute:: interface_name  <key>
                            
                            	Interface Name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: mld_enabled
                            
                            	Multi\-label drop is enabled on interface
                            	**type**\:  bool
                            
                            .. attribute:: mld_supported
                            
                            	Multi\-label drop counters are supported per interface
                            	**type**\:  bool
                            
                            .. attribute:: multi_label_drops
                            
                            	Multi\-label drops
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: rpf_drops
                            
                            	RPF drops
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: rpf_enabled
                            
                            	RPF is enabled on interface
                            	**type**\:  bool
                            
                            .. attribute:: rpf_supported
                            
                            	RPF stats supported per interface
                            	**type**\:  bool
                            
                            .. attribute:: rpfifh
                            
                            	RPF interface handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.mld_enabled = None
                                self.mld_supported = None
                                self.multi_label_drops = None
                                self.rpf_drops = None
                                self.rpf_enabled = None
                                self.rpf_supported = None
                                self.rpfifh = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.interface_name is None:
                                    raise YPYModelError('Key property interface_name is None')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:interface[Cisco-IOS-XR-fib-common-oper:interface-name = ' + str(self.interface_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.mld_enabled is not None:
                                    return True

                                if self.mld_supported is not None:
                                    return True

                                if self.multi_label_drops is not None:
                                    return True

                                if self.rpf_drops is not None:
                                    return True

                                if self.rpf_enabled is not None:
                                    return True

                                if self.rpf_supported is not None:
                                    return True

                                if self.rpfifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.LabelSecurity.Interfaces.Interface']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:interfaces'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface is not None:
                                for child_ref in self.interface:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.LabelSecurity.Interfaces']['meta_info']


                    class Summary(object):
                        """
                        MPLS label security summary
                        
                        .. attribute:: multi_label_drops
                        
                        	Multi\-label drops
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: rpf_drops
                        
                        	RPF drops
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.multi_label_drops = None
                            self.rpf_drops = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:summary'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.multi_label_drops is not None:
                                return True

                            if self.rpf_drops is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.LabelSecurity.Summary']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-security'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interfaces is not None and self.interfaces._has_data():
                            return True

                        if self.summary is not None and self.summary._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib.LabelSecurity']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-fib'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.forwarding_details is not None and self.forwarding_details._has_data():
                        return True

                    if self.informations is not None and self.informations._has_data():
                        return True

                    if self.label_security is not None and self.label_security._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['MplsForwarding.Nodes.Node.LabelFib']['meta_info']

            @property
            def _common_path(self):
                if self.node_name is None:
                    raise YPYModelError('Key property node_name is None')

                return '/Cisco-IOS-XR-fib-common-oper:mpls-forwarding/Cisco-IOS-XR-fib-common-oper:nodes/Cisco-IOS-XR-fib-common-oper:node[Cisco-IOS-XR-fib-common-oper:node-name = ' + str(self.node_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node_name is not None:
                    return True

                if self.forwarding_summary is not None and self.forwarding_summary._has_data():
                    return True

                if self.label_fib is not None and self.label_fib._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                return meta._meta_table['MplsForwarding.Nodes.Node']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-fib-common-oper:mpls-forwarding/Cisco-IOS-XR-fib-common-oper:nodes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.node is not None:
                for child_ref in self.node:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
            return meta._meta_table['MplsForwarding.Nodes']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-fib-common-oper:mpls-forwarding'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.nodes is not None and self.nodes._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['MplsForwarding']['meta_info']


class FibMpls(object):
    """
    fib mpls
    
    .. attribute:: nodes
    
    	Table of Nodes
    	**type**\:  :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes>`
    
    

    """

    _prefix = 'fib-common-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.nodes = FibMpls.Nodes()
        self.nodes.parent = self


    class Nodes(object):
        """
        Table of Nodes
        
        .. attribute:: node
        
        	Operational data for a specific Node
        	**type**\: list of  :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node>`
        
        

        """

        _prefix = 'fib-common-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.node = YList()
            self.node.parent = self
            self.node.name = 'node'


        class Node(object):
            """
            Operational data for a specific Node
            
            .. attribute:: node_name  <key>
            
            	Node name
            	**type**\:  str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            .. attribute:: forwarding_summary
            
            	FIB MPLS forwarding summary
            	**type**\:  :py:class:`ForwardingSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.ForwardingSummary>`
            
            .. attribute:: frr_database
            
            	FIB MPLS FRR Database
            	**type**\:  :py:class:`FrrDatabase <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase>`
            
            .. attribute:: frr_logs
            
            	FRR Log Table
            	**type**\:  :py:class:`FrrLogs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrLogs>`
            
            .. attribute:: label_fib
            
            	Labels For FIB
            	**type**\:  :py:class:`LabelFib <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib>`
            
            .. attribute:: tunnel
            
            	Tunnels Operations
            	**type**\:  :py:class:`Tunnel <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel>`
            
            

            """

            _prefix = 'fib-common-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node_name = None
                self.forwarding_summary = FibMpls.Nodes.Node.ForwardingSummary()
                self.forwarding_summary.parent = self
                self.frr_database = FibMpls.Nodes.Node.FrrDatabase()
                self.frr_database.parent = self
                self.frr_logs = FibMpls.Nodes.Node.FrrLogs()
                self.frr_logs.parent = self
                self.label_fib = FibMpls.Nodes.Node.LabelFib()
                self.label_fib.parent = self
                self.tunnel = FibMpls.Nodes.Node.Tunnel()
                self.tunnel.parent = self


            class LabelFib(object):
                """
                Labels For FIB
                
                .. attribute:: forwarding_details
                
                	MPLS Forwarding Detail table
                	**type**\:  :py:class:`ForwardingDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails>`
                
                .. attribute:: forwardings
                
                	Forwarding filtering details
                	**type**\:  :py:class:`Forwardings <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings>`
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.forwarding_details = FibMpls.Nodes.Node.LabelFib.ForwardingDetails()
                    self.forwarding_details.parent = self
                    self.forwardings = FibMpls.Nodes.Node.LabelFib.Forwardings()
                    self.forwardings.parent = self


                class Forwardings(object):
                    """
                    Forwarding filtering details
                    
                    .. attribute:: forwarding
                    
                    	FIB MPLS forwarding information
                    	**type**\: list of  :py:class:`Forwarding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.forwarding = YList()
                        self.forwarding.parent = self
                        self.forwarding.name = 'forwarding'


                    class Forwarding(object):
                        """
                        FIB MPLS forwarding information
                        
                        .. attribute:: afi_table_id
                        
                        	The AFI table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: eos
                        
                        	End of stack flag
                        	**type**\:  :py:class:`EosEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.EosEnum>`
                        
                        .. attribute:: eos_bit
                        
                        	EOS bit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: hardware_information
                        
                        	Hardware info
                        	**type**\:  str
                        
                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                        
                        .. attribute:: label_information
                        
                        	Label\-info in FIB leaf
                        	**type**\:  :py:class:`LabelInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation>`
                        
                        .. attribute:: ldi_flags
                        
                        	The LDI flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_information
                        
                        	LDI\-info in FIB leaf
                        	**type**\:  :py:class:`LdiInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LdiInformation>`
                        
                        .. attribute:: ldi_pointer
                        
                        	The pointer to the LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_reference_count
                        
                        	Number of references to the LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_time_of_last_update_in_msec
                        
                        	The time of last update for LDI in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: ldi_type
                        
                        	The LDI type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_flags
                        
                        	The leaf flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_local_label
                        
                        	Local label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_ptr
                        
                        	The Leaf pointer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_reference_count
                        
                        	Number of references to the leaf
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_time_in_milli_seconds
                        
                        	The time of last update in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: local_label
                        
                        	Local label value
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: lspa_flags
                        
                        	The LSPA flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lspa_time_of_last_update_in_msec
                        
                        	The time of last update for LSPA in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: lw_ldi_pointer
                        
                        	The pointer to the LW\-LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_reference_count
                        
                        	The LW\-LDI refcounter
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_type
                        
                        	The LW\-LDI type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_shared_ldi_pointer
                        
                        	The pointer to the shared LDI in LW\-LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lwldi_time_of_last_update_in_msec
                        
                        	The time of last update for LW\-LDI in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: multicast_information
                        
                        	The multicast info
                        	**type**\:  :py:class:`MulticastInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.MulticastInformation>`
                        
                        .. attribute:: multicast_label
                        
                        	The unicast or multicast label
                        	**type**\:  bool
                        
                        .. attribute:: path_list_flags
                        
                        	The pathlist flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: path_list_ldi_mask
                        
                        	The pathlist ldi mask
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: path_list_pointer
                        
                        	The pointer to the pathlist
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: path_list_reference_count
                        
                        	Number of references to the pathlist
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pl_time_of_last_update_in_msec
                        
                        	The time of last update for PL in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: pl_time_stamp_type
                        
                        	The type of time\-stamp on PL
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pwhe_interface_list_id
                        
                        	Interface list associated with PW\-HE VC imposition label
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: pwhe_interface_list_ptr
                        
                        	Interface list ptr
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: rpf
                        
                        	RPF info
                        	**type**\:  :py:class:`Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf>`
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.afi_table_id = None
                            self.eos = None
                            self.eos_bit = None
                            self.hardware_information = None
                            self.label_information = FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation()
                            self.label_information.parent = self
                            self.ldi_flags = None
                            self.ldi_information = FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LdiInformation()
                            self.ldi_information.parent = self
                            self.ldi_pointer = None
                            self.ldi_reference_count = None
                            self.ldi_time_of_last_update_in_msec = None
                            self.ldi_type = None
                            self.leaf_flags = None
                            self.leaf_local_label = None
                            self.leaf_ptr = None
                            self.leaf_reference_count = None
                            self.leaf_time_in_milli_seconds = None
                            self.local_label = None
                            self.lspa_flags = None
                            self.lspa_time_of_last_update_in_msec = None
                            self.lw_ldi_pointer = None
                            self.lw_ldi_reference_count = None
                            self.lw_ldi_type = None
                            self.lw_shared_ldi_pointer = None
                            self.lwldi_time_of_last_update_in_msec = None
                            self.multicast_information = FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.MulticastInformation()
                            self.multicast_information.parent = self
                            self.multicast_label = None
                            self.path_list_flags = None
                            self.path_list_ldi_mask = None
                            self.path_list_pointer = None
                            self.path_list_reference_count = None
                            self.pl_time_of_last_update_in_msec = None
                            self.pl_time_stamp_type = None
                            self.pwhe_interface_list_id = None
                            self.pwhe_interface_list_ptr = None
                            self.rpf = FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf()
                            self.rpf.parent = self


                        class LabelInformation(object):
                            """
                            Label\-info in FIB leaf
                            
                            .. attribute:: fib_mpls_adj_info
                            
                            	fib mpls adj info
                            	**type**\: list of  :py:class:`FibMplsAdjInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation.FibMplsAdjInfo>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.fib_mpls_adj_info = YList()
                                self.fib_mpls_adj_info.parent = self
                                self.fib_mpls_adj_info.name = 'fib_mpls_adj_info'


                            class FibMplsAdjInfo(object):
                                """
                                fib mpls adj info
                                
                                .. attribute:: app_id
                                
                                	App ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: backup_path_index
                                
                                	backup path index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: frr_nh_ptr
                                
                                	FRR next\-hop object pointer
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: is_frr_active
                                
                                	Is FRR active?
                                	**type**\:  bool
                                
                                .. attribute:: is_pure_backup
                                
                                	Is pure backup path?
                                	**type**\:  bool
                                
                                .. attribute:: is_srte
                                
                                	Is SRTE?
                                	**type**\:  bool
                                
                                .. attribute:: label_bridge_domain_id
                                
                                	Bridge domain\-ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_detail
                                
                                	Detail label info
                                	**type**\:  :py:class:`LabelInformationDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation.FibMplsAdjInfo.LabelInformationDetail>`
                                
                                .. attribute:: label_information_encap_id
                                
                                	Encap ID
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_next_hop_protocol
                                
                                	The address family (v4/v6) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_next_hop_string
                                
                                	Next hop address in string format
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: label_information_next_hop_table_id
                                
                                	NHinfo Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_next_hop_type
                                
                                	NHinfo Type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_path_index
                                
                                	LabelInformationPathIndex
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_route_version
                                
                                	The version of the route
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_time_in_milli_seconds
                                
                                	The time of last update in msec
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_type
                                
                                	Label\-Info type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_pw_xid
                                
                                	The XID of PW
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_shg_id
                                
                                	The SHG\-ID of PW
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_xid
                                
                                	The XID of Xconnect
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: li_pointer
                                
                                	The pointer to the LI object
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: li_reference_count
                                
                                	The LI object refcounter
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: mpi_info
                                
                                	The MPI info
                                	**type**\:  :py:class:`MpiInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation.FibMplsAdjInfo.MpiInfo>`
                                
                                .. attribute:: mpls_adjacency_flags
                                
                                	MPLS Adjacency flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: nhid
                                
                                	Path's NH Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_interface
                                
                                	Outgoing interface
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_physical_interface
                                
                                	Outgoing Physical Interface
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags
                                
                                	PL path flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_index
                                
                                	path index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: pq_flags
                                
                                	PQ flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pq_label
                                
                                	PQ label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pwhe_interface
                                
                                	PW\-HE interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: pwhecw_enabled
                                
                                	PW\-HE CW setting
                                	**type**\:  bool
                                
                                .. attribute:: pwhev_ctype
                                
                                	PW\-HE VC type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sli_from_ldi
                                
                                	Path learnt the LDI/used for Forwarding?
                                	**type**\:  bool
                                
                                .. attribute:: tunnel_id_present
                                
                                	Tunnel id present?
                                	**type**\:  bool
                                
                                .. attribute:: tunnel_interface_name
                                
                                	Tunnel Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: weight
                                
                                	Weight or load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.app_id = None
                                    self.backup_path_index = None
                                    self.frr_nh_ptr = None
                                    self.is_frr_active = None
                                    self.is_pure_backup = None
                                    self.is_srte = None
                                    self.label_bridge_domain_id = None
                                    self.label_information_detail = FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation.FibMplsAdjInfo.LabelInformationDetail()
                                    self.label_information_detail.parent = self
                                    self.label_information_encap_id = None
                                    self.label_information_next_hop_protocol = None
                                    self.label_information_next_hop_string = None
                                    self.label_information_next_hop_table_id = None
                                    self.label_information_next_hop_type = None
                                    self.label_information_path_index = None
                                    self.label_information_route_version = None
                                    self.label_information_time_in_milli_seconds = None
                                    self.label_information_type = None
                                    self.label_pw_xid = None
                                    self.label_shg_id = None
                                    self.label_xid = None
                                    self.li_pointer = None
                                    self.li_reference_count = None
                                    self.local_label = None
                                    self.mpi_info = FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation.FibMplsAdjInfo.MpiInfo()
                                    self.mpi_info.parent = self
                                    self.mpls_adjacency_flags = None
                                    self.nhid = None
                                    self.outgoing_interface = None
                                    self.outgoing_label = None
                                    self.outgoing_physical_interface = None
                                    self.path_flags = None
                                    self.path_index = None
                                    self.pq_flags = None
                                    self.pq_label = None
                                    self.pwhe_interface = None
                                    self.pwhecw_enabled = None
                                    self.pwhev_ctype = None
                                    self.sli_from_ldi = None
                                    self.tunnel_id_present = None
                                    self.tunnel_interface_name = None
                                    self.weight = None


                                class LabelInformationDetail(object):
                                    """
                                    Detail label info
                                    
                                    .. attribute:: l3_mtu
                                    
                                    	L3 MTU
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_stack
                                    
                                    	Label stack
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: mac_size
                                    
                                    	Length of L2 encapsulation
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_interface_name
                                    
                                    	Next hop interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: next_hop_protocol
                                    
                                    	The address family (V4/V6) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_string
                                    
                                    	Next hop address in string format
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: nh_id
                                    
                                    	Nexthop Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: route_download_priority
                                    
                                    	Priority at which the label was downloaded
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: route_download_version
                                    
                                    	Version of the route\-download for the label
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: status
                                    
                                    	Status
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: total_encapsulation_size
                                    
                                    	Total encapsulation size\: L2 + MPLS
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: transmit_number_of_bytes_switched
                                    
                                    	Number of Bytes switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: transmit_number_of_packets_switched
                                    
                                    	Number of packets switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: transmit_number_of_tm_bytes_switched
                                    
                                    	Number of Traffic\-Matrix Bytes switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: transmit_number_of_tm_packets_switched
                                    
                                    	Number of Traffic\-Matrix packets switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: version_priority_valid
                                    
                                    	Indicates if the version/priority fields are valid
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.l3_mtu = None
                                        self.label_stack = YLeafList()
                                        self.label_stack.parent = self
                                        self.label_stack.name = 'label_stack'
                                        self.mac_size = None
                                        self.next_hop_interface_name = None
                                        self.next_hop_protocol = None
                                        self.next_hop_string = None
                                        self.nh_id = None
                                        self.route_download_priority = None
                                        self.route_download_version = None
                                        self.status = None
                                        self.total_encapsulation_size = None
                                        self.transmit_number_of_bytes_switched = None
                                        self.transmit_number_of_packets_switched = None
                                        self.transmit_number_of_tm_bytes_switched = None
                                        self.transmit_number_of_tm_packets_switched = None
                                        self.version_priority_valid = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.l3_mtu is not None:
                                            return True

                                        if self.label_stack is not None:
                                            for child in self.label_stack:
                                                if child is not None:
                                                    return True

                                        if self.mac_size is not None:
                                            return True

                                        if self.next_hop_interface_name is not None:
                                            return True

                                        if self.next_hop_protocol is not None:
                                            return True

                                        if self.next_hop_string is not None:
                                            return True

                                        if self.nh_id is not None:
                                            return True

                                        if self.route_download_priority is not None:
                                            return True

                                        if self.route_download_version is not None:
                                            return True

                                        if self.status is not None:
                                            return True

                                        if self.total_encapsulation_size is not None:
                                            return True

                                        if self.transmit_number_of_bytes_switched is not None:
                                            return True

                                        if self.transmit_number_of_packets_switched is not None:
                                            return True

                                        if self.transmit_number_of_tm_bytes_switched is not None:
                                            return True

                                        if self.transmit_number_of_tm_packets_switched is not None:
                                            return True

                                        if self.version_priority_valid is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation.FibMplsAdjInfo.LabelInformationDetail']['meta_info']


                                class MpiInfo(object):
                                    """
                                    The MPI info
                                    
                                    .. attribute:: backup_is_local
                                    
                                    	backup is local
                                    	**type**\:  bool
                                    
                                    .. attribute:: bk_tos_mask
                                    
                                    	bk tos mask
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: bkup_if_hdl
                                    
                                    	bkup if hdl
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: bkup_if_node_id
                                    
                                    	bkup if node id
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: flags
                                    
                                    	flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: if_hdl
                                    
                                    	if hdl
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: if_node_id
                                    
                                    	if node id
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: mcast_id
                                    
                                    	mcast id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: my_node_id
                                    
                                    	my node id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: pd_ts_ms
                                    
                                    	pd ts ms
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: pri_tos_mask
                                    
                                    	pri tos mask
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: primary_is_local
                                    
                                    	primary is local
                                    	**type**\:  bool
                                    
                                    .. attribute:: via_label
                                    
                                    	via label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_is_local = None
                                        self.bk_tos_mask = None
                                        self.bkup_if_hdl = YLeafList()
                                        self.bkup_if_hdl.parent = self
                                        self.bkup_if_hdl.name = 'bkup_if_hdl'
                                        self.bkup_if_node_id = YLeafList()
                                        self.bkup_if_node_id.parent = self
                                        self.bkup_if_node_id.name = 'bkup_if_node_id'
                                        self.flags = None
                                        self.if_hdl = YLeafList()
                                        self.if_hdl.parent = self
                                        self.if_hdl.name = 'if_hdl'
                                        self.if_node_id = YLeafList()
                                        self.if_node_id.parent = self
                                        self.if_node_id.name = 'if_node_id'
                                        self.mcast_id = None
                                        self.my_node_id = None
                                        self.pd_ts_ms = None
                                        self.pri_tos_mask = None
                                        self.primary_is_local = None
                                        self.via_label = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mpi-info'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_is_local is not None:
                                            return True

                                        if self.bk_tos_mask is not None:
                                            return True

                                        if self.bkup_if_hdl is not None:
                                            for child in self.bkup_if_hdl:
                                                if child is not None:
                                                    return True

                                        if self.bkup_if_node_id is not None:
                                            for child in self.bkup_if_node_id:
                                                if child is not None:
                                                    return True

                                        if self.flags is not None:
                                            return True

                                        if self.if_hdl is not None:
                                            for child in self.if_hdl:
                                                if child is not None:
                                                    return True

                                        if self.if_node_id is not None:
                                            for child in self.if_node_id:
                                                if child is not None:
                                                    return True

                                        if self.mcast_id is not None:
                                            return True

                                        if self.my_node_id is not None:
                                            return True

                                        if self.pd_ts_ms is not None:
                                            return True

                                        if self.pri_tos_mask is not None:
                                            return True

                                        if self.primary_is_local is not None:
                                            return True

                                        if self.via_label is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation.FibMplsAdjInfo.MpiInfo']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-mpls-adj-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.app_id is not None:
                                        return True

                                    if self.backup_path_index is not None:
                                        return True

                                    if self.frr_nh_ptr is not None:
                                        return True

                                    if self.is_frr_active is not None:
                                        return True

                                    if self.is_pure_backup is not None:
                                        return True

                                    if self.is_srte is not None:
                                        return True

                                    if self.label_bridge_domain_id is not None:
                                        return True

                                    if self.label_information_detail is not None and self.label_information_detail._has_data():
                                        return True

                                    if self.label_information_encap_id is not None:
                                        return True

                                    if self.label_information_next_hop_protocol is not None:
                                        return True

                                    if self.label_information_next_hop_string is not None:
                                        return True

                                    if self.label_information_next_hop_table_id is not None:
                                        return True

                                    if self.label_information_next_hop_type is not None:
                                        return True

                                    if self.label_information_path_index is not None:
                                        return True

                                    if self.label_information_route_version is not None:
                                        return True

                                    if self.label_information_time_in_milli_seconds is not None:
                                        return True

                                    if self.label_information_type is not None:
                                        return True

                                    if self.label_pw_xid is not None:
                                        return True

                                    if self.label_shg_id is not None:
                                        return True

                                    if self.label_xid is not None:
                                        return True

                                    if self.li_pointer is not None:
                                        return True

                                    if self.li_reference_count is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.mpi_info is not None and self.mpi_info._has_data():
                                        return True

                                    if self.mpls_adjacency_flags is not None:
                                        return True

                                    if self.nhid is not None:
                                        return True

                                    if self.outgoing_interface is not None:
                                        return True

                                    if self.outgoing_label is not None:
                                        return True

                                    if self.outgoing_physical_interface is not None:
                                        return True

                                    if self.path_flags is not None:
                                        return True

                                    if self.path_index is not None:
                                        return True

                                    if self.pq_flags is not None:
                                        return True

                                    if self.pq_label is not None:
                                        return True

                                    if self.pwhe_interface is not None:
                                        return True

                                    if self.pwhecw_enabled is not None:
                                        return True

                                    if self.pwhev_ctype is not None:
                                        return True

                                    if self.sli_from_ldi is not None:
                                        return True

                                    if self.tunnel_id_present is not None:
                                        return True

                                    if self.tunnel_interface_name is not None:
                                        return True

                                    if self.weight is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation.FibMplsAdjInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.fib_mpls_adj_info is not None:
                                    for child_ref in self.fib_mpls_adj_info:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LabelInformation']['meta_info']


                        class LdiInformation(object):
                            """
                            LDI\-info in FIB leaf
                            
                            .. attribute:: ldi_hardware_information
                            
                            	Hardware info
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.ldi_hardware_information = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ldi-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.ldi_hardware_information is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.LdiInformation']['meta_info']


                        class MulticastInformation(object):
                            """
                            The multicast info
                            
                            .. attribute:: dependent_tunnel_ifh
                            
                            	The interface handle of a dependent tunnel 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: dependent_tunnel_local_label
                            
                            	The Local Label of a dependant Tunnel 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: label_bridge_domain_id
                            
                            	Bridge domain\-ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: label_shg_id
                            
                            	The SHG\-ID of PW
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: label_xid
                            
                            	The XID of PW
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_encap_id
                            
                            	The multicast ENCAP\-ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_mol_base_flags
                            
                            	MOL base flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_mol_flags
                            
                            	MOL flags
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mol_reference_count
                            
                            	MOL reference count
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_local_output_paths
                            
                            	num multicast mpls local output paths
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_output_paths
                            
                            	num multicast mpls output paths 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_protocol_output_paths
                            
                            	num multicast mpls prot output paths 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_platform_data
                            
                            	The multicast platform data
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: multicast_platform_data_length
                            
                            	The multicast platform data len
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: multicast_rpf_id
                            
                            	The multicast RPF\-ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_id
                            
                            	multicast mpls P2MP\-TE tunnel id or MLDP Tunnel LSMID on all nodes
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_interface_name
                            
                            	multicast mpls tunnel ifh
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: multicast_tunnel_lspvif
                            
                            	multicast LSPVIF for MLDP Tunnels
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_next_hop_information
                            
                            	multicast nhinfo for p2mp TE Head
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_v4_table_id
                            
                            	The multicast IPv4 Table id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_v6_table_id
                            
                            	The multicast IPv6 Table id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dependent_tunnel_ifh = None
                                self.dependent_tunnel_local_label = None
                                self.label_bridge_domain_id = None
                                self.label_shg_id = None
                                self.label_xid = None
                                self.multicast_encap_id = None
                                self.multicast_mol_base_flags = None
                                self.multicast_mol_flags = None
                                self.multicast_mol_reference_count = None
                                self.multicast_mpls_local_output_paths = None
                                self.multicast_mpls_output_paths = None
                                self.multicast_mpls_protocol_output_paths = None
                                self.multicast_platform_data = None
                                self.multicast_platform_data_length = None
                                self.multicast_rpf_id = None
                                self.multicast_tunnel_id = None
                                self.multicast_tunnel_interface_name = None
                                self.multicast_tunnel_lspvif = None
                                self.multicast_tunnel_next_hop_information = None
                                self.multicast_v4_table_id = None
                                self.multicast_v6_table_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:multicast-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dependent_tunnel_ifh is not None:
                                    return True

                                if self.dependent_tunnel_local_label is not None:
                                    return True

                                if self.label_bridge_domain_id is not None:
                                    return True

                                if self.label_shg_id is not None:
                                    return True

                                if self.label_xid is not None:
                                    return True

                                if self.multicast_encap_id is not None:
                                    return True

                                if self.multicast_mol_base_flags is not None:
                                    return True

                                if self.multicast_mol_flags is not None:
                                    return True

                                if self.multicast_mol_reference_count is not None:
                                    return True

                                if self.multicast_mpls_local_output_paths is not None:
                                    return True

                                if self.multicast_mpls_output_paths is not None:
                                    return True

                                if self.multicast_mpls_protocol_output_paths is not None:
                                    return True

                                if self.multicast_platform_data is not None:
                                    return True

                                if self.multicast_platform_data_length is not None:
                                    return True

                                if self.multicast_rpf_id is not None:
                                    return True

                                if self.multicast_tunnel_id is not None:
                                    return True

                                if self.multicast_tunnel_interface_name is not None:
                                    return True

                                if self.multicast_tunnel_lspvif is not None:
                                    return True

                                if self.multicast_tunnel_next_hop_information is not None:
                                    return True

                                if self.multicast_v4_table_id is not None:
                                    return True

                                if self.multicast_v6_table_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.MulticastInformation']['meta_info']


                        class Rpf(object):
                            """
                            RPF info
                            
                            .. attribute:: rpf_create_ts
                            
                            	Time when the LRPF was created
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: rpf_flags
                            
                            	RPF flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: rpf_hardware
                            
                            	Platform Hardware info
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: rpf_if
                            
                            	Array of interfaces in interface list
                            	**type**\:  list of str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: rpf_if_map
                            
                            	Array of nbr/interface mapping
                            	**type**\: list of  :py:class:`RpfIfMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf.RpfIfMap>`
                            
                            .. attribute:: rpf_mod_ts
                            
                            	Last time the LRPF modified
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: rpf_pd_ts
                            
                            	Last time the PD action was sent for the LRPF
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: rpf_pl_flags
                            
                            	RPF pathlist flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: rpf_v4_nbr
                            
                            	Array of V4 neighbours
                            	**type**\: list of  :py:class:`RpfV4Nbr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf.RpfV4Nbr>`
                            
                            .. attribute:: rpf_v6_nbr
                            
                            	Array of V6 neighbours
                            	**type**\: list of  :py:class:`RpfV6Nbr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf.RpfV6Nbr>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.rpf_create_ts = None
                                self.rpf_flags = None
                                self.rpf_hardware = None
                                self.rpf_if = YLeafList()
                                self.rpf_if.parent = self
                                self.rpf_if.name = 'rpf_if'
                                self.rpf_if_map = YList()
                                self.rpf_if_map.parent = self
                                self.rpf_if_map.name = 'rpf_if_map'
                                self.rpf_mod_ts = None
                                self.rpf_pd_ts = None
                                self.rpf_pl_flags = None
                                self.rpf_v4_nbr = YList()
                                self.rpf_v4_nbr.parent = self
                                self.rpf_v4_nbr.name = 'rpf_v4_nbr'
                                self.rpf_v6_nbr = YList()
                                self.rpf_v6_nbr.parent = self
                                self.rpf_v6_nbr.name = 'rpf_v6_nbr'


                            class RpfV4Nbr(object):
                                """
                                Array of V4 neighbours
                                
                                .. attribute:: rpf_tbl_id
                                
                                	rpf tbl id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: rpf_v4_addr
                                
                                	rpf v4 addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.rpf_tbl_id = None
                                    self.rpf_v4_addr = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-v4-nbr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.rpf_tbl_id is not None:
                                        return True

                                    if self.rpf_v4_addr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf.RpfV4Nbr']['meta_info']


                            class RpfV6Nbr(object):
                                """
                                Array of V6 neighbours
                                
                                .. attribute:: rpf_tbl_id
                                
                                	rpf tbl id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: rpf_v6_addr
                                
                                	rpf v6 addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.rpf_tbl_id = None
                                    self.rpf_v6_addr = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-v6-nbr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.rpf_tbl_id is not None:
                                        return True

                                    if self.rpf_v6_addr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf.RpfV6Nbr']['meta_info']


                            class RpfIfMap(object):
                                """
                                Array of nbr/interface mapping
                                
                                .. attribute:: rpf_ifh
                                
                                	rpf ifh
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: rpf_path_index
                                
                                	rpf path index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.rpf_ifh = None
                                    self.rpf_path_index = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-if-map'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.rpf_ifh is not None:
                                        return True

                                    if self.rpf_path_index is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf.RpfIfMap']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.rpf_create_ts is not None:
                                    return True

                                if self.rpf_flags is not None:
                                    return True

                                if self.rpf_hardware is not None:
                                    return True

                                if self.rpf_if is not None:
                                    for child in self.rpf_if:
                                        if child is not None:
                                            return True

                                if self.rpf_if_map is not None:
                                    for child_ref in self.rpf_if_map:
                                        if child_ref._has_data():
                                            return True

                                if self.rpf_mod_ts is not None:
                                    return True

                                if self.rpf_pd_ts is not None:
                                    return True

                                if self.rpf_pl_flags is not None:
                                    return True

                                if self.rpf_v4_nbr is not None:
                                    for child_ref in self.rpf_v4_nbr:
                                        if child_ref._has_data():
                                            return True

                                if self.rpf_v6_nbr is not None:
                                    for child_ref in self.rpf_v6_nbr:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding.Rpf']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.afi_table_id is not None:
                                return True

                            if self.eos is not None:
                                return True

                            if self.eos_bit is not None:
                                return True

                            if self.hardware_information is not None:
                                return True

                            if self.label_information is not None and self.label_information._has_data():
                                return True

                            if self.ldi_flags is not None:
                                return True

                            if self.ldi_information is not None and self.ldi_information._has_data():
                                return True

                            if self.ldi_pointer is not None:
                                return True

                            if self.ldi_reference_count is not None:
                                return True

                            if self.ldi_time_of_last_update_in_msec is not None:
                                return True

                            if self.ldi_type is not None:
                                return True

                            if self.leaf_flags is not None:
                                return True

                            if self.leaf_local_label is not None:
                                return True

                            if self.leaf_ptr is not None:
                                return True

                            if self.leaf_reference_count is not None:
                                return True

                            if self.leaf_time_in_milli_seconds is not None:
                                return True

                            if self.local_label is not None:
                                return True

                            if self.lspa_flags is not None:
                                return True

                            if self.lspa_time_of_last_update_in_msec is not None:
                                return True

                            if self.lw_ldi_pointer is not None:
                                return True

                            if self.lw_ldi_reference_count is not None:
                                return True

                            if self.lw_ldi_type is not None:
                                return True

                            if self.lw_shared_ldi_pointer is not None:
                                return True

                            if self.lwldi_time_of_last_update_in_msec is not None:
                                return True

                            if self.multicast_information is not None and self.multicast_information._has_data():
                                return True

                            if self.multicast_label is not None:
                                return True

                            if self.path_list_flags is not None:
                                return True

                            if self.path_list_ldi_mask is not None:
                                return True

                            if self.path_list_pointer is not None:
                                return True

                            if self.path_list_reference_count is not None:
                                return True

                            if self.pl_time_of_last_update_in_msec is not None:
                                return True

                            if self.pl_time_stamp_type is not None:
                                return True

                            if self.pwhe_interface_list_id is not None:
                                return True

                            if self.pwhe_interface_list_ptr is not None:
                                return True

                            if self.rpf is not None and self.rpf._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings.Forwarding']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwardings'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.forwarding is not None:
                            for child_ref in self.forwarding:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.LabelFib.Forwardings']['meta_info']


                class ForwardingDetails(object):
                    """
                    MPLS Forwarding Detail table
                    
                    .. attribute:: forwarding_detail
                    
                    	FIB MPLS forwarding details
                    	**type**\: list of  :py:class:`ForwardingDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.forwarding_detail = YList()
                        self.forwarding_detail.parent = self
                        self.forwarding_detail.name = 'forwarding_detail'


                    class ForwardingDetail(object):
                        """
                        FIB MPLS forwarding details
                        
                        .. attribute:: afi_table_id
                        
                        	The AFI table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: eos
                        
                        	End of stack flag
                        	**type**\:  :py:class:`EosEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.EosEnum>`
                        
                        .. attribute:: eos_bit
                        
                        	EOS bit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: hardware_information
                        
                        	Hardware info
                        	**type**\:  str
                        
                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                        
                        .. attribute:: label_information
                        
                        	Label\-info in FIB leaf
                        	**type**\:  :py:class:`LabelInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation>`
                        
                        .. attribute:: ldi_flags
                        
                        	The LDI flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_information
                        
                        	LDI\-info in FIB leaf
                        	**type**\:  :py:class:`LdiInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LdiInformation>`
                        
                        .. attribute:: ldi_pointer
                        
                        	The pointer to the LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_reference_count
                        
                        	Number of references to the LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ldi_time_of_last_update_in_msec
                        
                        	The time of last update for LDI in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: ldi_type
                        
                        	The LDI type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_flags
                        
                        	The leaf flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_local_label
                        
                        	Local label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_ptr
                        
                        	The Leaf pointer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_reference_count
                        
                        	Number of references to the leaf
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: leaf_time_in_milli_seconds
                        
                        	The time of last update in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: local_label
                        
                        	Local label value
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: lspa_flags
                        
                        	The LSPA flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lspa_time_of_last_update_in_msec
                        
                        	The time of last update for LSPA in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: lw_ldi_pointer
                        
                        	The pointer to the LW\-LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_reference_count
                        
                        	The LW\-LDI refcounter
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_ldi_type
                        
                        	The LW\-LDI type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lw_shared_ldi_pointer
                        
                        	The pointer to the shared LDI in LW\-LDI
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lwldi_time_of_last_update_in_msec
                        
                        	The time of last update for LW\-LDI in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: multicast_information
                        
                        	The multicast info
                        	**type**\:  :py:class:`MulticastInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.MulticastInformation>`
                        
                        .. attribute:: multicast_label
                        
                        	The unicast or multicast label
                        	**type**\:  bool
                        
                        .. attribute:: path_list_flags
                        
                        	The pathlist flags
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: path_list_ldi_mask
                        
                        	The pathlist ldi mask
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: path_list_pointer
                        
                        	The pointer to the pathlist
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: path_list_reference_count
                        
                        	Number of references to the pathlist
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pl_time_of_last_update_in_msec
                        
                        	The time of last update for PL in msec
                        	**type**\:  long
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: pl_time_stamp_type
                        
                        	The type of time\-stamp on PL
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pwhe_interface_list_id
                        
                        	Interface list associated with PW\-HE VC imposition label
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: pwhe_interface_list_ptr
                        
                        	Interface list ptr
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: rpf
                        
                        	RPF info
                        	**type**\:  :py:class:`Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf>`
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.afi_table_id = None
                            self.eos = None
                            self.eos_bit = None
                            self.hardware_information = None
                            self.label_information = FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation()
                            self.label_information.parent = self
                            self.ldi_flags = None
                            self.ldi_information = FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LdiInformation()
                            self.ldi_information.parent = self
                            self.ldi_pointer = None
                            self.ldi_reference_count = None
                            self.ldi_time_of_last_update_in_msec = None
                            self.ldi_type = None
                            self.leaf_flags = None
                            self.leaf_local_label = None
                            self.leaf_ptr = None
                            self.leaf_reference_count = None
                            self.leaf_time_in_milli_seconds = None
                            self.local_label = None
                            self.lspa_flags = None
                            self.lspa_time_of_last_update_in_msec = None
                            self.lw_ldi_pointer = None
                            self.lw_ldi_reference_count = None
                            self.lw_ldi_type = None
                            self.lw_shared_ldi_pointer = None
                            self.lwldi_time_of_last_update_in_msec = None
                            self.multicast_information = FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.MulticastInformation()
                            self.multicast_information.parent = self
                            self.multicast_label = None
                            self.path_list_flags = None
                            self.path_list_ldi_mask = None
                            self.path_list_pointer = None
                            self.path_list_reference_count = None
                            self.pl_time_of_last_update_in_msec = None
                            self.pl_time_stamp_type = None
                            self.pwhe_interface_list_id = None
                            self.pwhe_interface_list_ptr = None
                            self.rpf = FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf()
                            self.rpf.parent = self


                        class LabelInformation(object):
                            """
                            Label\-info in FIB leaf
                            
                            .. attribute:: fib_mpls_adj_info
                            
                            	fib mpls adj info
                            	**type**\: list of  :py:class:`FibMplsAdjInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.FibMplsAdjInfo>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.fib_mpls_adj_info = YList()
                                self.fib_mpls_adj_info.parent = self
                                self.fib_mpls_adj_info.name = 'fib_mpls_adj_info'


                            class FibMplsAdjInfo(object):
                                """
                                fib mpls adj info
                                
                                .. attribute:: app_id
                                
                                	App ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: backup_path_index
                                
                                	backup path index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: frr_nh_ptr
                                
                                	FRR next\-hop object pointer
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: is_frr_active
                                
                                	Is FRR active?
                                	**type**\:  bool
                                
                                .. attribute:: is_pure_backup
                                
                                	Is pure backup path?
                                	**type**\:  bool
                                
                                .. attribute:: is_srte
                                
                                	Is SRTE?
                                	**type**\:  bool
                                
                                .. attribute:: label_bridge_domain_id
                                
                                	Bridge domain\-ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_detail
                                
                                	Detail label info
                                	**type**\:  :py:class:`LabelInformationDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.FibMplsAdjInfo.LabelInformationDetail>`
                                
                                .. attribute:: label_information_encap_id
                                
                                	Encap ID
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_next_hop_protocol
                                
                                	The address family (v4/v6) 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_next_hop_string
                                
                                	Next hop address in string format
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: label_information_next_hop_table_id
                                
                                	NHinfo Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_next_hop_type
                                
                                	NHinfo Type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_path_index
                                
                                	LabelInformationPathIndex
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_information_route_version
                                
                                	The version of the route
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_time_in_milli_seconds
                                
                                	The time of last update in msec
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: label_information_type
                                
                                	Label\-Info type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_pw_xid
                                
                                	The XID of PW
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_shg_id
                                
                                	The SHG\-ID of PW
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_xid
                                
                                	The XID of Xconnect
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: li_pointer
                                
                                	The pointer to the LI object
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: li_reference_count
                                
                                	The LI object refcounter
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: mpi_info
                                
                                	The MPI info
                                	**type**\:  :py:class:`MpiInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.FibMplsAdjInfo.MpiInfo>`
                                
                                .. attribute:: mpls_adjacency_flags
                                
                                	MPLS Adjacency flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: nhid
                                
                                	Path's NH Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_interface
                                
                                	Outgoing interface
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: outgoing_physical_interface
                                
                                	Outgoing Physical Interface
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags
                                
                                	PL path flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_index
                                
                                	path index
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: pq_flags
                                
                                	PQ flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pq_label
                                
                                	PQ label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pwhe_interface
                                
                                	PW\-HE interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: pwhecw_enabled
                                
                                	PW\-HE CW setting
                                	**type**\:  bool
                                
                                .. attribute:: pwhev_ctype
                                
                                	PW\-HE VC type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sli_from_ldi
                                
                                	Path learnt the LDI/used for Forwarding?
                                	**type**\:  bool
                                
                                .. attribute:: tunnel_id_present
                                
                                	Tunnel id present?
                                	**type**\:  bool
                                
                                .. attribute:: tunnel_interface_name
                                
                                	Tunnel Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: weight
                                
                                	Weight or load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.app_id = None
                                    self.backup_path_index = None
                                    self.frr_nh_ptr = None
                                    self.is_frr_active = None
                                    self.is_pure_backup = None
                                    self.is_srte = None
                                    self.label_bridge_domain_id = None
                                    self.label_information_detail = FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.FibMplsAdjInfo.LabelInformationDetail()
                                    self.label_information_detail.parent = self
                                    self.label_information_encap_id = None
                                    self.label_information_next_hop_protocol = None
                                    self.label_information_next_hop_string = None
                                    self.label_information_next_hop_table_id = None
                                    self.label_information_next_hop_type = None
                                    self.label_information_path_index = None
                                    self.label_information_route_version = None
                                    self.label_information_time_in_milli_seconds = None
                                    self.label_information_type = None
                                    self.label_pw_xid = None
                                    self.label_shg_id = None
                                    self.label_xid = None
                                    self.li_pointer = None
                                    self.li_reference_count = None
                                    self.local_label = None
                                    self.mpi_info = FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.FibMplsAdjInfo.MpiInfo()
                                    self.mpi_info.parent = self
                                    self.mpls_adjacency_flags = None
                                    self.nhid = None
                                    self.outgoing_interface = None
                                    self.outgoing_label = None
                                    self.outgoing_physical_interface = None
                                    self.path_flags = None
                                    self.path_index = None
                                    self.pq_flags = None
                                    self.pq_label = None
                                    self.pwhe_interface = None
                                    self.pwhecw_enabled = None
                                    self.pwhev_ctype = None
                                    self.sli_from_ldi = None
                                    self.tunnel_id_present = None
                                    self.tunnel_interface_name = None
                                    self.weight = None


                                class LabelInformationDetail(object):
                                    """
                                    Detail label info
                                    
                                    .. attribute:: l3_mtu
                                    
                                    	L3 MTU
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_stack
                                    
                                    	Label stack
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: mac_size
                                    
                                    	Length of L2 encapsulation
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_interface_name
                                    
                                    	Next hop interface name
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: next_hop_protocol
                                    
                                    	The address family (V4/V6) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_string
                                    
                                    	Next hop address in string format
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: nh_id
                                    
                                    	Nexthop Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: route_download_priority
                                    
                                    	Priority at which the label was downloaded
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: route_download_version
                                    
                                    	Version of the route\-download for the label
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: status
                                    
                                    	Status
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: total_encapsulation_size
                                    
                                    	Total encapsulation size\: L2 + MPLS
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: transmit_number_of_bytes_switched
                                    
                                    	Number of Bytes switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: transmit_number_of_packets_switched
                                    
                                    	Number of packets switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: transmit_number_of_tm_bytes_switched
                                    
                                    	Number of Traffic\-Matrix Bytes switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: transmit_number_of_tm_packets_switched
                                    
                                    	Number of Traffic\-Matrix packets switched
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: version_priority_valid
                                    
                                    	Indicates if the version/priority fields are valid
                                    	**type**\:  bool
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.l3_mtu = None
                                        self.label_stack = YLeafList()
                                        self.label_stack.parent = self
                                        self.label_stack.name = 'label_stack'
                                        self.mac_size = None
                                        self.next_hop_interface_name = None
                                        self.next_hop_protocol = None
                                        self.next_hop_string = None
                                        self.nh_id = None
                                        self.route_download_priority = None
                                        self.route_download_version = None
                                        self.status = None
                                        self.total_encapsulation_size = None
                                        self.transmit_number_of_bytes_switched = None
                                        self.transmit_number_of_packets_switched = None
                                        self.transmit_number_of_tm_bytes_switched = None
                                        self.transmit_number_of_tm_packets_switched = None
                                        self.version_priority_valid = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information-detail'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.l3_mtu is not None:
                                            return True

                                        if self.label_stack is not None:
                                            for child in self.label_stack:
                                                if child is not None:
                                                    return True

                                        if self.mac_size is not None:
                                            return True

                                        if self.next_hop_interface_name is not None:
                                            return True

                                        if self.next_hop_protocol is not None:
                                            return True

                                        if self.next_hop_string is not None:
                                            return True

                                        if self.nh_id is not None:
                                            return True

                                        if self.route_download_priority is not None:
                                            return True

                                        if self.route_download_version is not None:
                                            return True

                                        if self.status is not None:
                                            return True

                                        if self.total_encapsulation_size is not None:
                                            return True

                                        if self.transmit_number_of_bytes_switched is not None:
                                            return True

                                        if self.transmit_number_of_packets_switched is not None:
                                            return True

                                        if self.transmit_number_of_tm_bytes_switched is not None:
                                            return True

                                        if self.transmit_number_of_tm_packets_switched is not None:
                                            return True

                                        if self.version_priority_valid is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.FibMplsAdjInfo.LabelInformationDetail']['meta_info']


                                class MpiInfo(object):
                                    """
                                    The MPI info
                                    
                                    .. attribute:: backup_is_local
                                    
                                    	backup is local
                                    	**type**\:  bool
                                    
                                    .. attribute:: bk_tos_mask
                                    
                                    	bk tos mask
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: bkup_if_hdl
                                    
                                    	bkup if hdl
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: bkup_if_node_id
                                    
                                    	bkup if node id
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: flags
                                    
                                    	flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: if_hdl
                                    
                                    	if hdl
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: if_node_id
                                    
                                    	if node id
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: mcast_id
                                    
                                    	mcast id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: my_node_id
                                    
                                    	my node id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: pd_ts_ms
                                    
                                    	pd ts ms
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: pri_tos_mask
                                    
                                    	pri tos mask
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: primary_is_local
                                    
                                    	primary is local
                                    	**type**\:  bool
                                    
                                    .. attribute:: via_label
                                    
                                    	via label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_is_local = None
                                        self.bk_tos_mask = None
                                        self.bkup_if_hdl = YLeafList()
                                        self.bkup_if_hdl.parent = self
                                        self.bkup_if_hdl.name = 'bkup_if_hdl'
                                        self.bkup_if_node_id = YLeafList()
                                        self.bkup_if_node_id.parent = self
                                        self.bkup_if_node_id.name = 'bkup_if_node_id'
                                        self.flags = None
                                        self.if_hdl = YLeafList()
                                        self.if_hdl.parent = self
                                        self.if_hdl.name = 'if_hdl'
                                        self.if_node_id = YLeafList()
                                        self.if_node_id.parent = self
                                        self.if_node_id.name = 'if_node_id'
                                        self.mcast_id = None
                                        self.my_node_id = None
                                        self.pd_ts_ms = None
                                        self.pri_tos_mask = None
                                        self.primary_is_local = None
                                        self.via_label = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mpi-info'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_is_local is not None:
                                            return True

                                        if self.bk_tos_mask is not None:
                                            return True

                                        if self.bkup_if_hdl is not None:
                                            for child in self.bkup_if_hdl:
                                                if child is not None:
                                                    return True

                                        if self.bkup_if_node_id is not None:
                                            for child in self.bkup_if_node_id:
                                                if child is not None:
                                                    return True

                                        if self.flags is not None:
                                            return True

                                        if self.if_hdl is not None:
                                            for child in self.if_hdl:
                                                if child is not None:
                                                    return True

                                        if self.if_node_id is not None:
                                            for child in self.if_node_id:
                                                if child is not None:
                                                    return True

                                        if self.mcast_id is not None:
                                            return True

                                        if self.my_node_id is not None:
                                            return True

                                        if self.pd_ts_ms is not None:
                                            return True

                                        if self.pri_tos_mask is not None:
                                            return True

                                        if self.primary_is_local is not None:
                                            return True

                                        if self.via_label is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.FibMplsAdjInfo.MpiInfo']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-mpls-adj-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.app_id is not None:
                                        return True

                                    if self.backup_path_index is not None:
                                        return True

                                    if self.frr_nh_ptr is not None:
                                        return True

                                    if self.is_frr_active is not None:
                                        return True

                                    if self.is_pure_backup is not None:
                                        return True

                                    if self.is_srte is not None:
                                        return True

                                    if self.label_bridge_domain_id is not None:
                                        return True

                                    if self.label_information_detail is not None and self.label_information_detail._has_data():
                                        return True

                                    if self.label_information_encap_id is not None:
                                        return True

                                    if self.label_information_next_hop_protocol is not None:
                                        return True

                                    if self.label_information_next_hop_string is not None:
                                        return True

                                    if self.label_information_next_hop_table_id is not None:
                                        return True

                                    if self.label_information_next_hop_type is not None:
                                        return True

                                    if self.label_information_path_index is not None:
                                        return True

                                    if self.label_information_route_version is not None:
                                        return True

                                    if self.label_information_time_in_milli_seconds is not None:
                                        return True

                                    if self.label_information_type is not None:
                                        return True

                                    if self.label_pw_xid is not None:
                                        return True

                                    if self.label_shg_id is not None:
                                        return True

                                    if self.label_xid is not None:
                                        return True

                                    if self.li_pointer is not None:
                                        return True

                                    if self.li_reference_count is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.mpi_info is not None and self.mpi_info._has_data():
                                        return True

                                    if self.mpls_adjacency_flags is not None:
                                        return True

                                    if self.nhid is not None:
                                        return True

                                    if self.outgoing_interface is not None:
                                        return True

                                    if self.outgoing_label is not None:
                                        return True

                                    if self.outgoing_physical_interface is not None:
                                        return True

                                    if self.path_flags is not None:
                                        return True

                                    if self.path_index is not None:
                                        return True

                                    if self.pq_flags is not None:
                                        return True

                                    if self.pq_label is not None:
                                        return True

                                    if self.pwhe_interface is not None:
                                        return True

                                    if self.pwhecw_enabled is not None:
                                        return True

                                    if self.pwhev_ctype is not None:
                                        return True

                                    if self.sli_from_ldi is not None:
                                        return True

                                    if self.tunnel_id_present is not None:
                                        return True

                                    if self.tunnel_interface_name is not None:
                                        return True

                                    if self.weight is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation.FibMplsAdjInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.fib_mpls_adj_info is not None:
                                    for child_ref in self.fib_mpls_adj_info:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LabelInformation']['meta_info']


                        class LdiInformation(object):
                            """
                            LDI\-info in FIB leaf
                            
                            .. attribute:: ldi_hardware_information
                            
                            	Hardware info
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.ldi_hardware_information = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ldi-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.ldi_hardware_information is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.LdiInformation']['meta_info']


                        class MulticastInformation(object):
                            """
                            The multicast info
                            
                            .. attribute:: dependent_tunnel_ifh
                            
                            	The interface handle of a dependent tunnel 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: dependent_tunnel_local_label
                            
                            	The Local Label of a dependant Tunnel 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: label_bridge_domain_id
                            
                            	Bridge domain\-ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: label_shg_id
                            
                            	The SHG\-ID of PW
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: label_xid
                            
                            	The XID of PW
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_encap_id
                            
                            	The multicast ENCAP\-ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_mol_base_flags
                            
                            	MOL base flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_mol_flags
                            
                            	MOL flags
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mol_reference_count
                            
                            	MOL reference count
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_local_output_paths
                            
                            	num multicast mpls local output paths
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_output_paths
                            
                            	num multicast mpls output paths 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_mpls_protocol_output_paths
                            
                            	num multicast mpls prot output paths 
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: multicast_platform_data
                            
                            	The multicast platform data
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: multicast_platform_data_length
                            
                            	The multicast platform data len
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: multicast_rpf_id
                            
                            	The multicast RPF\-ID 
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_id
                            
                            	multicast mpls P2MP\-TE tunnel id or MLDP Tunnel LSMID on all nodes
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_interface_name
                            
                            	multicast mpls tunnel ifh
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: multicast_tunnel_lspvif
                            
                            	multicast LSPVIF for MLDP Tunnels
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_tunnel_next_hop_information
                            
                            	multicast nhinfo for p2mp TE Head
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_v4_table_id
                            
                            	The multicast IPv4 Table id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: multicast_v6_table_id
                            
                            	The multicast IPv6 Table id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dependent_tunnel_ifh = None
                                self.dependent_tunnel_local_label = None
                                self.label_bridge_domain_id = None
                                self.label_shg_id = None
                                self.label_xid = None
                                self.multicast_encap_id = None
                                self.multicast_mol_base_flags = None
                                self.multicast_mol_flags = None
                                self.multicast_mol_reference_count = None
                                self.multicast_mpls_local_output_paths = None
                                self.multicast_mpls_output_paths = None
                                self.multicast_mpls_protocol_output_paths = None
                                self.multicast_platform_data = None
                                self.multicast_platform_data_length = None
                                self.multicast_rpf_id = None
                                self.multicast_tunnel_id = None
                                self.multicast_tunnel_interface_name = None
                                self.multicast_tunnel_lspvif = None
                                self.multicast_tunnel_next_hop_information = None
                                self.multicast_v4_table_id = None
                                self.multicast_v6_table_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:multicast-information'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dependent_tunnel_ifh is not None:
                                    return True

                                if self.dependent_tunnel_local_label is not None:
                                    return True

                                if self.label_bridge_domain_id is not None:
                                    return True

                                if self.label_shg_id is not None:
                                    return True

                                if self.label_xid is not None:
                                    return True

                                if self.multicast_encap_id is not None:
                                    return True

                                if self.multicast_mol_base_flags is not None:
                                    return True

                                if self.multicast_mol_flags is not None:
                                    return True

                                if self.multicast_mol_reference_count is not None:
                                    return True

                                if self.multicast_mpls_local_output_paths is not None:
                                    return True

                                if self.multicast_mpls_output_paths is not None:
                                    return True

                                if self.multicast_mpls_protocol_output_paths is not None:
                                    return True

                                if self.multicast_platform_data is not None:
                                    return True

                                if self.multicast_platform_data_length is not None:
                                    return True

                                if self.multicast_rpf_id is not None:
                                    return True

                                if self.multicast_tunnel_id is not None:
                                    return True

                                if self.multicast_tunnel_interface_name is not None:
                                    return True

                                if self.multicast_tunnel_lspvif is not None:
                                    return True

                                if self.multicast_tunnel_next_hop_information is not None:
                                    return True

                                if self.multicast_v4_table_id is not None:
                                    return True

                                if self.multicast_v6_table_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.MulticastInformation']['meta_info']


                        class Rpf(object):
                            """
                            RPF info
                            
                            .. attribute:: rpf_create_ts
                            
                            	Time when the LRPF was created
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: rpf_flags
                            
                            	RPF flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: rpf_hardware
                            
                            	Platform Hardware info
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: rpf_if
                            
                            	Array of interfaces in interface list
                            	**type**\:  list of str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: rpf_if_map
                            
                            	Array of nbr/interface mapping
                            	**type**\: list of  :py:class:`RpfIfMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf.RpfIfMap>`
                            
                            .. attribute:: rpf_mod_ts
                            
                            	Last time the LRPF modified
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: rpf_pd_ts
                            
                            	Last time the PD action was sent for the LRPF
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: rpf_pl_flags
                            
                            	RPF pathlist flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: rpf_v4_nbr
                            
                            	Array of V4 neighbours
                            	**type**\: list of  :py:class:`RpfV4Nbr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf.RpfV4Nbr>`
                            
                            .. attribute:: rpf_v6_nbr
                            
                            	Array of V6 neighbours
                            	**type**\: list of  :py:class:`RpfV6Nbr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf.RpfV6Nbr>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.rpf_create_ts = None
                                self.rpf_flags = None
                                self.rpf_hardware = None
                                self.rpf_if = YLeafList()
                                self.rpf_if.parent = self
                                self.rpf_if.name = 'rpf_if'
                                self.rpf_if_map = YList()
                                self.rpf_if_map.parent = self
                                self.rpf_if_map.name = 'rpf_if_map'
                                self.rpf_mod_ts = None
                                self.rpf_pd_ts = None
                                self.rpf_pl_flags = None
                                self.rpf_v4_nbr = YList()
                                self.rpf_v4_nbr.parent = self
                                self.rpf_v4_nbr.name = 'rpf_v4_nbr'
                                self.rpf_v6_nbr = YList()
                                self.rpf_v6_nbr.parent = self
                                self.rpf_v6_nbr.name = 'rpf_v6_nbr'


                            class RpfV4Nbr(object):
                                """
                                Array of V4 neighbours
                                
                                .. attribute:: rpf_tbl_id
                                
                                	rpf tbl id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: rpf_v4_addr
                                
                                	rpf v4 addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.rpf_tbl_id = None
                                    self.rpf_v4_addr = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-v4-nbr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.rpf_tbl_id is not None:
                                        return True

                                    if self.rpf_v4_addr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf.RpfV4Nbr']['meta_info']


                            class RpfV6Nbr(object):
                                """
                                Array of V6 neighbours
                                
                                .. attribute:: rpf_tbl_id
                                
                                	rpf tbl id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: rpf_v6_addr
                                
                                	rpf v6 addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.rpf_tbl_id = None
                                    self.rpf_v6_addr = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-v6-nbr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.rpf_tbl_id is not None:
                                        return True

                                    if self.rpf_v6_addr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf.RpfV6Nbr']['meta_info']


                            class RpfIfMap(object):
                                """
                                Array of nbr/interface mapping
                                
                                .. attribute:: rpf_ifh
                                
                                	rpf ifh
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: rpf_path_index
                                
                                	rpf path index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.rpf_ifh = None
                                    self.rpf_path_index = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-if-map'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.rpf_ifh is not None:
                                        return True

                                    if self.rpf_path_index is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf.RpfIfMap']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.rpf_create_ts is not None:
                                    return True

                                if self.rpf_flags is not None:
                                    return True

                                if self.rpf_hardware is not None:
                                    return True

                                if self.rpf_if is not None:
                                    for child in self.rpf_if:
                                        if child is not None:
                                            return True

                                if self.rpf_if_map is not None:
                                    for child_ref in self.rpf_if_map:
                                        if child_ref._has_data():
                                            return True

                                if self.rpf_mod_ts is not None:
                                    return True

                                if self.rpf_pd_ts is not None:
                                    return True

                                if self.rpf_pl_flags is not None:
                                    return True

                                if self.rpf_v4_nbr is not None:
                                    for child_ref in self.rpf_v4_nbr:
                                        if child_ref._has_data():
                                            return True

                                if self.rpf_v6_nbr is not None:
                                    for child_ref in self.rpf_v6_nbr:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail.Rpf']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding-detail'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.afi_table_id is not None:
                                return True

                            if self.eos is not None:
                                return True

                            if self.eos_bit is not None:
                                return True

                            if self.hardware_information is not None:
                                return True

                            if self.label_information is not None and self.label_information._has_data():
                                return True

                            if self.ldi_flags is not None:
                                return True

                            if self.ldi_information is not None and self.ldi_information._has_data():
                                return True

                            if self.ldi_pointer is not None:
                                return True

                            if self.ldi_reference_count is not None:
                                return True

                            if self.ldi_time_of_last_update_in_msec is not None:
                                return True

                            if self.ldi_type is not None:
                                return True

                            if self.leaf_flags is not None:
                                return True

                            if self.leaf_local_label is not None:
                                return True

                            if self.leaf_ptr is not None:
                                return True

                            if self.leaf_reference_count is not None:
                                return True

                            if self.leaf_time_in_milli_seconds is not None:
                                return True

                            if self.local_label is not None:
                                return True

                            if self.lspa_flags is not None:
                                return True

                            if self.lspa_time_of_last_update_in_msec is not None:
                                return True

                            if self.lw_ldi_pointer is not None:
                                return True

                            if self.lw_ldi_reference_count is not None:
                                return True

                            if self.lw_ldi_type is not None:
                                return True

                            if self.lw_shared_ldi_pointer is not None:
                                return True

                            if self.lwldi_time_of_last_update_in_msec is not None:
                                return True

                            if self.multicast_information is not None and self.multicast_information._has_data():
                                return True

                            if self.multicast_label is not None:
                                return True

                            if self.path_list_flags is not None:
                                return True

                            if self.path_list_ldi_mask is not None:
                                return True

                            if self.path_list_pointer is not None:
                                return True

                            if self.path_list_reference_count is not None:
                                return True

                            if self.pl_time_of_last_update_in_msec is not None:
                                return True

                            if self.pl_time_stamp_type is not None:
                                return True

                            if self.pwhe_interface_list_id is not None:
                                return True

                            if self.pwhe_interface_list_ptr is not None:
                                return True

                            if self.rpf is not None and self.rpf._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails.ForwardingDetail']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding-details'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.forwarding_detail is not None:
                            for child_ref in self.forwarding_detail:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.LabelFib.ForwardingDetails']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-fib'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.forwarding_details is not None and self.forwarding_details._has_data():
                        return True

                    if self.forwardings is not None and self.forwardings._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['FibMpls.Nodes.Node.LabelFib']['meta_info']


            class Tunnel(object):
                """
                Tunnels Operations
                
                .. attribute:: forwarding_tunnels
                
                	Forwarding details
                	**type**\:  :py:class:`ForwardingTunnels <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels>`
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.forwarding_tunnels = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels()
                    self.forwarding_tunnels.parent = self


                class ForwardingTunnels(object):
                    """
                    Forwarding details
                    
                    .. attribute:: forwarding_tunnel
                    
                    	FIB MPLS Tunnels Interfaces operation
                    	**type**\: list of  :py:class:`ForwardingTunnel <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.forwarding_tunnel = YList()
                        self.forwarding_tunnel.parent = self
                        self.forwarding_tunnel.name = 'forwarding_tunnel'


                    class ForwardingTunnel(object):
                        """
                        FIB MPLS Tunnels Interfaces operation
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: fwdg
                        
                        	Tunnel forwarding information
                        	**type**\:  :py:class:`Fwdg <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg>`
                        
                        .. attribute:: tunnel_info
                        
                        	Tunnel head information
                        	**type**\:  :py:class:`TunnelInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.TunnelInfo>`
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.fwdg = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg()
                            self.fwdg.parent = self
                            self.tunnel_info = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.TunnelInfo()
                            self.tunnel_info.parent = self


                        class TunnelInfo(object):
                            """
                            Tunnel head information
                            
                            .. attribute:: tli_flags
                            
                            	Tunnel LI flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tli_flags_extended
                            
                            	Tunnel LI extended flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tli_pointer
                            
                            	The pointer to the Tun LI object
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tli_reference_count
                            
                            	The Tunnel LI object refcounter
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tli_type
                            
                            	Th tunnel LI type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_fwd_class
                            
                            	Tunnel Forward Class
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: tunnel_interface_name
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: tunnel_is_programmed_to_drop
                            
                            	Is Tunnel programmed as drop
                            	**type**\:  bool
                            
                            .. attribute:: tunnel_is_srte
                            
                            	Is Tunnel SRTE
                            	**type**\:  bool
                            
                            .. attribute:: tunnel_load_metric
                            
                            	 Tunnel Load Metric
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: tunnel_local_label
                            
                            	Tunnel Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_resolution_incomplete
                            
                            	Tunnel head resolution is incomplete
                            	**type**\:  bool
                            
                            .. attribute:: tunnel_resolution_inconsistent
                            
                            	Tunnel head resolition is inconsitent b/w TEhead and Local label
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.tli_flags = None
                                self.tli_flags_extended = None
                                self.tli_pointer = None
                                self.tli_reference_count = None
                                self.tli_type = None
                                self.tunnel_fwd_class = None
                                self.tunnel_interface_name = None
                                self.tunnel_is_programmed_to_drop = None
                                self.tunnel_is_srte = None
                                self.tunnel_load_metric = None
                                self.tunnel_local_label = None
                                self.tunnel_resolution_incomplete = None
                                self.tunnel_resolution_inconsistent = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:tunnel-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.tli_flags is not None:
                                    return True

                                if self.tli_flags_extended is not None:
                                    return True

                                if self.tli_pointer is not None:
                                    return True

                                if self.tli_reference_count is not None:
                                    return True

                                if self.tli_type is not None:
                                    return True

                                if self.tunnel_fwd_class is not None:
                                    return True

                                if self.tunnel_interface_name is not None:
                                    return True

                                if self.tunnel_is_programmed_to_drop is not None:
                                    return True

                                if self.tunnel_is_srte is not None:
                                    return True

                                if self.tunnel_load_metric is not None:
                                    return True

                                if self.tunnel_local_label is not None:
                                    return True

                                if self.tunnel_resolution_incomplete is not None:
                                    return True

                                if self.tunnel_resolution_inconsistent is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.TunnelInfo']['meta_info']


                        class Fwdg(object):
                            """
                            Tunnel forwarding information
                            
                            .. attribute:: afi_table_id
                            
                            	The AFI table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: eos_bit
                            
                            	EOS bit
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: hardware_information
                            
                            	Hardware info
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: label_information
                            
                            	Label\-info in FIB leaf
                            	**type**\:  :py:class:`LabelInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation>`
                            
                            .. attribute:: ldi_flags
                            
                            	The LDI flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: ldi_information
                            
                            	LDI\-info in FIB leaf
                            	**type**\:  :py:class:`LdiInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LdiInformation>`
                            
                            .. attribute:: ldi_pointer
                            
                            	The pointer to the LDI
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: ldi_reference_count
                            
                            	Number of references to the LDI
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: ldi_time_of_last_update_in_msec
                            
                            	The time of last update for LDI in msec
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: ldi_type
                            
                            	The LDI type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: leaf_flags
                            
                            	The leaf flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: leaf_local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: leaf_ptr
                            
                            	The Leaf pointer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: leaf_reference_count
                            
                            	Number of references to the leaf
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: leaf_time_in_milli_seconds
                            
                            	The time of last update in msec
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: lspa_flags
                            
                            	The LSPA flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lspa_time_of_last_update_in_msec
                            
                            	The time of last update for LSPA in msec
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: lw_ldi_pointer
                            
                            	The pointer to the LW\-LDI
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lw_ldi_reference_count
                            
                            	The LW\-LDI refcounter
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lw_ldi_type
                            
                            	The LW\-LDI type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lw_shared_ldi_pointer
                            
                            	The pointer to the shared LDI in LW\-LDI
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lwldi_time_of_last_update_in_msec
                            
                            	The time of last update for LW\-LDI in msec
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: multicast_information
                            
                            	The multicast info
                            	**type**\:  :py:class:`MulticastInformation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.MulticastInformation>`
                            
                            .. attribute:: multicast_label
                            
                            	The unicast or multicast label
                            	**type**\:  bool
                            
                            .. attribute:: path_list_flags
                            
                            	The pathlist flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: path_list_ldi_mask
                            
                            	The pathlist ldi mask
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: path_list_pointer
                            
                            	The pointer to the pathlist
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: path_list_reference_count
                            
                            	Number of references to the pathlist
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pl_time_of_last_update_in_msec
                            
                            	The time of last update for PL in msec
                            	**type**\:  long
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: pl_time_stamp_type
                            
                            	The type of time\-stamp on PL
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pwhe_interface_list_id
                            
                            	Interface list associated with PW\-HE VC imposition label
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: pwhe_interface_list_ptr
                            
                            	Interface list ptr
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: rpf
                            
                            	RPF info
                            	**type**\:  :py:class:`Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.afi_table_id = None
                                self.eos_bit = None
                                self.hardware_information = None
                                self.label_information = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation()
                                self.label_information.parent = self
                                self.ldi_flags = None
                                self.ldi_information = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LdiInformation()
                                self.ldi_information.parent = self
                                self.ldi_pointer = None
                                self.ldi_reference_count = None
                                self.ldi_time_of_last_update_in_msec = None
                                self.ldi_type = None
                                self.leaf_flags = None
                                self.leaf_local_label = None
                                self.leaf_ptr = None
                                self.leaf_reference_count = None
                                self.leaf_time_in_milli_seconds = None
                                self.lspa_flags = None
                                self.lspa_time_of_last_update_in_msec = None
                                self.lw_ldi_pointer = None
                                self.lw_ldi_reference_count = None
                                self.lw_ldi_type = None
                                self.lw_shared_ldi_pointer = None
                                self.lwldi_time_of_last_update_in_msec = None
                                self.multicast_information = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.MulticastInformation()
                                self.multicast_information.parent = self
                                self.multicast_label = None
                                self.path_list_flags = None
                                self.path_list_ldi_mask = None
                                self.path_list_pointer = None
                                self.path_list_reference_count = None
                                self.pl_time_of_last_update_in_msec = None
                                self.pl_time_stamp_type = None
                                self.pwhe_interface_list_id = None
                                self.pwhe_interface_list_ptr = None
                                self.rpf = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf()
                                self.rpf.parent = self


                            class LabelInformation(object):
                                """
                                Label\-info in FIB leaf
                                
                                .. attribute:: fib_mpls_adj_info
                                
                                	fib mpls adj info
                                	**type**\: list of  :py:class:`FibMplsAdjInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation.FibMplsAdjInfo>`
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.fib_mpls_adj_info = YList()
                                    self.fib_mpls_adj_info.parent = self
                                    self.fib_mpls_adj_info.name = 'fib_mpls_adj_info'


                                class FibMplsAdjInfo(object):
                                    """
                                    fib mpls adj info
                                    
                                    .. attribute:: app_id
                                    
                                    	App ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: backup_path_index
                                    
                                    	backup path index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: frr_nh_ptr
                                    
                                    	FRR next\-hop object pointer
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: is_frr_active
                                    
                                    	Is FRR active?
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_pure_backup
                                    
                                    	Is pure backup path?
                                    	**type**\:  bool
                                    
                                    .. attribute:: is_srte
                                    
                                    	Is SRTE?
                                    	**type**\:  bool
                                    
                                    .. attribute:: label_bridge_domain_id
                                    
                                    	Bridge domain\-ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_information_detail
                                    
                                    	Detail label info
                                    	**type**\:  :py:class:`LabelInformationDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation.FibMplsAdjInfo.LabelInformationDetail>`
                                    
                                    .. attribute:: label_information_encap_id
                                    
                                    	Encap ID
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: label_information_next_hop_protocol
                                    
                                    	The address family (v4/v6) 
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_information_next_hop_string
                                    
                                    	Next hop address in string format
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: label_information_next_hop_table_id
                                    
                                    	NHinfo Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_information_next_hop_type
                                    
                                    	NHinfo Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_information_path_index
                                    
                                    	LabelInformationPathIndex
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_information_route_version
                                    
                                    	The version of the route
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: label_information_time_in_milli_seconds
                                    
                                    	The time of last update in msec
                                    	**type**\:  long
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: label_information_type
                                    
                                    	Label\-Info type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_pw_xid
                                    
                                    	The XID of PW
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_shg_id
                                    
                                    	The SHG\-ID of PW
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: label_xid
                                    
                                    	The XID of Xconnect
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: li_pointer
                                    
                                    	The pointer to the LI object
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: li_reference_count
                                    
                                    	The LI object refcounter
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	Local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: mpi_info
                                    
                                    	The MPI info
                                    	**type**\:  :py:class:`MpiInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation.FibMplsAdjInfo.MpiInfo>`
                                    
                                    .. attribute:: mpls_adjacency_flags
                                    
                                    	MPLS Adjacency flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: nhid
                                    
                                    	Path's NH Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: outgoing_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: outgoing_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: outgoing_physical_interface
                                    
                                    	Outgoing Physical Interface
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags
                                    
                                    	PL path flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_index
                                    
                                    	path index
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: pq_flags
                                    
                                    	PQ flags
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: pq_label
                                    
                                    	PQ label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: pwhe_interface
                                    
                                    	PW\-HE interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: pwhecw_enabled
                                    
                                    	PW\-HE CW setting
                                    	**type**\:  bool
                                    
                                    .. attribute:: pwhev_ctype
                                    
                                    	PW\-HE VC type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sli_from_ldi
                                    
                                    	Path learnt the LDI/used for Forwarding?
                                    	**type**\:  bool
                                    
                                    .. attribute:: tunnel_id_present
                                    
                                    	Tunnel id present?
                                    	**type**\:  bool
                                    
                                    .. attribute:: tunnel_interface_name
                                    
                                    	Tunnel Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: weight
                                    
                                    	Weight or load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.app_id = None
                                        self.backup_path_index = None
                                        self.frr_nh_ptr = None
                                        self.is_frr_active = None
                                        self.is_pure_backup = None
                                        self.is_srte = None
                                        self.label_bridge_domain_id = None
                                        self.label_information_detail = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation.FibMplsAdjInfo.LabelInformationDetail()
                                        self.label_information_detail.parent = self
                                        self.label_information_encap_id = None
                                        self.label_information_next_hop_protocol = None
                                        self.label_information_next_hop_string = None
                                        self.label_information_next_hop_table_id = None
                                        self.label_information_next_hop_type = None
                                        self.label_information_path_index = None
                                        self.label_information_route_version = None
                                        self.label_information_time_in_milli_seconds = None
                                        self.label_information_type = None
                                        self.label_pw_xid = None
                                        self.label_shg_id = None
                                        self.label_xid = None
                                        self.li_pointer = None
                                        self.li_reference_count = None
                                        self.local_label = None
                                        self.mpi_info = FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation.FibMplsAdjInfo.MpiInfo()
                                        self.mpi_info.parent = self
                                        self.mpls_adjacency_flags = None
                                        self.nhid = None
                                        self.outgoing_interface = None
                                        self.outgoing_label = None
                                        self.outgoing_physical_interface = None
                                        self.path_flags = None
                                        self.path_index = None
                                        self.pq_flags = None
                                        self.pq_label = None
                                        self.pwhe_interface = None
                                        self.pwhecw_enabled = None
                                        self.pwhev_ctype = None
                                        self.sli_from_ldi = None
                                        self.tunnel_id_present = None
                                        self.tunnel_interface_name = None
                                        self.weight = None


                                    class LabelInformationDetail(object):
                                        """
                                        Detail label info
                                        
                                        .. attribute:: l3_mtu
                                        
                                        	L3 MTU
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: label_stack
                                        
                                        	Label stack
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: mac_size
                                        
                                        	Length of L2 encapsulation
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: next_hop_interface_name
                                        
                                        	Next hop interface name
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_protocol
                                        
                                        	The address family (V4/V6) 
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: next_hop_string
                                        
                                        	Next hop address in string format
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        .. attribute:: nh_id
                                        
                                        	Nexthop Id
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: route_download_priority
                                        
                                        	Priority at which the label was downloaded
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: route_download_version
                                        
                                        	Version of the route\-download for the label
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: status
                                        
                                        	Status
                                        	**type**\:  int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        .. attribute:: total_encapsulation_size
                                        
                                        	Total encapsulation size\: L2 + MPLS
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: transmit_number_of_bytes_switched
                                        
                                        	Number of Bytes switched
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: transmit_number_of_packets_switched
                                        
                                        	Number of packets switched
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: transmit_number_of_tm_bytes_switched
                                        
                                        	Number of Traffic\-Matrix Bytes switched
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: transmit_number_of_tm_packets_switched
                                        
                                        	Number of Traffic\-Matrix packets switched
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: version_priority_valid
                                        
                                        	Indicates if the version/priority fields are valid
                                        	**type**\:  bool
                                        
                                        

                                        """

                                        _prefix = 'fib-common-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.l3_mtu = None
                                            self.label_stack = YLeafList()
                                            self.label_stack.parent = self
                                            self.label_stack.name = 'label_stack'
                                            self.mac_size = None
                                            self.next_hop_interface_name = None
                                            self.next_hop_protocol = None
                                            self.next_hop_string = None
                                            self.nh_id = None
                                            self.route_download_priority = None
                                            self.route_download_version = None
                                            self.status = None
                                            self.total_encapsulation_size = None
                                            self.transmit_number_of_bytes_switched = None
                                            self.transmit_number_of_packets_switched = None
                                            self.transmit_number_of_tm_bytes_switched = None
                                            self.transmit_number_of_tm_packets_switched = None
                                            self.version_priority_valid = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information-detail'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.l3_mtu is not None:
                                                return True

                                            if self.label_stack is not None:
                                                for child in self.label_stack:
                                                    if child is not None:
                                                        return True

                                            if self.mac_size is not None:
                                                return True

                                            if self.next_hop_interface_name is not None:
                                                return True

                                            if self.next_hop_protocol is not None:
                                                return True

                                            if self.next_hop_string is not None:
                                                return True

                                            if self.nh_id is not None:
                                                return True

                                            if self.route_download_priority is not None:
                                                return True

                                            if self.route_download_version is not None:
                                                return True

                                            if self.status is not None:
                                                return True

                                            if self.total_encapsulation_size is not None:
                                                return True

                                            if self.transmit_number_of_bytes_switched is not None:
                                                return True

                                            if self.transmit_number_of_packets_switched is not None:
                                                return True

                                            if self.transmit_number_of_tm_bytes_switched is not None:
                                                return True

                                            if self.transmit_number_of_tm_packets_switched is not None:
                                                return True

                                            if self.version_priority_valid is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                            return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation.FibMplsAdjInfo.LabelInformationDetail']['meta_info']


                                    class MpiInfo(object):
                                        """
                                        The MPI info
                                        
                                        .. attribute:: backup_is_local
                                        
                                        	backup is local
                                        	**type**\:  bool
                                        
                                        .. attribute:: bk_tos_mask
                                        
                                        	bk tos mask
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bkup_if_hdl
                                        
                                        	bkup if hdl
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: bkup_if_node_id
                                        
                                        	bkup if node id
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: flags
                                        
                                        	flags
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: if_hdl
                                        
                                        	if hdl
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: if_node_id
                                        
                                        	if node id
                                        	**type**\:  list of int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: mcast_id
                                        
                                        	mcast id
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: my_node_id
                                        
                                        	my node id
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: pd_ts_ms
                                        
                                        	pd ts ms
                                        	**type**\:  long
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        .. attribute:: pri_tos_mask
                                        
                                        	pri tos mask
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: primary_is_local
                                        
                                        	primary is local
                                        	**type**\:  bool
                                        
                                        .. attribute:: via_label
                                        
                                        	via label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'fib-common-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_is_local = None
                                            self.bk_tos_mask = None
                                            self.bkup_if_hdl = YLeafList()
                                            self.bkup_if_hdl.parent = self
                                            self.bkup_if_hdl.name = 'bkup_if_hdl'
                                            self.bkup_if_node_id = YLeafList()
                                            self.bkup_if_node_id.parent = self
                                            self.bkup_if_node_id.name = 'bkup_if_node_id'
                                            self.flags = None
                                            self.if_hdl = YLeafList()
                                            self.if_hdl.parent = self
                                            self.if_hdl.name = 'if_hdl'
                                            self.if_node_id = YLeafList()
                                            self.if_node_id.parent = self
                                            self.if_node_id.name = 'if_node_id'
                                            self.mcast_id = None
                                            self.my_node_id = None
                                            self.pd_ts_ms = None
                                            self.pri_tos_mask = None
                                            self.primary_is_local = None
                                            self.via_label = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:mpi-info'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_is_local is not None:
                                                return True

                                            if self.bk_tos_mask is not None:
                                                return True

                                            if self.bkup_if_hdl is not None:
                                                for child in self.bkup_if_hdl:
                                                    if child is not None:
                                                        return True

                                            if self.bkup_if_node_id is not None:
                                                for child in self.bkup_if_node_id:
                                                    if child is not None:
                                                        return True

                                            if self.flags is not None:
                                                return True

                                            if self.if_hdl is not None:
                                                for child in self.if_hdl:
                                                    if child is not None:
                                                        return True

                                            if self.if_node_id is not None:
                                                for child in self.if_node_id:
                                                    if child is not None:
                                                        return True

                                            if self.mcast_id is not None:
                                                return True

                                            if self.my_node_id is not None:
                                                return True

                                            if self.pd_ts_ms is not None:
                                                return True

                                            if self.pri_tos_mask is not None:
                                                return True

                                            if self.primary_is_local is not None:
                                                return True

                                            if self.via_label is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                            return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation.FibMplsAdjInfo.MpiInfo']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fib-mpls-adj-info'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.app_id is not None:
                                            return True

                                        if self.backup_path_index is not None:
                                            return True

                                        if self.frr_nh_ptr is not None:
                                            return True

                                        if self.is_frr_active is not None:
                                            return True

                                        if self.is_pure_backup is not None:
                                            return True

                                        if self.is_srte is not None:
                                            return True

                                        if self.label_bridge_domain_id is not None:
                                            return True

                                        if self.label_information_detail is not None and self.label_information_detail._has_data():
                                            return True

                                        if self.label_information_encap_id is not None:
                                            return True

                                        if self.label_information_next_hop_protocol is not None:
                                            return True

                                        if self.label_information_next_hop_string is not None:
                                            return True

                                        if self.label_information_next_hop_table_id is not None:
                                            return True

                                        if self.label_information_next_hop_type is not None:
                                            return True

                                        if self.label_information_path_index is not None:
                                            return True

                                        if self.label_information_route_version is not None:
                                            return True

                                        if self.label_information_time_in_milli_seconds is not None:
                                            return True

                                        if self.label_information_type is not None:
                                            return True

                                        if self.label_pw_xid is not None:
                                            return True

                                        if self.label_shg_id is not None:
                                            return True

                                        if self.label_xid is not None:
                                            return True

                                        if self.li_pointer is not None:
                                            return True

                                        if self.li_reference_count is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.mpi_info is not None and self.mpi_info._has_data():
                                            return True

                                        if self.mpls_adjacency_flags is not None:
                                            return True

                                        if self.nhid is not None:
                                            return True

                                        if self.outgoing_interface is not None:
                                            return True

                                        if self.outgoing_label is not None:
                                            return True

                                        if self.outgoing_physical_interface is not None:
                                            return True

                                        if self.path_flags is not None:
                                            return True

                                        if self.path_index is not None:
                                            return True

                                        if self.pq_flags is not None:
                                            return True

                                        if self.pq_label is not None:
                                            return True

                                        if self.pwhe_interface is not None:
                                            return True

                                        if self.pwhecw_enabled is not None:
                                            return True

                                        if self.pwhev_ctype is not None:
                                            return True

                                        if self.sli_from_ldi is not None:
                                            return True

                                        if self.tunnel_id_present is not None:
                                            return True

                                        if self.tunnel_interface_name is not None:
                                            return True

                                        if self.weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation.FibMplsAdjInfo']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:label-information'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.fib_mpls_adj_info is not None:
                                        for child_ref in self.fib_mpls_adj_info:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LabelInformation']['meta_info']


                            class LdiInformation(object):
                                """
                                LDI\-info in FIB leaf
                                
                                .. attribute:: ldi_hardware_information
                                
                                	Hardware info
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ldi_hardware_information = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:ldi-information'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ldi_hardware_information is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.LdiInformation']['meta_info']


                            class MulticastInformation(object):
                                """
                                The multicast info
                                
                                .. attribute:: dependent_tunnel_ifh
                                
                                	The interface handle of a dependent tunnel 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: dependent_tunnel_local_label
                                
                                	The Local Label of a dependant Tunnel 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_bridge_domain_id
                                
                                	Bridge domain\-ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_shg_id
                                
                                	The SHG\-ID of PW
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: label_xid
                                
                                	The XID of PW
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: multicast_encap_id
                                
                                	The multicast ENCAP\-ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: multicast_mol_base_flags
                                
                                	MOL base flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: multicast_mol_flags
                                
                                	MOL flags
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: multicast_mol_reference_count
                                
                                	MOL reference count
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: multicast_mpls_local_output_paths
                                
                                	num multicast mpls local output paths
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: multicast_mpls_output_paths
                                
                                	num multicast mpls output paths 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: multicast_mpls_protocol_output_paths
                                
                                	num multicast mpls prot output paths 
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: multicast_platform_data
                                
                                	The multicast platform data
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: multicast_platform_data_length
                                
                                	The multicast platform data len
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: multicast_rpf_id
                                
                                	The multicast RPF\-ID 
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: multicast_tunnel_id
                                
                                	multicast mpls P2MP\-TE tunnel id or MLDP Tunnel LSMID on all nodes
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: multicast_tunnel_interface_name
                                
                                	multicast mpls tunnel ifh
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: multicast_tunnel_lspvif
                                
                                	multicast LSPVIF for MLDP Tunnels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: multicast_tunnel_next_hop_information
                                
                                	multicast nhinfo for p2mp TE Head
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: multicast_v4_table_id
                                
                                	The multicast IPv4 Table id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: multicast_v6_table_id
                                
                                	The multicast IPv6 Table id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dependent_tunnel_ifh = None
                                    self.dependent_tunnel_local_label = None
                                    self.label_bridge_domain_id = None
                                    self.label_shg_id = None
                                    self.label_xid = None
                                    self.multicast_encap_id = None
                                    self.multicast_mol_base_flags = None
                                    self.multicast_mol_flags = None
                                    self.multicast_mol_reference_count = None
                                    self.multicast_mpls_local_output_paths = None
                                    self.multicast_mpls_output_paths = None
                                    self.multicast_mpls_protocol_output_paths = None
                                    self.multicast_platform_data = None
                                    self.multicast_platform_data_length = None
                                    self.multicast_rpf_id = None
                                    self.multicast_tunnel_id = None
                                    self.multicast_tunnel_interface_name = None
                                    self.multicast_tunnel_lspvif = None
                                    self.multicast_tunnel_next_hop_information = None
                                    self.multicast_v4_table_id = None
                                    self.multicast_v6_table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:multicast-information'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dependent_tunnel_ifh is not None:
                                        return True

                                    if self.dependent_tunnel_local_label is not None:
                                        return True

                                    if self.label_bridge_domain_id is not None:
                                        return True

                                    if self.label_shg_id is not None:
                                        return True

                                    if self.label_xid is not None:
                                        return True

                                    if self.multicast_encap_id is not None:
                                        return True

                                    if self.multicast_mol_base_flags is not None:
                                        return True

                                    if self.multicast_mol_flags is not None:
                                        return True

                                    if self.multicast_mol_reference_count is not None:
                                        return True

                                    if self.multicast_mpls_local_output_paths is not None:
                                        return True

                                    if self.multicast_mpls_output_paths is not None:
                                        return True

                                    if self.multicast_mpls_protocol_output_paths is not None:
                                        return True

                                    if self.multicast_platform_data is not None:
                                        return True

                                    if self.multicast_platform_data_length is not None:
                                        return True

                                    if self.multicast_rpf_id is not None:
                                        return True

                                    if self.multicast_tunnel_id is not None:
                                        return True

                                    if self.multicast_tunnel_interface_name is not None:
                                        return True

                                    if self.multicast_tunnel_lspvif is not None:
                                        return True

                                    if self.multicast_tunnel_next_hop_information is not None:
                                        return True

                                    if self.multicast_v4_table_id is not None:
                                        return True

                                    if self.multicast_v6_table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.MulticastInformation']['meta_info']


                            class Rpf(object):
                                """
                                RPF info
                                
                                .. attribute:: rpf_create_ts
                                
                                	Time when the LRPF was created
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: rpf_flags
                                
                                	RPF flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: rpf_hardware
                                
                                	Platform Hardware info
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: rpf_if
                                
                                	Array of interfaces in interface list
                                	**type**\:  list of str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: rpf_if_map
                                
                                	Array of nbr/interface mapping
                                	**type**\: list of  :py:class:`RpfIfMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf.RpfIfMap>`
                                
                                .. attribute:: rpf_mod_ts
                                
                                	Last time the LRPF modified
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: rpf_pd_ts
                                
                                	Last time the PD action was sent for the LRPF
                                	**type**\:  long
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: rpf_pl_flags
                                
                                	RPF pathlist flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: rpf_v4_nbr
                                
                                	Array of V4 neighbours
                                	**type**\: list of  :py:class:`RpfV4Nbr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf.RpfV4Nbr>`
                                
                                .. attribute:: rpf_v6_nbr
                                
                                	Array of V6 neighbours
                                	**type**\: list of  :py:class:`RpfV6Nbr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf.RpfV6Nbr>`
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.rpf_create_ts = None
                                    self.rpf_flags = None
                                    self.rpf_hardware = None
                                    self.rpf_if = YLeafList()
                                    self.rpf_if.parent = self
                                    self.rpf_if.name = 'rpf_if'
                                    self.rpf_if_map = YList()
                                    self.rpf_if_map.parent = self
                                    self.rpf_if_map.name = 'rpf_if_map'
                                    self.rpf_mod_ts = None
                                    self.rpf_pd_ts = None
                                    self.rpf_pl_flags = None
                                    self.rpf_v4_nbr = YList()
                                    self.rpf_v4_nbr.parent = self
                                    self.rpf_v4_nbr.name = 'rpf_v4_nbr'
                                    self.rpf_v6_nbr = YList()
                                    self.rpf_v6_nbr.parent = self
                                    self.rpf_v6_nbr.name = 'rpf_v6_nbr'


                                class RpfV4Nbr(object):
                                    """
                                    Array of V4 neighbours
                                    
                                    .. attribute:: rpf_tbl_id
                                    
                                    	rpf tbl id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: rpf_v4_addr
                                    
                                    	rpf v4 addr
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.rpf_tbl_id = None
                                        self.rpf_v4_addr = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-v4-nbr'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.rpf_tbl_id is not None:
                                            return True

                                        if self.rpf_v4_addr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf.RpfV4Nbr']['meta_info']


                                class RpfV6Nbr(object):
                                    """
                                    Array of V6 neighbours
                                    
                                    .. attribute:: rpf_tbl_id
                                    
                                    	rpf tbl id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: rpf_v6_addr
                                    
                                    	rpf v6 addr
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.rpf_tbl_id = None
                                        self.rpf_v6_addr = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-v6-nbr'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.rpf_tbl_id is not None:
                                            return True

                                        if self.rpf_v6_addr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf.RpfV6Nbr']['meta_info']


                                class RpfIfMap(object):
                                    """
                                    Array of nbr/interface mapping
                                    
                                    .. attribute:: rpf_ifh
                                    
                                    	rpf ifh
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: rpf_path_index
                                    
                                    	rpf path index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.rpf_ifh = None
                                        self.rpf_path_index = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf-if-map'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.rpf_ifh is not None:
                                            return True

                                        if self.rpf_path_index is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf.RpfIfMap']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:rpf'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.rpf_create_ts is not None:
                                        return True

                                    if self.rpf_flags is not None:
                                        return True

                                    if self.rpf_hardware is not None:
                                        return True

                                    if self.rpf_if is not None:
                                        for child in self.rpf_if:
                                            if child is not None:
                                                return True

                                    if self.rpf_if_map is not None:
                                        for child_ref in self.rpf_if_map:
                                            if child_ref._has_data():
                                                return True

                                    if self.rpf_mod_ts is not None:
                                        return True

                                    if self.rpf_pd_ts is not None:
                                        return True

                                    if self.rpf_pl_flags is not None:
                                        return True

                                    if self.rpf_v4_nbr is not None:
                                        for child_ref in self.rpf_v4_nbr:
                                            if child_ref._has_data():
                                                return True

                                    if self.rpf_v6_nbr is not None:
                                        for child_ref in self.rpf_v6_nbr:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg.Rpf']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:fwdg'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.afi_table_id is not None:
                                    return True

                                if self.eos_bit is not None:
                                    return True

                                if self.hardware_information is not None:
                                    return True

                                if self.label_information is not None and self.label_information._has_data():
                                    return True

                                if self.ldi_flags is not None:
                                    return True

                                if self.ldi_information is not None and self.ldi_information._has_data():
                                    return True

                                if self.ldi_pointer is not None:
                                    return True

                                if self.ldi_reference_count is not None:
                                    return True

                                if self.ldi_time_of_last_update_in_msec is not None:
                                    return True

                                if self.ldi_type is not None:
                                    return True

                                if self.leaf_flags is not None:
                                    return True

                                if self.leaf_local_label is not None:
                                    return True

                                if self.leaf_ptr is not None:
                                    return True

                                if self.leaf_reference_count is not None:
                                    return True

                                if self.leaf_time_in_milli_seconds is not None:
                                    return True

                                if self.lspa_flags is not None:
                                    return True

                                if self.lspa_time_of_last_update_in_msec is not None:
                                    return True

                                if self.lw_ldi_pointer is not None:
                                    return True

                                if self.lw_ldi_reference_count is not None:
                                    return True

                                if self.lw_ldi_type is not None:
                                    return True

                                if self.lw_shared_ldi_pointer is not None:
                                    return True

                                if self.lwldi_time_of_last_update_in_msec is not None:
                                    return True

                                if self.multicast_information is not None and self.multicast_information._has_data():
                                    return True

                                if self.multicast_label is not None:
                                    return True

                                if self.path_list_flags is not None:
                                    return True

                                if self.path_list_ldi_mask is not None:
                                    return True

                                if self.path_list_pointer is not None:
                                    return True

                                if self.path_list_reference_count is not None:
                                    return True

                                if self.pl_time_of_last_update_in_msec is not None:
                                    return True

                                if self.pl_time_stamp_type is not None:
                                    return True

                                if self.pwhe_interface_list_id is not None:
                                    return True

                                if self.pwhe_interface_list_ptr is not None:
                                    return True

                                if self.rpf is not None and self.rpf._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel.Fwdg']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding-tunnel[Cisco-IOS-XR-fib-common-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.fwdg is not None and self.fwdg._has_data():
                                return True

                            if self.tunnel_info is not None and self.tunnel_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels.ForwardingTunnel']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding-tunnels'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.forwarding_tunnel is not None:
                            for child_ref in self.forwarding_tunnel:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.Tunnel.ForwardingTunnels']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:tunnel'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.forwarding_tunnels is not None and self.forwarding_tunnels._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['FibMpls.Nodes.Node.Tunnel']['meta_info']


            class FrrDatabase(object):
                """
                FIB MPLS FRR Database
                
                .. attribute:: frrdb_backup_interface_summaries
                
                	FIB MPLS FRR Database Backup Interface Summary Table
                	**type**\:  :py:class:`FrrdbBackupInterfaceSummaries <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbBackupInterfaceSummaries>`
                
                .. attribute:: frrdb_protected_interface_table_summaries
                
                	FIB MPLS FRR Database Protected Interface Summary Table
                	**type**\:  :py:class:`FrrdbProtectedInterfaceTableSummaries <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbProtectedInterfaceTableSummaries>`
                
                .. attribute:: frrdb_summary
                
                	FIB MPLS FRR Database Summary
                	**type**\:  :py:class:`FrrdbSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbSummary>`
                
                .. attribute:: frrdb_tunnel_head_summary
                
                	FIB MPLS FRR Database Tunnel Head Summary
                	**type**\:  :py:class:`FrrdbTunnelHeadSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeadSummary>`
                
                .. attribute:: frrdb_tunnel_heads
                
                	FIB MPLS FRR Database Tunnel Head Table
                	**type**\:  :py:class:`FrrdbTunnelHeads <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads>`
                
                .. attribute:: frrdb_tunnel_midpoint_summary
                
                	FIB MPLS FRR Database Tunnel Midpoint Summary
                	**type**\:  :py:class:`FrrdbTunnelMidpointSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpointSummary>`
                
                .. attribute:: frrdb_tunnel_midpoints
                
                	FIB MPLS FRR Database Tunnel Midpoint Table
                	**type**\:  :py:class:`FrrdbTunnelMidpoints <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints>`
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.frrdb_backup_interface_summaries = FibMpls.Nodes.Node.FrrDatabase.FrrdbBackupInterfaceSummaries()
                    self.frrdb_backup_interface_summaries.parent = self
                    self.frrdb_protected_interface_table_summaries = FibMpls.Nodes.Node.FrrDatabase.FrrdbProtectedInterfaceTableSummaries()
                    self.frrdb_protected_interface_table_summaries.parent = self
                    self.frrdb_summary = FibMpls.Nodes.Node.FrrDatabase.FrrdbSummary()
                    self.frrdb_summary.parent = self
                    self.frrdb_tunnel_head_summary = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeadSummary()
                    self.frrdb_tunnel_head_summary.parent = self
                    self.frrdb_tunnel_heads = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads()
                    self.frrdb_tunnel_heads.parent = self
                    self.frrdb_tunnel_midpoint_summary = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpointSummary()
                    self.frrdb_tunnel_midpoint_summary.parent = self
                    self.frrdb_tunnel_midpoints = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints()
                    self.frrdb_tunnel_midpoints.parent = self


                class FrrdbTunnelHeadSummary(object):
                    """
                    FIB MPLS FRR Database Tunnel Head Summary
                    
                    .. attribute:: active
                    
                    	Number of FRR rewrites in Active state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: other
                    
                    	Number of FRR rewrites in an unrecognized state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: partial
                    
                    	Number of FRR rewrites in Partial state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ready
                    
                    	Number of FRR rewrites in Ready state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.active = None
                        self.other = None
                        self.partial = None
                        self.ready = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-tunnel-head-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.active is not None:
                            return True

                        if self.other is not None:
                            return True

                        if self.partial is not None:
                            return True

                        if self.ready is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeadSummary']['meta_info']


                class FrrdbBackupInterfaceSummaries(object):
                    """
                    FIB MPLS FRR Database Backup Interface
                    Summary Table
                    
                    .. attribute:: frrdb_backup_interface_summary
                    
                    	FIB MPLS FRR Database Backup Interface Summary
                    	**type**\: list of  :py:class:`FrrdbBackupInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbBackupInterfaceSummaries.FrrdbBackupInterfaceSummary>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.frrdb_backup_interface_summary = YList()
                        self.frrdb_backup_interface_summary.parent = self
                        self.frrdb_backup_interface_summary.name = 'frrdb_backup_interface_summary'


                    class FrrdbBackupInterfaceSummary(object):
                        """
                        FIB MPLS FRR Database Backup Interface
                        Summary
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: active
                        
                        	Number of FRR rewrites in Active state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: other
                        
                        	Number of FRR rewrites in an unrecognized state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: partial
                        
                        	Number of FRR rewrites in Partial state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ready
                        
                        	Number of FRR rewrites in Ready state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.active = None
                            self.other = None
                            self.partial = None
                            self.ready = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-backup-interface-summary[Cisco-IOS-XR-fib-common-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.active is not None:
                                return True

                            if self.other is not None:
                                return True

                            if self.partial is not None:
                                return True

                            if self.ready is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbBackupInterfaceSummaries.FrrdbBackupInterfaceSummary']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-backup-interface-summaries'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.frrdb_backup_interface_summary is not None:
                            for child_ref in self.frrdb_backup_interface_summary:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbBackupInterfaceSummaries']['meta_info']


                class FrrdbSummary(object):
                    """
                    FIB MPLS FRR Database Summary
                    
                    .. attribute:: active
                    
                    	Number of FRR rewrites in Active state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: other
                    
                    	Number of FRR rewrites in an unrecognized state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: partial
                    
                    	Number of FRR rewrites in Partial state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ready
                    
                    	Number of FRR rewrites in Ready state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.active = None
                        self.other = None
                        self.partial = None
                        self.ready = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.active is not None:
                            return True

                        if self.other is not None:
                            return True

                        if self.partial is not None:
                            return True

                        if self.ready is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbSummary']['meta_info']


                class FrrdbProtectedInterfaceTableSummaries(object):
                    """
                    FIB MPLS FRR Database Protected Interface
                    Summary Table
                    
                    .. attribute:: frrdb_protected_interface_table_summary
                    
                    	FIB MPLS FRR Database Protected Interface Summary
                    	**type**\: list of  :py:class:`FrrdbProtectedInterfaceTableSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbProtectedInterfaceTableSummaries.FrrdbProtectedInterfaceTableSummary>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.frrdb_protected_interface_table_summary = YList()
                        self.frrdb_protected_interface_table_summary.parent = self
                        self.frrdb_protected_interface_table_summary.name = 'frrdb_protected_interface_table_summary'


                    class FrrdbProtectedInterfaceTableSummary(object):
                        """
                        FIB MPLS FRR Database Protected Interface
                        Summary
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: active
                        
                        	Number of FRR rewrites in Active state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: other
                        
                        	Number of FRR rewrites in an unrecognized state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: partial
                        
                        	Number of FRR rewrites in Partial state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ready
                        
                        	Number of FRR rewrites in Ready state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.active = None
                            self.other = None
                            self.partial = None
                            self.ready = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-protected-interface-table-summary[Cisco-IOS-XR-fib-common-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.active is not None:
                                return True

                            if self.other is not None:
                                return True

                            if self.partial is not None:
                                return True

                            if self.ready is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbProtectedInterfaceTableSummaries.FrrdbProtectedInterfaceTableSummary']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-protected-interface-table-summaries'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.frrdb_protected_interface_table_summary is not None:
                            for child_ref in self.frrdb_protected_interface_table_summary:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbProtectedInterfaceTableSummaries']['meta_info']


                class FrrdbTunnelMidpointSummary(object):
                    """
                    FIB MPLS FRR Database Tunnel Midpoint Summary
                    
                    .. attribute:: active
                    
                    	Number of FRR rewrites in Active state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: other
                    
                    	Number of FRR rewrites in an unrecognized state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: partial
                    
                    	Number of FRR rewrites in Partial state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ready
                    
                    	Number of FRR rewrites in Ready state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.active = None
                        self.other = None
                        self.partial = None
                        self.ready = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-tunnel-midpoint-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.active is not None:
                            return True

                        if self.other is not None:
                            return True

                        if self.partial is not None:
                            return True

                        if self.ready is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpointSummary']['meta_info']


                class FrrdbTunnelMidpoints(object):
                    """
                    FIB MPLS FRR Database Tunnel Midpoint Table
                    
                    .. attribute:: frrdb_tunnel_midpoint
                    
                    	FIB MPLS FRR Database Tunnel Midpoint Entry
                    	**type**\: list of  :py:class:`FrrdbTunnelMidpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.frrdb_tunnel_midpoint = YList()
                        self.frrdb_tunnel_midpoint.parent = self
                        self.frrdb_tunnel_midpoint.name = 'frrdb_tunnel_midpoint'


                    class FrrdbTunnelMidpoint(object):
                        """
                        FIB MPLS FRR Database Tunnel Midpoint Entry
                        
                        .. attribute:: local_label  <key>
                        
                        	Local label value
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: entry_frr_state
                        
                        	MPLS FRR entry state
                        	**type**\:  :py:class:`MgmtFibMplsFrrStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MgmtFibMplsFrrStateEnum>`
                        
                        .. attribute:: frr_entry_id
                        
                        	FRR entry ID
                        	**type**\:  :py:class:`FrrEntryId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId>`
                        
                        .. attribute:: frr_interface_name
                        
                        	FRR interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: frr_label
                        
                        	FRR output label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: frr_next_hop_ipv4_address
                        
                        	Next hop IPv4 address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: input_label
                        
                        	Input label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: is_mldp_lsp
                        
                        	MLDP or P2MP\-TE
                        	**type**\:  bool
                        
                        .. attribute:: is_multicast_tunnel
                        
                        	Multicast tunnel
                        	**type**\:  bool
                        
                        .. attribute:: multicast_leg
                        
                        	MCAST legs
                        	**type**\: list of  :py:class:`MulticastLeg <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg>`
                        
                        .. attribute:: multicast_tunnel_legs
                        
                        	Number of legs in MCAST tunnel
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: outgoing_interface
                        
                        	Outgoing interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: outgoing_label
                        
                        	Outgoing label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_interface_name
                        
                        	Tunnel interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.local_label = None
                            self.entry_frr_state = None
                            self.frr_entry_id = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId()
                            self.frr_entry_id.parent = self
                            self.frr_interface_name = None
                            self.frr_label = None
                            self.frr_next_hop_ipv4_address = None
                            self.input_label = None
                            self.is_mldp_lsp = None
                            self.is_multicast_tunnel = None
                            self.multicast_leg = YList()
                            self.multicast_leg.parent = self
                            self.multicast_leg.name = 'multicast_leg'
                            self.multicast_tunnel_legs = None
                            self.outgoing_interface = None
                            self.outgoing_label = None
                            self.tunnel_interface_name = None


                        class FrrEntryId(object):
                            """
                            FRR entry ID
                            
                            .. attribute:: head
                            
                            	head
                            	**type**\:  :py:class:`Head <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId.Head>`
                            
                            .. attribute:: midpoint
                            
                            	midpoint
                            	**type**\:  :py:class:`Midpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId.Midpoint>`
                            
                            .. attribute:: role
                            
                            	Role
                            	**type**\:  :py:class:`MgmtFibMplsLspRoleEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MgmtFibMplsLspRoleEnum>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.head = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId.Head()
                                self.head.parent = self
                                self.midpoint = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId.Midpoint()
                                self.midpoint.parent = self
                                self.role = None


                            class Head(object):
                                """
                                head
                                
                                .. attribute:: destination_prefix
                                
                                	Destination prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: destination_prefix_length
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.destination_prefix = None
                                    self.destination_prefix_length = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:head'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.destination_prefix is not None:
                                        return True

                                    if self.destination_prefix_length is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId.Head']['meta_info']


                            class Midpoint(object):
                                """
                                midpoint
                                
                                .. attribute:: lspid
                                
                                	LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: source_address
                                
                                	Source IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.lspid = None
                                    self.source_address = None
                                    self.tunnel_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:midpoint'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.lspid is not None:
                                        return True

                                    if self.source_address is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId.Midpoint']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-entry-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.head is not None and self.head._has_data():
                                    return True

                                if self.midpoint is not None and self.midpoint._has_data():
                                    return True

                                if self.role is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.FrrEntryId']['meta_info']


                        class MulticastLeg(object):
                            """
                            MCAST legs
                            
                            .. attribute:: entry_frr_state
                            
                            	MPLS FRR entry state
                            	**type**\:  :py:class:`MgmtFibMplsFrrStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MgmtFibMplsFrrStateEnum>`
                            
                            .. attribute:: frr_entry_id
                            
                            	FRR entry ID
                            	**type**\:  :py:class:`FrrEntryId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId>`
                            
                            .. attribute:: frr_interface_name
                            
                            	FRR interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: frr_label
                            
                            	FRR output label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: frr_next_hop_ipv4_address
                            
                            	Next hop IPv4 address
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: input_label
                            
                            	Input label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: is_mldp_lsp
                            
                            	MLDP or P2MP\-TE
                            	**type**\:  bool
                            
                            .. attribute:: outgoing_interface
                            
                            	Outgoing interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: outgoing_label
                            
                            	Outgoing label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface_name
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.entry_frr_state = None
                                self.frr_entry_id = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId()
                                self.frr_entry_id.parent = self
                                self.frr_interface_name = None
                                self.frr_label = None
                                self.frr_next_hop_ipv4_address = None
                                self.input_label = None
                                self.is_mldp_lsp = None
                                self.outgoing_interface = None
                                self.outgoing_label = None
                                self.tunnel_interface_name = None


                            class FrrEntryId(object):
                                """
                                FRR entry ID
                                
                                .. attribute:: head
                                
                                	head
                                	**type**\:  :py:class:`Head <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId.Head>`
                                
                                .. attribute:: midpoint
                                
                                	midpoint
                                	**type**\:  :py:class:`Midpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId.Midpoint>`
                                
                                .. attribute:: role
                                
                                	Role
                                	**type**\:  :py:class:`MgmtFibMplsLspRoleEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MgmtFibMplsLspRoleEnum>`
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId.Head()
                                    self.head.parent = self
                                    self.midpoint = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId.Midpoint()
                                    self.midpoint.parent = self
                                    self.role = None


                                class Head(object):
                                    """
                                    head
                                    
                                    .. attribute:: destination_prefix
                                    
                                    	Destination prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: destination_prefix_length
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.destination_prefix = None
                                        self.destination_prefix_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:head'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.destination_prefix is not None:
                                            return True

                                        if self.destination_prefix_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId.Head']['meta_info']


                                class Midpoint(object):
                                    """
                                    midpoint
                                    
                                    .. attribute:: lspid
                                    
                                    	LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: source_address
                                    
                                    	Source IPv4 address
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.lspid = None
                                        self.source_address = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:midpoint'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.lspid is not None:
                                            return True

                                        if self.source_address is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId.Midpoint']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-entry-id'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None and self.head._has_data():
                                        return True

                                    if self.midpoint is not None and self.midpoint._has_data():
                                        return True

                                    if self.role is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg.FrrEntryId']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:multicast-leg'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.entry_frr_state is not None:
                                    return True

                                if self.frr_entry_id is not None and self.frr_entry_id._has_data():
                                    return True

                                if self.frr_interface_name is not None:
                                    return True

                                if self.frr_label is not None:
                                    return True

                                if self.frr_next_hop_ipv4_address is not None:
                                    return True

                                if self.input_label is not None:
                                    return True

                                if self.is_mldp_lsp is not None:
                                    return True

                                if self.outgoing_interface is not None:
                                    return True

                                if self.outgoing_label is not None:
                                    return True

                                if self.tunnel_interface_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint.MulticastLeg']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.local_label is None:
                                raise YPYModelError('Key property local_label is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-tunnel-midpoint[Cisco-IOS-XR-fib-common-oper:local-label = ' + str(self.local_label) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.local_label is not None:
                                return True

                            if self.entry_frr_state is not None:
                                return True

                            if self.frr_entry_id is not None and self.frr_entry_id._has_data():
                                return True

                            if self.frr_interface_name is not None:
                                return True

                            if self.frr_label is not None:
                                return True

                            if self.frr_next_hop_ipv4_address is not None:
                                return True

                            if self.input_label is not None:
                                return True

                            if self.is_mldp_lsp is not None:
                                return True

                            if self.is_multicast_tunnel is not None:
                                return True

                            if self.multicast_leg is not None:
                                for child_ref in self.multicast_leg:
                                    if child_ref._has_data():
                                        return True

                            if self.multicast_tunnel_legs is not None:
                                return True

                            if self.outgoing_interface is not None:
                                return True

                            if self.outgoing_label is not None:
                                return True

                            if self.tunnel_interface_name is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints.FrrdbTunnelMidpoint']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-tunnel-midpoints'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.frrdb_tunnel_midpoint is not None:
                            for child_ref in self.frrdb_tunnel_midpoint:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelMidpoints']['meta_info']


                class FrrdbTunnelHeads(object):
                    """
                    FIB MPLS FRR Database Tunnel Head Table
                    
                    .. attribute:: frrdb_tunnel_head
                    
                    	FIB MPLS FRR Database Tunnel Head Entry
                    	**type**\: list of  :py:class:`FrrdbTunnelHead <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead>`
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.frrdb_tunnel_head = YList()
                        self.frrdb_tunnel_head.parent = self
                        self.frrdb_tunnel_head.name = 'frrdb_tunnel_head'


                    class FrrdbTunnelHead(object):
                        """
                        FIB MPLS FRR Database Tunnel Head Entry
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: entry_frr_state
                        
                        	MPLS FRR entry state
                        	**type**\:  :py:class:`MgmtFibMplsFrrStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MgmtFibMplsFrrStateEnum>`
                        
                        .. attribute:: frr_entry_id
                        
                        	FRR entry ID
                        	**type**\:  :py:class:`FrrEntryId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId>`
                        
                        .. attribute:: frr_interface_name
                        
                        	FRR interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: frr_label
                        
                        	FRR output label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: frr_next_hop_ipv4_address
                        
                        	Next hop IPv4 address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: input_label
                        
                        	Input label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: is_mldp_lsp
                        
                        	MLDP or P2MP\-TE
                        	**type**\:  bool
                        
                        .. attribute:: is_multicast_tunnel
                        
                        	Multicast tunnel
                        	**type**\:  bool
                        
                        .. attribute:: multicast_leg
                        
                        	MCAST legs
                        	**type**\: list of  :py:class:`MulticastLeg <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg>`
                        
                        .. attribute:: multicast_tunnel_legs
                        
                        	Number of legs in MCAST tunnel
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: outgoing_interface
                        
                        	Outgoing interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: outgoing_label
                        
                        	Outgoing label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_interface_name
                        
                        	Tunnel interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.entry_frr_state = None
                            self.frr_entry_id = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId()
                            self.frr_entry_id.parent = self
                            self.frr_interface_name = None
                            self.frr_label = None
                            self.frr_next_hop_ipv4_address = None
                            self.input_label = None
                            self.is_mldp_lsp = None
                            self.is_multicast_tunnel = None
                            self.multicast_leg = YList()
                            self.multicast_leg.parent = self
                            self.multicast_leg.name = 'multicast_leg'
                            self.multicast_tunnel_legs = None
                            self.outgoing_interface = None
                            self.outgoing_label = None
                            self.tunnel_interface_name = None


                        class FrrEntryId(object):
                            """
                            FRR entry ID
                            
                            .. attribute:: head
                            
                            	head
                            	**type**\:  :py:class:`Head <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId.Head>`
                            
                            .. attribute:: midpoint
                            
                            	midpoint
                            	**type**\:  :py:class:`Midpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId.Midpoint>`
                            
                            .. attribute:: role
                            
                            	Role
                            	**type**\:  :py:class:`MgmtFibMplsLspRoleEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MgmtFibMplsLspRoleEnum>`
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.head = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId.Head()
                                self.head.parent = self
                                self.midpoint = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId.Midpoint()
                                self.midpoint.parent = self
                                self.role = None


                            class Head(object):
                                """
                                head
                                
                                .. attribute:: destination_prefix
                                
                                	Destination prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: destination_prefix_length
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.destination_prefix = None
                                    self.destination_prefix_length = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:head'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.destination_prefix is not None:
                                        return True

                                    if self.destination_prefix_length is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId.Head']['meta_info']


                            class Midpoint(object):
                                """
                                midpoint
                                
                                .. attribute:: lspid
                                
                                	LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: source_address
                                
                                	Source IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.lspid = None
                                    self.source_address = None
                                    self.tunnel_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:midpoint'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.lspid is not None:
                                        return True

                                    if self.source_address is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId.Midpoint']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-entry-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.head is not None and self.head._has_data():
                                    return True

                                if self.midpoint is not None and self.midpoint._has_data():
                                    return True

                                if self.role is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.FrrEntryId']['meta_info']


                        class MulticastLeg(object):
                            """
                            MCAST legs
                            
                            .. attribute:: entry_frr_state
                            
                            	MPLS FRR entry state
                            	**type**\:  :py:class:`MgmtFibMplsFrrStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MgmtFibMplsFrrStateEnum>`
                            
                            .. attribute:: frr_entry_id
                            
                            	FRR entry ID
                            	**type**\:  :py:class:`FrrEntryId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId>`
                            
                            .. attribute:: frr_interface_name
                            
                            	FRR interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: frr_label
                            
                            	FRR output label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: frr_next_hop_ipv4_address
                            
                            	Next hop IPv4 address
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: input_label
                            
                            	Input label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: is_mldp_lsp
                            
                            	MLDP or P2MP\-TE
                            	**type**\:  bool
                            
                            .. attribute:: outgoing_interface
                            
                            	Outgoing interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: outgoing_label
                            
                            	Outgoing label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface_name
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'fib-common-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.entry_frr_state = None
                                self.frr_entry_id = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId()
                                self.frr_entry_id.parent = self
                                self.frr_interface_name = None
                                self.frr_label = None
                                self.frr_next_hop_ipv4_address = None
                                self.input_label = None
                                self.is_mldp_lsp = None
                                self.outgoing_interface = None
                                self.outgoing_label = None
                                self.tunnel_interface_name = None


                            class FrrEntryId(object):
                                """
                                FRR entry ID
                                
                                .. attribute:: head
                                
                                	head
                                	**type**\:  :py:class:`Head <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId.Head>`
                                
                                .. attribute:: midpoint
                                
                                	midpoint
                                	**type**\:  :py:class:`Midpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId.Midpoint>`
                                
                                .. attribute:: role
                                
                                	Role
                                	**type**\:  :py:class:`MgmtFibMplsLspRoleEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.MgmtFibMplsLspRoleEnum>`
                                
                                

                                """

                                _prefix = 'fib-common-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId.Head()
                                    self.head.parent = self
                                    self.midpoint = FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId.Midpoint()
                                    self.midpoint.parent = self
                                    self.role = None


                                class Head(object):
                                    """
                                    head
                                    
                                    .. attribute:: destination_prefix
                                    
                                    	Destination prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: destination_prefix_length
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.destination_prefix = None
                                        self.destination_prefix_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:head'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.destination_prefix is not None:
                                            return True

                                        if self.destination_prefix_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId.Head']['meta_info']


                                class Midpoint(object):
                                    """
                                    midpoint
                                    
                                    .. attribute:: lspid
                                    
                                    	LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: source_address
                                    
                                    	Source IPv4 address
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'fib-common-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.lspid = None
                                        self.source_address = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:midpoint'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.lspid is not None:
                                            return True

                                        if self.source_address is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId.Midpoint']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-entry-id'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None and self.head._has_data():
                                        return True

                                    if self.midpoint is not None and self.midpoint._has_data():
                                        return True

                                    if self.role is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                    return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg.FrrEntryId']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:multicast-leg'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.entry_frr_state is not None:
                                    return True

                                if self.frr_entry_id is not None and self.frr_entry_id._has_data():
                                    return True

                                if self.frr_interface_name is not None:
                                    return True

                                if self.frr_label is not None:
                                    return True

                                if self.frr_next_hop_ipv4_address is not None:
                                    return True

                                if self.input_label is not None:
                                    return True

                                if self.is_mldp_lsp is not None:
                                    return True

                                if self.outgoing_interface is not None:
                                    return True

                                if self.outgoing_label is not None:
                                    return True

                                if self.tunnel_interface_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                                return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead.MulticastLeg']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-tunnel-head[Cisco-IOS-XR-fib-common-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.entry_frr_state is not None:
                                return True

                            if self.frr_entry_id is not None and self.frr_entry_id._has_data():
                                return True

                            if self.frr_interface_name is not None:
                                return True

                            if self.frr_label is not None:
                                return True

                            if self.frr_next_hop_ipv4_address is not None:
                                return True

                            if self.input_label is not None:
                                return True

                            if self.is_mldp_lsp is not None:
                                return True

                            if self.is_multicast_tunnel is not None:
                                return True

                            if self.multicast_leg is not None:
                                for child_ref in self.multicast_leg:
                                    if child_ref._has_data():
                                        return True

                            if self.multicast_tunnel_legs is not None:
                                return True

                            if self.outgoing_interface is not None:
                                return True

                            if self.outgoing_label is not None:
                                return True

                            if self.tunnel_interface_name is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads.FrrdbTunnelHead']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frrdb-tunnel-heads'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.frrdb_tunnel_head is not None:
                            for child_ref in self.frrdb_tunnel_head:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase.FrrdbTunnelHeads']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-database'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.frrdb_backup_interface_summaries is not None and self.frrdb_backup_interface_summaries._has_data():
                        return True

                    if self.frrdb_protected_interface_table_summaries is not None and self.frrdb_protected_interface_table_summaries._has_data():
                        return True

                    if self.frrdb_summary is not None and self.frrdb_summary._has_data():
                        return True

                    if self.frrdb_tunnel_head_summary is not None and self.frrdb_tunnel_head_summary._has_data():
                        return True

                    if self.frrdb_tunnel_heads is not None and self.frrdb_tunnel_heads._has_data():
                        return True

                    if self.frrdb_tunnel_midpoint_summary is not None and self.frrdb_tunnel_midpoint_summary._has_data():
                        return True

                    if self.frrdb_tunnel_midpoints is not None and self.frrdb_tunnel_midpoints._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['FibMpls.Nodes.Node.FrrDatabase']['meta_info']


            class ForwardingSummary(object):
                """
                FIB MPLS forwarding summary
                
                .. attribute:: deleted_stale_entries
                
                	Number of delete stale label entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: highest_label
                
                	Highest Label in use
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ignore_protect
                
                	Number of TE tunnels treated as non\-protected
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ipv4_imposition_entries
                
                	Number of IPv4 imposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: label_switched_entries
                
                	Number of label swap/disposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: lowest_label
                
                	Lowest label in use
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: lrpf_entries
                
                	Number of labels with RPF
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mte_head_entries
                
                	Number of MTE tunnel head entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mte_ll_entries
                
                	Number of MTE local entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mte_midpoint_entries
                
                	Number of MTE midpoint entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: num_lsp
                
                	Number of label switch paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: protected_label_switched_entries
                
                	Number of FRR protected label swap/disposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: reserved_label_entries
                
                	Number of reserved label entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_head_entries
                
                	Number of TE FRR tunnel head imposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_interface_entries
                
                	Number of TE FRR protected interface entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_internal_entries
                
                	Number of TE internal forwarding entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_mid_points_entries
                
                	Number of TE FRR MidPoints forwarding entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_frr_next_hop_entries
                
                	Number of TE FRR protected next\-hop entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_head_entries
                
                	Number of TE tunnel head imposition entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_internal_entries
                
                	Number of TE internal forwarding entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: te_mid_points_entries
                
                	Number of TE MidPoints forwarding entries
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_forwarding_update_messages
                
                	Total forwarding update messages from LSD to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_forwarding_updates
                
                	Total forwarding updates from LSD to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_forwarding_added_or_modify_messages
                
                	Total p2mp forwarding add/modify messages from MRIB to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_forwarding_delete_messages
                
                	Total p2mp forwarding del messages from MRIB to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_forwarding_drop_messages
                
                	Total p2mp forwarding messages dropped from MRIB to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_forwarding_updates
                
                	Total forwarding updates from MRIB to LFDs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_p2mp_iir_forwarding_drop_messages
                
                	Total IIR triggered p2mp forwarding MRIB messages dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.deleted_stale_entries = None
                    self.highest_label = None
                    self.ignore_protect = None
                    self.ipv4_imposition_entries = None
                    self.label_switched_entries = None
                    self.lowest_label = None
                    self.lrpf_entries = None
                    self.mte_head_entries = None
                    self.mte_ll_entries = None
                    self.mte_midpoint_entries = None
                    self.num_lsp = None
                    self.protected_label_switched_entries = None
                    self.reserved_label_entries = None
                    self.te_frr_head_entries = None
                    self.te_frr_interface_entries = None
                    self.te_frr_internal_entries = None
                    self.te_frr_mid_points_entries = None
                    self.te_frr_next_hop_entries = None
                    self.te_head_entries = None
                    self.te_internal_entries = None
                    self.te_mid_points_entries = None
                    self.total_forwarding_update_messages = None
                    self.total_forwarding_updates = None
                    self.total_p2mp_forwarding_added_or_modify_messages = None
                    self.total_p2mp_forwarding_delete_messages = None
                    self.total_p2mp_forwarding_drop_messages = None
                    self.total_p2mp_forwarding_updates = None
                    self.total_p2mp_iir_forwarding_drop_messages = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:forwarding-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.deleted_stale_entries is not None:
                        return True

                    if self.highest_label is not None:
                        return True

                    if self.ignore_protect is not None:
                        return True

                    if self.ipv4_imposition_entries is not None:
                        return True

                    if self.label_switched_entries is not None:
                        return True

                    if self.lowest_label is not None:
                        return True

                    if self.lrpf_entries is not None:
                        return True

                    if self.mte_head_entries is not None:
                        return True

                    if self.mte_ll_entries is not None:
                        return True

                    if self.mte_midpoint_entries is not None:
                        return True

                    if self.num_lsp is not None:
                        return True

                    if self.protected_label_switched_entries is not None:
                        return True

                    if self.reserved_label_entries is not None:
                        return True

                    if self.te_frr_head_entries is not None:
                        return True

                    if self.te_frr_interface_entries is not None:
                        return True

                    if self.te_frr_internal_entries is not None:
                        return True

                    if self.te_frr_mid_points_entries is not None:
                        return True

                    if self.te_frr_next_hop_entries is not None:
                        return True

                    if self.te_head_entries is not None:
                        return True

                    if self.te_internal_entries is not None:
                        return True

                    if self.te_mid_points_entries is not None:
                        return True

                    if self.total_forwarding_update_messages is not None:
                        return True

                    if self.total_forwarding_updates is not None:
                        return True

                    if self.total_p2mp_forwarding_added_or_modify_messages is not None:
                        return True

                    if self.total_p2mp_forwarding_delete_messages is not None:
                        return True

                    if self.total_p2mp_forwarding_drop_messages is not None:
                        return True

                    if self.total_p2mp_forwarding_updates is not None:
                        return True

                    if self.total_p2mp_iir_forwarding_drop_messages is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['FibMpls.Nodes.Node.ForwardingSummary']['meta_info']


            class FrrLogs(object):
                """
                FRR Log Table
                
                .. attribute:: frr_log
                
                	FRR Log information
                	**type**\: list of  :py:class:`FrrLog <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrLogs.FrrLog>`
                
                

                """

                _prefix = 'fib-common-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.frr_log = YList()
                    self.frr_log.parent = self
                    self.frr_log.name = 'frr_log'


                class FrrLog(object):
                    """
                    FRR Log information
                    
                    .. attribute:: event_id  <key>
                    
                    	Event ID
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: fast_bundle_member_down_interface
                    
                    	Fast Bundle Member Down Interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: frr_event_node_id
                    
                    	Node on which the FRR event happened
                    	**type**\:  str
                    
                    	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
                    
                    .. attribute:: main_processing
                    
                    	Main Processing for FRR
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: next_hop
                    
                    	Next Hop
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: number_of_rewrites_affected
                    
                    	Number of rewrites affected
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: protected_frr_interface_name
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: start_time
                    
                    	Time of FRR event processing start, Seconds in UTC, and Nano Seconds
                    	**type**\:  :py:class:`StartTime <ydk.models.cisco_ios_xr.Cisco_IOS_XR_fib_common_oper.FibMpls.Nodes.Node.FrrLogs.FrrLog.StartTime>`
                    
                    .. attribute:: switching_time_nsecs
                    
                    	Time to switch rewrites [nsecs]
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'fib-common-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.event_id = None
                        self.fast_bundle_member_down_interface = None
                        self.frr_event_node_id = None
                        self.main_processing = None
                        self.next_hop = None
                        self.number_of_rewrites_affected = None
                        self.protected_frr_interface_name = None
                        self.start_time = FibMpls.Nodes.Node.FrrLogs.FrrLog.StartTime()
                        self.start_time.parent = self
                        self.switching_time_nsecs = None


                    class StartTime(object):
                        """
                        Time of FRR event processing start, Seconds in
                        UTC, and Nano Seconds
                        
                        .. attribute:: nanoseconds
                        
                        	Nanoseconds part of time value
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: seconds
                        
                        	Seconds part of time valueiin UTC
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        

                        """

                        _prefix = 'fib-common-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.nanoseconds = None
                            self.seconds = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:start-time'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.nanoseconds is not None:
                                return True

                            if self.seconds is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                            return meta._meta_table['FibMpls.Nodes.Node.FrrLogs.FrrLog.StartTime']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.event_id is None:
                            raise YPYModelError('Key property event_id is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-log[Cisco-IOS-XR-fib-common-oper:event-id = ' + str(self.event_id) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.event_id is not None:
                            return True

                        if self.fast_bundle_member_down_interface is not None:
                            return True

                        if self.frr_event_node_id is not None:
                            return True

                        if self.main_processing is not None:
                            return True

                        if self.next_hop is not None:
                            return True

                        if self.number_of_rewrites_affected is not None:
                            return True

                        if self.protected_frr_interface_name is not None:
                            return True

                        if self.start_time is not None and self.start_time._has_data():
                            return True

                        if self.switching_time_nsecs is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                        return meta._meta_table['FibMpls.Nodes.Node.FrrLogs.FrrLog']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-fib-common-oper:frr-logs'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.frr_log is not None:
                        for child_ref in self.frr_log:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                    return meta._meta_table['FibMpls.Nodes.Node.FrrLogs']['meta_info']

            @property
            def _common_path(self):
                if self.node_name is None:
                    raise YPYModelError('Key property node_name is None')

                return '/Cisco-IOS-XR-fib-common-oper:fib-mpls/Cisco-IOS-XR-fib-common-oper:nodes/Cisco-IOS-XR-fib-common-oper:node[Cisco-IOS-XR-fib-common-oper:node-name = ' + str(self.node_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node_name is not None:
                    return True

                if self.forwarding_summary is not None and self.forwarding_summary._has_data():
                    return True

                if self.frr_database is not None and self.frr_database._has_data():
                    return True

                if self.frr_logs is not None and self.frr_logs._has_data():
                    return True

                if self.label_fib is not None and self.label_fib._has_data():
                    return True

                if self.tunnel is not None and self.tunnel._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
                return meta._meta_table['FibMpls.Nodes.Node']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-fib-common-oper:fib-mpls/Cisco-IOS-XR-fib-common-oper:nodes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.node is not None:
                for child_ref in self.node:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
            return meta._meta_table['FibMpls.Nodes']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-fib-common-oper:fib-mpls'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.nodes is not None and self.nodes._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_fib_common_oper as meta
        return meta._meta_table['FibMpls']['meta_info']


