""" Cisco_IOS_XR_ip_static_cfg 

This module contains a collection of YANG definitions
for Cisco IOS\-XR ip\-static package configuration.

This module contains definitions
for the following management objects\:
  router\-static\: This class represents router static
    configuration

Copyright (c) 2013\-2015 by Cisco Systems, Inc.
All rights reserved.

"""


import re
import collections

from enum import Enum

from ydk.types import Empty, YList, YLeafList, DELETE, Decimal64, FixedBitsDict

from ydk.errors import YPYError, YPYModelError




class RouterStatic(object):
    """
    This class represents router static configuration
    
    .. attribute:: default_vrf
    
    	Default VRF configuration
    	**type**\:  :py:class:`DefaultVrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf>`
    
    .. attribute:: maximum_routes
    
    	The maximum number of static routes that can be configured
    	**type**\:  :py:class:`MaximumRoutes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.MaximumRoutes>`
    
    .. attribute:: vrfs
    
    	VRF static configuration container
    	**type**\:  :py:class:`Vrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs>`
    
    

    """

    _prefix = 'ip-static-cfg'
    _revision = '2015-09-10'

    def __init__(self):
        self.default_vrf = RouterStatic.DefaultVrf()
        self.default_vrf.parent = self
        self.maximum_routes = RouterStatic.MaximumRoutes()
        self.maximum_routes.parent = self
        self.vrfs = RouterStatic.Vrfs()
        self.vrfs.parent = self


    class Vrfs(object):
        """
        VRF static configuration container
        
        .. attribute:: vrf
        
        	VRF static configuration
        	**type**\: list of  :py:class:`Vrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf>`
        
        

        """

        _prefix = 'ip-static-cfg'
        _revision = '2015-09-10'

        def __init__(self):
            self.parent = None
            self.vrf = YList()
            self.vrf.parent = self
            self.vrf.name = 'vrf'


        class Vrf(object):
            """
            VRF static configuration
            
            .. attribute:: vrf_name  <key>
            
            	VRF name
            	**type**\:  str
            
            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
            
            .. attribute:: address_family
            
            	Address family configuration
            	**type**\:  :py:class:`AddressFamily <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily>`
            
            

            """

            _prefix = 'ip-static-cfg'
            _revision = '2015-09-10'

            def __init__(self):
                self.parent = None
                self.vrf_name = None
                self.address_family = RouterStatic.Vrfs.Vrf.AddressFamily()
                self.address_family.parent = self


            class AddressFamily(object):
                """
                Address family configuration
                
                .. attribute:: vrfipv4
                
                	IPv4 static configuration
                	**type**\:  :py:class:`Vrfipv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4>`
                
                .. attribute:: vrfipv6
                
                	IPv6 static configuration
                	**type**\:  :py:class:`Vrfipv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6>`
                
                

                """

                _prefix = 'ip-static-cfg'
                _revision = '2015-09-10'

                def __init__(self):
                    self.parent = None
                    self.vrfipv4 = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4()
                    self.vrfipv4.parent = self
                    self.vrfipv6 = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6()
                    self.vrfipv6.parent = self


                class Vrfipv4(object):
                    """
                    IPv4 static configuration
                    
                    .. attribute:: vrf_multicast
                    
                    	Multicast static configuration
                    	**type**\:  :py:class:`VrfMulticast <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast>`
                    
                    .. attribute:: vrf_unicast
                    
                    	Unicast static configuration
                    	**type**\:  :py:class:`VrfUnicast <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast>`
                    
                    

                    """

                    _prefix = 'ip-static-cfg'
                    _revision = '2015-09-10'

                    def __init__(self):
                        self.parent = None
                        self.vrf_multicast = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast()
                        self.vrf_multicast.parent = self
                        self.vrf_unicast = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast()
                        self.vrf_unicast.parent = self


                    class VrfUnicast(object):
                        """
                        Unicast static configuration
                        
                        .. attribute:: default_topology
                        
                        	Default topology configuration
                        	**type**\:  :py:class:`DefaultTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology>`
                        
                        .. attribute:: topologies
                        
                        	Topology static configuration container
                        	**type**\:  :py:class:`Topologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies>`
                        
                        .. attribute:: vrf_prefixes
                        
                        	The set of all Static Topologies for this AFI
                        	**type**\:  :py:class:`VrfPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.default_topology = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology()
                            self.default_topology.parent = self
                            self.topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies()
                            self.topologies.parent = self
                            self.vrf_prefixes = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes()
                            self.vrf_prefixes.parent = self


                        class Topologies(object):
                            """
                            Topology static configuration container
                            
                            .. attribute:: topology
                            
                            	Topology static configuration
                            	**type**\: list of  :py:class:`Topology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.topology = YList()
                                self.topology.parent = self
                                self.topology.name = 'topology'


                            class Topology(object):
                                """
                                Topology static configuration
                                
                                .. attribute:: topology_name  <key>
                                
                                	Topology name
                                	**type**\:  str
                                
                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                
                                .. attribute:: vrf_prefix_topologies
                                
                                	The set of all Static Topologies for this AFI
                                	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.topology_name = None
                                    self.vrf_prefix_topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies()
                                    self.vrf_prefix_topologies.parent = self


                                class VrfPrefixTopologies(object):
                                    """
                                    The set of all Static Topologies for this AFI.
                                    
                                    .. attribute:: vrf_prefix_topology
                                    
                                    	A static route
                                    	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_prefix_topology = YList()
                                        self.vrf_prefix_topology.parent = self
                                        self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                    class VrfPrefixTopology(object):
                                        """
                                        A static route
                                        
                                        .. attribute:: prefix  <key>
                                        
                                        	Destination prefix
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: prefix_length  <key>
                                        
                                        	Destination prefix length
                                        	**type**\:  int
                                        
                                        	**range:** 0..128
                                        
                                        .. attribute:: vrf_route
                                        
                                        	A connected or recursive  static route
                                        	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.prefix = None
                                            self.prefix_length = None
                                            self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                            self.vrf_route.parent = self


                                        class VrfRoute(object):
                                            """
                                            A connected or recursive  static route
                                            
                                            .. attribute:: segment_route_next_hop_table
                                            
                                            	The set of nexthop information configured for this route
                                            	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                            
                                            .. attribute:: vrf_next_hop_table
                                            
                                            	The set of nexthop information configured for this route
                                            	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                                self.segment_route_next_hop_table.parent = self
                                                self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                                self.vrf_next_hop_table.parent = self


                                            class SegmentRouteNextHopTable(object):
                                                """
                                                The set of nexthop information configured for
                                                this route
                                                
                                                .. attribute:: vrf_next_hop_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.vrf_next_hop_explicit_path_name = YList()
                                                    self.vrf_next_hop_explicit_path_name.parent = self
                                                    self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                    self.vrf_next_hop_interface_name = YList()
                                                    self.vrf_next_hop_interface_name.parent = self
                                                    self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                    self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                    self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                    self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address = YList()
                                                    self.vrf_next_hop_next_hop_address.parent = self
                                                    self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                                class VrfNextHopInterfaceName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                                class VrfNextHopInterfaceNameNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddressExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                                class VrfNextHopExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.vrf_next_hop_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                            class VrfNextHopTable(object):
                                                """
                                                The set of nexthop information configured for
                                                this route
                                                
                                                .. attribute:: vrf_next_hop_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.vrf_next_hop_explicit_path_name = YList()
                                                    self.vrf_next_hop_explicit_path_name.parent = self
                                                    self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                    self.vrf_next_hop_interface_name = YList()
                                                    self.vrf_next_hop_interface_name.parent = self
                                                    self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                    self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                    self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                    self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address = YList()
                                                    self.vrf_next_hop_next_hop_address.parent = self
                                                    self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                                class VrfNextHopInterfaceName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                                class VrfNextHopInterfaceNameNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddressExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                                class VrfNextHopExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.vrf_next_hop_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                    return True

                                                if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.prefix is None:
                                                raise YPYModelError('Key property prefix is None')
                                            if self.prefix_length is None:
                                                raise YPYModelError('Key property prefix_length is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.prefix is not None:
                                                return True

                                            if self.prefix_length is not None:
                                                return True

                                            if self.vrf_route is not None and self.vrf_route._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_prefix_topology is not None:
                                            for child_ref in self.vrf_prefix_topology:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.topology_name is None:
                                        raise YPYModelError('Key property topology_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:topology[Cisco-IOS-XR-ip-static-cfg:topology-name = ' + str(self.topology_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.topology_name is not None:
                                        return True

                                    if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:topologies'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.topology is not None:
                                    for child_ref in self.topology:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies']['meta_info']


                        class VrfPrefixes(object):
                            """
                            The set of all Static Topologies for this AFI.
                            
                            .. attribute:: vrf_prefix
                            
                            	A static route
                            	**type**\: list of  :py:class:`VrfPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix = YList()
                                self.vrf_prefix.parent = self
                                self.vrf_prefix.name = 'vrf_prefix'


                            class VrfPrefix(object):
                                """
                                A static route
                                
                                .. attribute:: prefix  <key>
                                
                                	Destination prefix
                                	**type**\: one of the below types:
                                
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                .. attribute:: prefix_length  <key>
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: vrf_route
                                
                                	A connected or recursive  static route
                                	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute()
                                    self.vrf_route.parent = self


                                class VrfRoute(object):
                                    """
                                    A connected or recursive  static route
                                    
                                    .. attribute:: segment_route_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable>`
                                    
                                    .. attribute:: vrf_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable()
                                        self.segment_route_next_hop_table.parent = self
                                        self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable()
                                        self.vrf_next_hop_table.parent = self


                                    class SegmentRouteNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                    class VrfNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                            return True

                                        if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.prefix is None:
                                        raise YPYModelError('Key property prefix is None')
                                    if self.prefix_length is None:
                                        raise YPYModelError('Key property prefix_length is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.vrf_route is not None and self.vrf_route._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix is not None:
                                    for child_ref in self.vrf_prefix:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes']['meta_info']


                        class DefaultTopology(object):
                            """
                            Default topology configuration
                            
                            .. attribute:: vrf_prefix_topologies
                            
                            	The set of all Static Topologies for this AFI
                            	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix_topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies()
                                self.vrf_prefix_topologies.parent = self


                            class VrfPrefixTopologies(object):
                                """
                                The set of all Static Topologies for this AFI.
                                
                                .. attribute:: vrf_prefix_topology
                                
                                	A static route
                                	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.vrf_prefix_topology = YList()
                                    self.vrf_prefix_topology.parent = self
                                    self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                class VrfPrefixTopology(object):
                                    """
                                    A static route
                                    
                                    .. attribute:: prefix  <key>
                                    
                                    	Destination prefix
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_length  <key>
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: vrf_route
                                    
                                    	A connected or recursive  static route
                                    	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                        self.vrf_route.parent = self


                                    class VrfRoute(object):
                                        """
                                        A connected or recursive  static route
                                        
                                        .. attribute:: segment_route_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                        
                                        .. attribute:: vrf_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                            self.segment_route_next_hop_table.parent = self
                                            self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                            self.vrf_next_hop_table.parent = self


                                        class SegmentRouteNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                        class VrfNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                return True

                                            if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.prefix is None:
                                            raise YPYModelError('Key property prefix is None')
                                        if self.prefix_length is None:
                                            raise YPYModelError('Key property prefix_length is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.vrf_route is not None and self.vrf_route._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.vrf_prefix_topology is not None:
                                        for child_ref in self.vrf_prefix_topology:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:default-topology'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-unicast'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.default_topology is not None and self.default_topology._has_data():
                                return True

                            if self.topologies is not None and self.topologies._has_data():
                                return True

                            if self.vrf_prefixes is not None and self.vrf_prefixes._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfUnicast']['meta_info']


                    class VrfMulticast(object):
                        """
                        Multicast static configuration
                        
                        .. attribute:: default_topology
                        
                        	Default topology configuration
                        	**type**\:  :py:class:`DefaultTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology>`
                        
                        .. attribute:: topologies
                        
                        	Topology static configuration container
                        	**type**\:  :py:class:`Topologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies>`
                        
                        .. attribute:: vrf_prefixes
                        
                        	The set of all Static Topologies for this AFI
                        	**type**\:  :py:class:`VrfPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.default_topology = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology()
                            self.default_topology.parent = self
                            self.topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies()
                            self.topologies.parent = self
                            self.vrf_prefixes = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes()
                            self.vrf_prefixes.parent = self


                        class Topologies(object):
                            """
                            Topology static configuration container
                            
                            .. attribute:: topology
                            
                            	Topology static configuration
                            	**type**\: list of  :py:class:`Topology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.topology = YList()
                                self.topology.parent = self
                                self.topology.name = 'topology'


                            class Topology(object):
                                """
                                Topology static configuration
                                
                                .. attribute:: topology_name  <key>
                                
                                	Topology name
                                	**type**\:  str
                                
                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                
                                .. attribute:: vrf_prefix_topologies
                                
                                	The set of all Static Topologies for this AFI
                                	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.topology_name = None
                                    self.vrf_prefix_topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies()
                                    self.vrf_prefix_topologies.parent = self


                                class VrfPrefixTopologies(object):
                                    """
                                    The set of all Static Topologies for this AFI.
                                    
                                    .. attribute:: vrf_prefix_topology
                                    
                                    	A static route
                                    	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_prefix_topology = YList()
                                        self.vrf_prefix_topology.parent = self
                                        self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                    class VrfPrefixTopology(object):
                                        """
                                        A static route
                                        
                                        .. attribute:: prefix  <key>
                                        
                                        	Destination prefix
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: prefix_length  <key>
                                        
                                        	Destination prefix length
                                        	**type**\:  int
                                        
                                        	**range:** 0..128
                                        
                                        .. attribute:: vrf_route
                                        
                                        	A connected or recursive  static route
                                        	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.prefix = None
                                            self.prefix_length = None
                                            self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                            self.vrf_route.parent = self


                                        class VrfRoute(object):
                                            """
                                            A connected or recursive  static route
                                            
                                            .. attribute:: segment_route_next_hop_table
                                            
                                            	The set of nexthop information configured for this route
                                            	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                            
                                            .. attribute:: vrf_next_hop_table
                                            
                                            	The set of nexthop information configured for this route
                                            	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                                self.segment_route_next_hop_table.parent = self
                                                self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                                self.vrf_next_hop_table.parent = self


                                            class SegmentRouteNextHopTable(object):
                                                """
                                                The set of nexthop information configured for
                                                this route
                                                
                                                .. attribute:: vrf_next_hop_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.vrf_next_hop_explicit_path_name = YList()
                                                    self.vrf_next_hop_explicit_path_name.parent = self
                                                    self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                    self.vrf_next_hop_interface_name = YList()
                                                    self.vrf_next_hop_interface_name.parent = self
                                                    self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                    self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                    self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                    self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address = YList()
                                                    self.vrf_next_hop_next_hop_address.parent = self
                                                    self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                                class VrfNextHopInterfaceName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                                class VrfNextHopInterfaceNameNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddressExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                                class VrfNextHopExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.vrf_next_hop_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                            class VrfNextHopTable(object):
                                                """
                                                The set of nexthop information configured for
                                                this route
                                                
                                                .. attribute:: vrf_next_hop_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.vrf_next_hop_explicit_path_name = YList()
                                                    self.vrf_next_hop_explicit_path_name.parent = self
                                                    self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                    self.vrf_next_hop_interface_name = YList()
                                                    self.vrf_next_hop_interface_name.parent = self
                                                    self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                    self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                    self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                    self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address = YList()
                                                    self.vrf_next_hop_next_hop_address.parent = self
                                                    self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                                class VrfNextHopInterfaceName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                                class VrfNextHopInterfaceNameNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddressExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                                class VrfNextHopExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.vrf_next_hop_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                    return True

                                                if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.prefix is None:
                                                raise YPYModelError('Key property prefix is None')
                                            if self.prefix_length is None:
                                                raise YPYModelError('Key property prefix_length is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.prefix is not None:
                                                return True

                                            if self.prefix_length is not None:
                                                return True

                                            if self.vrf_route is not None and self.vrf_route._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_prefix_topology is not None:
                                            for child_ref in self.vrf_prefix_topology:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.topology_name is None:
                                        raise YPYModelError('Key property topology_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:topology[Cisco-IOS-XR-ip-static-cfg:topology-name = ' + str(self.topology_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.topology_name is not None:
                                        return True

                                    if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:topologies'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.topology is not None:
                                    for child_ref in self.topology:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies']['meta_info']


                        class VrfPrefixes(object):
                            """
                            The set of all Static Topologies for this AFI.
                            
                            .. attribute:: vrf_prefix
                            
                            	A static route
                            	**type**\: list of  :py:class:`VrfPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix = YList()
                                self.vrf_prefix.parent = self
                                self.vrf_prefix.name = 'vrf_prefix'


                            class VrfPrefix(object):
                                """
                                A static route
                                
                                .. attribute:: prefix  <key>
                                
                                	Destination prefix
                                	**type**\: one of the below types:
                                
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                .. attribute:: prefix_length  <key>
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: vrf_route
                                
                                	A connected or recursive  static route
                                	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute()
                                    self.vrf_route.parent = self


                                class VrfRoute(object):
                                    """
                                    A connected or recursive  static route
                                    
                                    .. attribute:: segment_route_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable>`
                                    
                                    .. attribute:: vrf_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable()
                                        self.segment_route_next_hop_table.parent = self
                                        self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable()
                                        self.vrf_next_hop_table.parent = self


                                    class SegmentRouteNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                    class VrfNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                            return True

                                        if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.prefix is None:
                                        raise YPYModelError('Key property prefix is None')
                                    if self.prefix_length is None:
                                        raise YPYModelError('Key property prefix_length is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.vrf_route is not None and self.vrf_route._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix is not None:
                                    for child_ref in self.vrf_prefix:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes']['meta_info']


                        class DefaultTopology(object):
                            """
                            Default topology configuration
                            
                            .. attribute:: vrf_prefix_topologies
                            
                            	The set of all Static Topologies for this AFI
                            	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix_topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies()
                                self.vrf_prefix_topologies.parent = self


                            class VrfPrefixTopologies(object):
                                """
                                The set of all Static Topologies for this AFI.
                                
                                .. attribute:: vrf_prefix_topology
                                
                                	A static route
                                	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.vrf_prefix_topology = YList()
                                    self.vrf_prefix_topology.parent = self
                                    self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                class VrfPrefixTopology(object):
                                    """
                                    A static route
                                    
                                    .. attribute:: prefix  <key>
                                    
                                    	Destination prefix
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_length  <key>
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: vrf_route
                                    
                                    	A connected or recursive  static route
                                    	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                        self.vrf_route.parent = self


                                    class VrfRoute(object):
                                        """
                                        A connected or recursive  static route
                                        
                                        .. attribute:: segment_route_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                        
                                        .. attribute:: vrf_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                            self.segment_route_next_hop_table.parent = self
                                            self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                            self.vrf_next_hop_table.parent = self


                                        class SegmentRouteNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                        class VrfNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                return True

                                            if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.prefix is None:
                                            raise YPYModelError('Key property prefix is None')
                                        if self.prefix_length is None:
                                            raise YPYModelError('Key property prefix_length is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.vrf_route is not None and self.vrf_route._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.vrf_prefix_topology is not None:
                                        for child_ref in self.vrf_prefix_topology:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:default-topology'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-multicast'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.default_topology is not None and self.default_topology._has_data():
                                return True

                            if self.topologies is not None and self.topologies._has_data():
                                return True

                            if self.vrf_prefixes is not None and self.vrf_prefixes._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4.VrfMulticast']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrfipv4'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.vrf_multicast is not None and self.vrf_multicast._has_data():
                            return True

                        if self.vrf_unicast is not None and self.vrf_unicast._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv4']['meta_info']


                class Vrfipv6(object):
                    """
                    IPv6 static configuration
                    
                    .. attribute:: vrf_multicast
                    
                    	Multicast static configuration
                    	**type**\:  :py:class:`VrfMulticast <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast>`
                    
                    .. attribute:: vrf_unicast
                    
                    	Unicast static configuration
                    	**type**\:  :py:class:`VrfUnicast <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast>`
                    
                    

                    """

                    _prefix = 'ip-static-cfg'
                    _revision = '2015-09-10'

                    def __init__(self):
                        self.parent = None
                        self.vrf_multicast = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast()
                        self.vrf_multicast.parent = self
                        self.vrf_unicast = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast()
                        self.vrf_unicast.parent = self


                    class VrfUnicast(object):
                        """
                        Unicast static configuration
                        
                        .. attribute:: default_topology
                        
                        	Default topology configuration
                        	**type**\:  :py:class:`DefaultTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology>`
                        
                        .. attribute:: topologies
                        
                        	Topology static configuration container
                        	**type**\:  :py:class:`Topologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies>`
                        
                        .. attribute:: vrf_prefixes
                        
                        	The set of all Static Topologies for this AFI
                        	**type**\:  :py:class:`VrfPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.default_topology = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology()
                            self.default_topology.parent = self
                            self.topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies()
                            self.topologies.parent = self
                            self.vrf_prefixes = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes()
                            self.vrf_prefixes.parent = self


                        class Topologies(object):
                            """
                            Topology static configuration container
                            
                            .. attribute:: topology
                            
                            	Topology static configuration
                            	**type**\: list of  :py:class:`Topology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.topology = YList()
                                self.topology.parent = self
                                self.topology.name = 'topology'


                            class Topology(object):
                                """
                                Topology static configuration
                                
                                .. attribute:: topology_name  <key>
                                
                                	Topology name
                                	**type**\:  str
                                
                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                
                                .. attribute:: vrf_prefix_topologies
                                
                                	The set of all Static Topologies for this AFI
                                	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.topology_name = None
                                    self.vrf_prefix_topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies()
                                    self.vrf_prefix_topologies.parent = self


                                class VrfPrefixTopologies(object):
                                    """
                                    The set of all Static Topologies for this AFI.
                                    
                                    .. attribute:: vrf_prefix_topology
                                    
                                    	A static route
                                    	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_prefix_topology = YList()
                                        self.vrf_prefix_topology.parent = self
                                        self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                    class VrfPrefixTopology(object):
                                        """
                                        A static route
                                        
                                        .. attribute:: prefix  <key>
                                        
                                        	Destination prefix
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: prefix_length  <key>
                                        
                                        	Destination prefix length
                                        	**type**\:  int
                                        
                                        	**range:** 0..128
                                        
                                        .. attribute:: vrf_route
                                        
                                        	A connected or recursive  static route
                                        	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.prefix = None
                                            self.prefix_length = None
                                            self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                            self.vrf_route.parent = self


                                        class VrfRoute(object):
                                            """
                                            A connected or recursive  static route
                                            
                                            .. attribute:: segment_route_next_hop_table
                                            
                                            	The set of nexthop information configured for this route
                                            	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                            
                                            .. attribute:: vrf_next_hop_table
                                            
                                            	The set of nexthop information configured for this route
                                            	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                                self.segment_route_next_hop_table.parent = self
                                                self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                                self.vrf_next_hop_table.parent = self


                                            class SegmentRouteNextHopTable(object):
                                                """
                                                The set of nexthop information configured for
                                                this route
                                                
                                                .. attribute:: vrf_next_hop_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.vrf_next_hop_explicit_path_name = YList()
                                                    self.vrf_next_hop_explicit_path_name.parent = self
                                                    self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                    self.vrf_next_hop_interface_name = YList()
                                                    self.vrf_next_hop_interface_name.parent = self
                                                    self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                    self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                    self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                    self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address = YList()
                                                    self.vrf_next_hop_next_hop_address.parent = self
                                                    self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                                class VrfNextHopInterfaceName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                                class VrfNextHopInterfaceNameNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddressExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                                class VrfNextHopExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.vrf_next_hop_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                            class VrfNextHopTable(object):
                                                """
                                                The set of nexthop information configured for
                                                this route
                                                
                                                .. attribute:: vrf_next_hop_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.vrf_next_hop_explicit_path_name = YList()
                                                    self.vrf_next_hop_explicit_path_name.parent = self
                                                    self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                    self.vrf_next_hop_interface_name = YList()
                                                    self.vrf_next_hop_interface_name.parent = self
                                                    self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                    self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                    self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                    self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address = YList()
                                                    self.vrf_next_hop_next_hop_address.parent = self
                                                    self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                                class VrfNextHopInterfaceName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                                class VrfNextHopInterfaceNameNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddressExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                                class VrfNextHopExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.vrf_next_hop_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                    return True

                                                if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.prefix is None:
                                                raise YPYModelError('Key property prefix is None')
                                            if self.prefix_length is None:
                                                raise YPYModelError('Key property prefix_length is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.prefix is not None:
                                                return True

                                            if self.prefix_length is not None:
                                                return True

                                            if self.vrf_route is not None and self.vrf_route._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_prefix_topology is not None:
                                            for child_ref in self.vrf_prefix_topology:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.topology_name is None:
                                        raise YPYModelError('Key property topology_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:topology[Cisco-IOS-XR-ip-static-cfg:topology-name = ' + str(self.topology_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.topology_name is not None:
                                        return True

                                    if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:topologies'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.topology is not None:
                                    for child_ref in self.topology:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies']['meta_info']


                        class VrfPrefixes(object):
                            """
                            The set of all Static Topologies for this AFI.
                            
                            .. attribute:: vrf_prefix
                            
                            	A static route
                            	**type**\: list of  :py:class:`VrfPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix = YList()
                                self.vrf_prefix.parent = self
                                self.vrf_prefix.name = 'vrf_prefix'


                            class VrfPrefix(object):
                                """
                                A static route
                                
                                .. attribute:: prefix  <key>
                                
                                	Destination prefix
                                	**type**\: one of the below types:
                                
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                .. attribute:: prefix_length  <key>
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: vrf_route
                                
                                	A connected or recursive  static route
                                	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute()
                                    self.vrf_route.parent = self


                                class VrfRoute(object):
                                    """
                                    A connected or recursive  static route
                                    
                                    .. attribute:: segment_route_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable>`
                                    
                                    .. attribute:: vrf_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable()
                                        self.segment_route_next_hop_table.parent = self
                                        self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable()
                                        self.vrf_next_hop_table.parent = self


                                    class SegmentRouteNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                    class VrfNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                            return True

                                        if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.prefix is None:
                                        raise YPYModelError('Key property prefix is None')
                                    if self.prefix_length is None:
                                        raise YPYModelError('Key property prefix_length is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.vrf_route is not None and self.vrf_route._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix is not None:
                                    for child_ref in self.vrf_prefix:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes']['meta_info']


                        class DefaultTopology(object):
                            """
                            Default topology configuration
                            
                            .. attribute:: vrf_prefix_topologies
                            
                            	The set of all Static Topologies for this AFI
                            	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix_topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies()
                                self.vrf_prefix_topologies.parent = self


                            class VrfPrefixTopologies(object):
                                """
                                The set of all Static Topologies for this AFI.
                                
                                .. attribute:: vrf_prefix_topology
                                
                                	A static route
                                	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.vrf_prefix_topology = YList()
                                    self.vrf_prefix_topology.parent = self
                                    self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                class VrfPrefixTopology(object):
                                    """
                                    A static route
                                    
                                    .. attribute:: prefix  <key>
                                    
                                    	Destination prefix
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_length  <key>
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: vrf_route
                                    
                                    	A connected or recursive  static route
                                    	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                        self.vrf_route.parent = self


                                    class VrfRoute(object):
                                        """
                                        A connected or recursive  static route
                                        
                                        .. attribute:: segment_route_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                        
                                        .. attribute:: vrf_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                            self.segment_route_next_hop_table.parent = self
                                            self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                            self.vrf_next_hop_table.parent = self


                                        class SegmentRouteNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                        class VrfNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                return True

                                            if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.prefix is None:
                                            raise YPYModelError('Key property prefix is None')
                                        if self.prefix_length is None:
                                            raise YPYModelError('Key property prefix_length is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.vrf_route is not None and self.vrf_route._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.vrf_prefix_topology is not None:
                                        for child_ref in self.vrf_prefix_topology:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:default-topology'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-unicast'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.default_topology is not None and self.default_topology._has_data():
                                return True

                            if self.topologies is not None and self.topologies._has_data():
                                return True

                            if self.vrf_prefixes is not None and self.vrf_prefixes._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfUnicast']['meta_info']


                    class VrfMulticast(object):
                        """
                        Multicast static configuration
                        
                        .. attribute:: default_topology
                        
                        	Default topology configuration
                        	**type**\:  :py:class:`DefaultTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology>`
                        
                        .. attribute:: topologies
                        
                        	Topology static configuration container
                        	**type**\:  :py:class:`Topologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies>`
                        
                        .. attribute:: vrf_prefixes
                        
                        	The set of all Static Topologies for this AFI
                        	**type**\:  :py:class:`VrfPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.default_topology = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology()
                            self.default_topology.parent = self
                            self.topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies()
                            self.topologies.parent = self
                            self.vrf_prefixes = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes()
                            self.vrf_prefixes.parent = self


                        class Topologies(object):
                            """
                            Topology static configuration container
                            
                            .. attribute:: topology
                            
                            	Topology static configuration
                            	**type**\: list of  :py:class:`Topology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.topology = YList()
                                self.topology.parent = self
                                self.topology.name = 'topology'


                            class Topology(object):
                                """
                                Topology static configuration
                                
                                .. attribute:: topology_name  <key>
                                
                                	Topology name
                                	**type**\:  str
                                
                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                
                                .. attribute:: vrf_prefix_topologies
                                
                                	The set of all Static Topologies for this AFI
                                	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.topology_name = None
                                    self.vrf_prefix_topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies()
                                    self.vrf_prefix_topologies.parent = self


                                class VrfPrefixTopologies(object):
                                    """
                                    The set of all Static Topologies for this AFI.
                                    
                                    .. attribute:: vrf_prefix_topology
                                    
                                    	A static route
                                    	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_prefix_topology = YList()
                                        self.vrf_prefix_topology.parent = self
                                        self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                    class VrfPrefixTopology(object):
                                        """
                                        A static route
                                        
                                        .. attribute:: prefix  <key>
                                        
                                        	Destination prefix
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: prefix_length  <key>
                                        
                                        	Destination prefix length
                                        	**type**\:  int
                                        
                                        	**range:** 0..128
                                        
                                        .. attribute:: vrf_route
                                        
                                        	A connected or recursive  static route
                                        	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.prefix = None
                                            self.prefix_length = None
                                            self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                            self.vrf_route.parent = self


                                        class VrfRoute(object):
                                            """
                                            A connected or recursive  static route
                                            
                                            .. attribute:: segment_route_next_hop_table
                                            
                                            	The set of nexthop information configured for this route
                                            	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                            
                                            .. attribute:: vrf_next_hop_table
                                            
                                            	The set of nexthop information configured for this route
                                            	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                                self.segment_route_next_hop_table.parent = self
                                                self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                                self.vrf_next_hop_table.parent = self


                                            class SegmentRouteNextHopTable(object):
                                                """
                                                The set of nexthop information configured for
                                                this route
                                                
                                                .. attribute:: vrf_next_hop_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.vrf_next_hop_explicit_path_name = YList()
                                                    self.vrf_next_hop_explicit_path_name.parent = self
                                                    self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                    self.vrf_next_hop_interface_name = YList()
                                                    self.vrf_next_hop_interface_name.parent = self
                                                    self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                    self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                    self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                    self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address = YList()
                                                    self.vrf_next_hop_next_hop_address.parent = self
                                                    self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                                class VrfNextHopInterfaceName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                                class VrfNextHopInterfaceNameNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddressExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                                class VrfNextHopExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.vrf_next_hop_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                            class VrfNextHopTable(object):
                                                """
                                                The set of nexthop information configured for
                                                this route
                                                
                                                .. attribute:: vrf_next_hop_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                                
                                                .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                                
                                                .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                                
                                                	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                                	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.vrf_next_hop_explicit_path_name = YList()
                                                    self.vrf_next_hop_explicit_path_name.parent = self
                                                    self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                    self.vrf_next_hop_interface_name = YList()
                                                    self.vrf_next_hop_interface_name.parent = self
                                                    self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                    self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                    self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                    self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address = YList()
                                                    self.vrf_next_hop_next_hop_address.parent = self
                                                    self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                    self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                                class VrfNextHopInterfaceName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                                class VrfNextHopInterfaceNameNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: interface_name  <key>
                                                    
                                                    	Forwarding interface
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.interface_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.interface_name is None:
                                                            raise YPYModelError('Key property interface_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.interface_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddress(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                                class VrfNextHopNextHopAddressExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: next_hop_address  <key>
                                                    
                                                    	Next hop address
                                                    	**type**\: one of the below types:
                                                    
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                    
                                                    
                                                    ----
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.next_hop_address = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')
                                                        if self.next_hop_address is None:
                                                            raise YPYModelError('Key property next_hop_address is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.next_hop_address is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                                class VrfNextHopExplicitPathName(object):
                                                    """
                                                    A forwarding interface or Segement Routing mpls
                                                    path name and/or the address of a nexthop router
                                                    for this route (one of these must be specified)
                                                    
                                                    .. attribute:: explicit_path_name  <key>
                                                    
                                                    	Segment Routing mpls path name
                                                    	**type**\:  str
                                                    
                                                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                    
                                                    .. attribute:: bfd_fast_detect
                                                    
                                                    	If set, bfd is enabled
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: description
                                                    
                                                    	Short Description of Static Route
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: detect_multiplier
                                                    
                                                    	BFD Detect Multiplier
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..10
                                                    
                                                    .. attribute:: load_metric
                                                    
                                                    	UCMP load metric
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..16777214
                                                    
                                                    .. attribute:: metric
                                                    
                                                    	Distance metric for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..254
                                                    
                                                    .. attribute:: minimum_interval
                                                    
                                                    	BFD Hello interval in milliseconds
                                                    	**type**\:  int
                                                    
                                                    	**range:** 3..30000
                                                    
                                                    .. attribute:: object_name
                                                    
                                                    	Name of the object to track
                                                    	**type**\:  str
                                                    
                                                    	**range:** 0..32
                                                    
                                                    .. attribute:: permanent
                                                    
                                                    	If set, path is permanent
                                                    	**type**\:  bool
                                                    
                                                    .. attribute:: tag
                                                    
                                                    	Tag for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 1..4294967295
                                                    
                                                    .. attribute:: tunnel_id
                                                    
                                                    	Tunnel ID for this path
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: vrf_lable
                                                    
                                                    	VRF LABEL
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'ip-static-cfg'
                                                    _revision = '2015-09-10'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.explicit_path_name = None
                                                        self.bfd_fast_detect = None
                                                        self.description = None
                                                        self.detect_multiplier = None
                                                        self.load_metric = None
                                                        self.metric = None
                                                        self.minimum_interval = None
                                                        self.object_name = None
                                                        self.permanent = None
                                                        self.tag = None
                                                        self.tunnel_id = None
                                                        self.vrf_lable = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                                        if self.explicit_path_name is None:
                                                            raise YPYModelError('Key property explicit_path_name is None')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return True

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.explicit_path_name is not None:
                                                            return True

                                                        if self.bfd_fast_detect is not None:
                                                            return True

                                                        if self.description is not None:
                                                            return True

                                                        if self.detect_multiplier is not None:
                                                            return True

                                                        if self.load_metric is not None:
                                                            return True

                                                        if self.metric is not None:
                                                            return True

                                                        if self.minimum_interval is not None:
                                                            return True

                                                        if self.object_name is not None:
                                                            return True

                                                        if self.permanent is not None:
                                                            return True

                                                        if self.tag is not None:
                                                            return True

                                                        if self.tunnel_id is not None:
                                                            return True

                                                        if self.vrf_lable is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.vrf_next_hop_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                        for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                            if child_ref._has_data():
                                                                return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                    return True

                                                if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.prefix is None:
                                                raise YPYModelError('Key property prefix is None')
                                            if self.prefix_length is None:
                                                raise YPYModelError('Key property prefix_length is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.prefix is not None:
                                                return True

                                            if self.prefix_length is not None:
                                                return True

                                            if self.vrf_route is not None and self.vrf_route._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_prefix_topology is not None:
                                            for child_ref in self.vrf_prefix_topology:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.topology_name is None:
                                        raise YPYModelError('Key property topology_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:topology[Cisco-IOS-XR-ip-static-cfg:topology-name = ' + str(self.topology_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.topology_name is not None:
                                        return True

                                    if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:topologies'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.topology is not None:
                                    for child_ref in self.topology:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies']['meta_info']


                        class VrfPrefixes(object):
                            """
                            The set of all Static Topologies for this AFI.
                            
                            .. attribute:: vrf_prefix
                            
                            	A static route
                            	**type**\: list of  :py:class:`VrfPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix = YList()
                                self.vrf_prefix.parent = self
                                self.vrf_prefix.name = 'vrf_prefix'


                            class VrfPrefix(object):
                                """
                                A static route
                                
                                .. attribute:: prefix  <key>
                                
                                	Destination prefix
                                	**type**\: one of the below types:
                                
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                .. attribute:: prefix_length  <key>
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: vrf_route
                                
                                	A connected or recursive  static route
                                	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute()
                                    self.vrf_route.parent = self


                                class VrfRoute(object):
                                    """
                                    A connected or recursive  static route
                                    
                                    .. attribute:: segment_route_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable>`
                                    
                                    .. attribute:: vrf_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable()
                                        self.segment_route_next_hop_table.parent = self
                                        self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable()
                                        self.vrf_next_hop_table.parent = self


                                    class SegmentRouteNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                    class VrfNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                            return True

                                        if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.prefix is None:
                                        raise YPYModelError('Key property prefix is None')
                                    if self.prefix_length is None:
                                        raise YPYModelError('Key property prefix_length is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.vrf_route is not None and self.vrf_route._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix is not None:
                                    for child_ref in self.vrf_prefix:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes']['meta_info']


                        class DefaultTopology(object):
                            """
                            Default topology configuration
                            
                            .. attribute:: vrf_prefix_topologies
                            
                            	The set of all Static Topologies for this AFI
                            	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix_topologies = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies()
                                self.vrf_prefix_topologies.parent = self


                            class VrfPrefixTopologies(object):
                                """
                                The set of all Static Topologies for this AFI.
                                
                                .. attribute:: vrf_prefix_topology
                                
                                	A static route
                                	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.vrf_prefix_topology = YList()
                                    self.vrf_prefix_topology.parent = self
                                    self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                class VrfPrefixTopology(object):
                                    """
                                    A static route
                                    
                                    .. attribute:: prefix  <key>
                                    
                                    	Destination prefix
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_length  <key>
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: vrf_route
                                    
                                    	A connected or recursive  static route
                                    	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.vrf_route = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                        self.vrf_route.parent = self


                                    class VrfRoute(object):
                                        """
                                        A connected or recursive  static route
                                        
                                        .. attribute:: segment_route_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                        
                                        .. attribute:: vrf_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.segment_route_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                            self.segment_route_next_hop_table.parent = self
                                            self.vrf_next_hop_table = RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                            self.vrf_next_hop_table.parent = self


                                        class SegmentRouteNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                        class VrfNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                return True

                                            if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.prefix is None:
                                            raise YPYModelError('Key property prefix is None')
                                        if self.prefix_length is None:
                                            raise YPYModelError('Key property prefix_length is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.vrf_route is not None and self.vrf_route._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.vrf_prefix_topology is not None:
                                        for child_ref in self.vrf_prefix_topology:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:default-topology'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-multicast'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.default_topology is not None and self.default_topology._has_data():
                                return True

                            if self.topologies is not None and self.topologies._has_data():
                                return True

                            if self.vrf_prefixes is not None and self.vrf_prefixes._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6.VrfMulticast']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrfipv6'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.vrf_multicast is not None and self.vrf_multicast._has_data():
                            return True

                        if self.vrf_unicast is not None and self.vrf_unicast._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                        return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily.Vrfipv6']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:address-family'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return True

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.vrfipv4 is not None and self.vrfipv4._has_data():
                        return True

                    if self.vrfipv6 is not None and self.vrfipv6._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                    return meta._meta_table['RouterStatic.Vrfs.Vrf.AddressFamily']['meta_info']

            @property
            def _common_path(self):
                if self.vrf_name is None:
                    raise YPYModelError('Key property vrf_name is None')

                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:vrfs/Cisco-IOS-XR-ip-static-cfg:vrf[Cisco-IOS-XR-ip-static-cfg:vrf-name = ' + str(self.vrf_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return True

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.vrf_name is not None:
                    return True

                if self.address_family is not None and self.address_family._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                return meta._meta_table['RouterStatic.Vrfs.Vrf']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:vrfs'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return True

        def _has_data(self):
            if not self.is_config():
                return False
            if self.vrf is not None:
                for child_ref in self.vrf:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
            return meta._meta_table['RouterStatic.Vrfs']['meta_info']


    class DefaultVrf(object):
        """
        Default VRF configuration
        
        .. attribute:: address_family
        
        	Address family configuration
        	**type**\:  :py:class:`AddressFamily <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily>`
        
        

        """

        _prefix = 'ip-static-cfg'
        _revision = '2015-09-10'

        def __init__(self):
            self.parent = None
            self.address_family = RouterStatic.DefaultVrf.AddressFamily()
            self.address_family.parent = self


        class AddressFamily(object):
            """
            Address family configuration
            
            .. attribute:: vrfipv4
            
            	IPv4 static configuration
            	**type**\:  :py:class:`Vrfipv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4>`
            
            .. attribute:: vrfipv6
            
            	IPv6 static configuration
            	**type**\:  :py:class:`Vrfipv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6>`
            
            

            """

            _prefix = 'ip-static-cfg'
            _revision = '2015-09-10'

            def __init__(self):
                self.parent = None
                self.vrfipv4 = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4()
                self.vrfipv4.parent = self
                self.vrfipv6 = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6()
                self.vrfipv6.parent = self


            class Vrfipv4(object):
                """
                IPv4 static configuration
                
                .. attribute:: vrf_multicast
                
                	Multicast static configuration
                	**type**\:  :py:class:`VrfMulticast <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast>`
                
                .. attribute:: vrf_unicast
                
                	Unicast static configuration
                	**type**\:  :py:class:`VrfUnicast <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast>`
                
                

                """

                _prefix = 'ip-static-cfg'
                _revision = '2015-09-10'

                def __init__(self):
                    self.parent = None
                    self.vrf_multicast = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast()
                    self.vrf_multicast.parent = self
                    self.vrf_unicast = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast()
                    self.vrf_unicast.parent = self


                class VrfUnicast(object):
                    """
                    Unicast static configuration
                    
                    .. attribute:: default_topology
                    
                    	Default topology configuration
                    	**type**\:  :py:class:`DefaultTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology>`
                    
                    .. attribute:: topologies
                    
                    	Topology static configuration container
                    	**type**\:  :py:class:`Topologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies>`
                    
                    .. attribute:: vrf_prefixes
                    
                    	The set of all Static Topologies for this AFI
                    	**type**\:  :py:class:`VrfPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes>`
                    
                    

                    """

                    _prefix = 'ip-static-cfg'
                    _revision = '2015-09-10'

                    def __init__(self):
                        self.parent = None
                        self.default_topology = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology()
                        self.default_topology.parent = self
                        self.topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies()
                        self.topologies.parent = self
                        self.vrf_prefixes = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes()
                        self.vrf_prefixes.parent = self


                    class Topologies(object):
                        """
                        Topology static configuration container
                        
                        .. attribute:: topology
                        
                        	Topology static configuration
                        	**type**\: list of  :py:class:`Topology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.topology = YList()
                            self.topology.parent = self
                            self.topology.name = 'topology'


                        class Topology(object):
                            """
                            Topology static configuration
                            
                            .. attribute:: topology_name  <key>
                            
                            	Topology name
                            	**type**\:  str
                            
                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                            
                            .. attribute:: vrf_prefix_topologies
                            
                            	The set of all Static Topologies for this AFI
                            	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.topology_name = None
                                self.vrf_prefix_topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies()
                                self.vrf_prefix_topologies.parent = self


                            class VrfPrefixTopologies(object):
                                """
                                The set of all Static Topologies for this AFI.
                                
                                .. attribute:: vrf_prefix_topology
                                
                                	A static route
                                	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.vrf_prefix_topology = YList()
                                    self.vrf_prefix_topology.parent = self
                                    self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                class VrfPrefixTopology(object):
                                    """
                                    A static route
                                    
                                    .. attribute:: prefix  <key>
                                    
                                    	Destination prefix
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_length  <key>
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: vrf_route
                                    
                                    	A connected or recursive  static route
                                    	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                        self.vrf_route.parent = self


                                    class VrfRoute(object):
                                        """
                                        A connected or recursive  static route
                                        
                                        .. attribute:: segment_route_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                        
                                        .. attribute:: vrf_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                            self.segment_route_next_hop_table.parent = self
                                            self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                            self.vrf_next_hop_table.parent = self


                                        class SegmentRouteNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                        class VrfNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                return True

                                            if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.prefix is None:
                                            raise YPYModelError('Key property prefix is None')
                                        if self.prefix_length is None:
                                            raise YPYModelError('Key property prefix_length is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.vrf_route is not None and self.vrf_route._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.vrf_prefix_topology is not None:
                                        for child_ref in self.vrf_prefix_topology:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology.VrfPrefixTopologies']['meta_info']

                            @property
                            def _common_path(self):
                                if self.topology_name is None:
                                    raise YPYModelError('Key property topology_name is None')

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:topologies/Cisco-IOS-XR-ip-static-cfg:topology[Cisco-IOS-XR-ip-static-cfg:topology-name = ' + str(self.topology_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.topology_name is not None:
                                    return True

                                if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies.Topology']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:topologies'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.topology is not None:
                                for child_ref in self.topology:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.Topologies']['meta_info']


                    class VrfPrefixes(object):
                        """
                        The set of all Static Topologies for this AFI.
                        
                        .. attribute:: vrf_prefix
                        
                        	A static route
                        	**type**\: list of  :py:class:`VrfPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.vrf_prefix = YList()
                            self.vrf_prefix.parent = self
                            self.vrf_prefix.name = 'vrf_prefix'


                        class VrfPrefix(object):
                            """
                            A static route
                            
                            .. attribute:: prefix  <key>
                            
                            	Destination prefix
                            	**type**\: one of the below types:
                            
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            .. attribute:: prefix_length  <key>
                            
                            	Destination prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: vrf_route
                            
                            	A connected or recursive  static route
                            	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute()
                                self.vrf_route.parent = self


                            class VrfRoute(object):
                                """
                                A connected or recursive  static route
                                
                                .. attribute:: segment_route_next_hop_table
                                
                                	The set of nexthop information configured for this route
                                	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable>`
                                
                                .. attribute:: vrf_next_hop_table
                                
                                	The set of nexthop information configured for this route
                                	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable()
                                    self.segment_route_next_hop_table.parent = self
                                    self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable()
                                    self.vrf_next_hop_table.parent = self


                                class SegmentRouteNextHopTable(object):
                                    """
                                    The set of nexthop information configured for
                                    this route
                                    
                                    .. attribute:: vrf_next_hop_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_next_hop_explicit_path_name = YList()
                                        self.vrf_next_hop_explicit_path_name.parent = self
                                        self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                        self.vrf_next_hop_interface_name = YList()
                                        self.vrf_next_hop_interface_name.parent = self
                                        self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                        self.vrf_next_hop_interface_name_next_hop_address = YList()
                                        self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                        self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                        self.vrf_next_hop_next_hop_address = YList()
                                        self.vrf_next_hop_next_hop_address.parent = self
                                        self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                        self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                    class VrfNextHopInterfaceName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                    class VrfNextHopInterfaceNameNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddressExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                    class VrfNextHopExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_next_hop_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name is not None:
                                            for child_ref in self.vrf_next_hop_interface_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                class VrfNextHopTable(object):
                                    """
                                    The set of nexthop information configured for
                                    this route
                                    
                                    .. attribute:: vrf_next_hop_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_next_hop_explicit_path_name = YList()
                                        self.vrf_next_hop_explicit_path_name.parent = self
                                        self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                        self.vrf_next_hop_interface_name = YList()
                                        self.vrf_next_hop_interface_name.parent = self
                                        self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                        self.vrf_next_hop_interface_name_next_hop_address = YList()
                                        self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                        self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                        self.vrf_next_hop_next_hop_address = YList()
                                        self.vrf_next_hop_next_hop_address.parent = self
                                        self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                        self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                    class VrfNextHopInterfaceName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                    class VrfNextHopInterfaceNameNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddressExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                    class VrfNextHopExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_next_hop_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name is not None:
                                            for child_ref in self.vrf_next_hop_interface_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                        return True

                                    if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute']['meta_info']

                            @property
                            def _common_path(self):
                                if self.prefix is None:
                                    raise YPYModelError('Key property prefix is None')
                                if self.prefix_length is None:
                                    raise YPYModelError('Key property prefix_length is None')

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes/Cisco-IOS-XR-ip-static-cfg:vrf-prefix[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.vrf_route is not None and self.vrf_route._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes.VrfPrefix']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf_prefix is not None:
                                for child_ref in self.vrf_prefix:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.VrfPrefixes']['meta_info']


                    class DefaultTopology(object):
                        """
                        Default topology configuration
                        
                        .. attribute:: vrf_prefix_topologies
                        
                        	The set of all Static Topologies for this AFI
                        	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.vrf_prefix_topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies()
                            self.vrf_prefix_topologies.parent = self


                        class VrfPrefixTopologies(object):
                            """
                            The set of all Static Topologies for this AFI.
                            
                            .. attribute:: vrf_prefix_topology
                            
                            	A static route
                            	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix_topology = YList()
                                self.vrf_prefix_topology.parent = self
                                self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                            class VrfPrefixTopology(object):
                                """
                                A static route
                                
                                .. attribute:: prefix  <key>
                                
                                	Destination prefix
                                	**type**\: one of the below types:
                                
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                .. attribute:: prefix_length  <key>
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: vrf_route
                                
                                	A connected or recursive  static route
                                	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                    self.vrf_route.parent = self


                                class VrfRoute(object):
                                    """
                                    A connected or recursive  static route
                                    
                                    .. attribute:: segment_route_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                    
                                    .. attribute:: vrf_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                        self.segment_route_next_hop_table.parent = self
                                        self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                        self.vrf_next_hop_table.parent = self


                                    class SegmentRouteNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                    class VrfNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                            return True

                                        if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.prefix is None:
                                        raise YPYModelError('Key property prefix is None')
                                    if self.prefix_length is None:
                                        raise YPYModelError('Key property prefix_length is None')

                                    return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:default-topology/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.vrf_route is not None and self.vrf_route._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:default-topology/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix_topology is not None:
                                    for child_ref in self.vrf_prefix_topology:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology.VrfPrefixTopologies']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:default-topology'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast.DefaultTopology']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-unicast'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.default_topology is not None and self.default_topology._has_data():
                            return True

                        if self.topologies is not None and self.topologies._has_data():
                            return True

                        if self.vrf_prefixes is not None and self.vrf_prefixes._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfUnicast']['meta_info']


                class VrfMulticast(object):
                    """
                    Multicast static configuration
                    
                    .. attribute:: default_topology
                    
                    	Default topology configuration
                    	**type**\:  :py:class:`DefaultTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology>`
                    
                    .. attribute:: topologies
                    
                    	Topology static configuration container
                    	**type**\:  :py:class:`Topologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies>`
                    
                    .. attribute:: vrf_prefixes
                    
                    	The set of all Static Topologies for this AFI
                    	**type**\:  :py:class:`VrfPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes>`
                    
                    

                    """

                    _prefix = 'ip-static-cfg'
                    _revision = '2015-09-10'

                    def __init__(self):
                        self.parent = None
                        self.default_topology = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology()
                        self.default_topology.parent = self
                        self.topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies()
                        self.topologies.parent = self
                        self.vrf_prefixes = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes()
                        self.vrf_prefixes.parent = self


                    class Topologies(object):
                        """
                        Topology static configuration container
                        
                        .. attribute:: topology
                        
                        	Topology static configuration
                        	**type**\: list of  :py:class:`Topology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.topology = YList()
                            self.topology.parent = self
                            self.topology.name = 'topology'


                        class Topology(object):
                            """
                            Topology static configuration
                            
                            .. attribute:: topology_name  <key>
                            
                            	Topology name
                            	**type**\:  str
                            
                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                            
                            .. attribute:: vrf_prefix_topologies
                            
                            	The set of all Static Topologies for this AFI
                            	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.topology_name = None
                                self.vrf_prefix_topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies()
                                self.vrf_prefix_topologies.parent = self


                            class VrfPrefixTopologies(object):
                                """
                                The set of all Static Topologies for this AFI.
                                
                                .. attribute:: vrf_prefix_topology
                                
                                	A static route
                                	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.vrf_prefix_topology = YList()
                                    self.vrf_prefix_topology.parent = self
                                    self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                class VrfPrefixTopology(object):
                                    """
                                    A static route
                                    
                                    .. attribute:: prefix  <key>
                                    
                                    	Destination prefix
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_length  <key>
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: vrf_route
                                    
                                    	A connected or recursive  static route
                                    	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                        self.vrf_route.parent = self


                                    class VrfRoute(object):
                                        """
                                        A connected or recursive  static route
                                        
                                        .. attribute:: segment_route_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                        
                                        .. attribute:: vrf_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                            self.segment_route_next_hop_table.parent = self
                                            self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                            self.vrf_next_hop_table.parent = self


                                        class SegmentRouteNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                        class VrfNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                return True

                                            if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.prefix is None:
                                            raise YPYModelError('Key property prefix is None')
                                        if self.prefix_length is None:
                                            raise YPYModelError('Key property prefix_length is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.vrf_route is not None and self.vrf_route._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.vrf_prefix_topology is not None:
                                        for child_ref in self.vrf_prefix_topology:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology.VrfPrefixTopologies']['meta_info']

                            @property
                            def _common_path(self):
                                if self.topology_name is None:
                                    raise YPYModelError('Key property topology_name is None')

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:topologies/Cisco-IOS-XR-ip-static-cfg:topology[Cisco-IOS-XR-ip-static-cfg:topology-name = ' + str(self.topology_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.topology_name is not None:
                                    return True

                                if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies.Topology']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:topologies'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.topology is not None:
                                for child_ref in self.topology:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.Topologies']['meta_info']


                    class VrfPrefixes(object):
                        """
                        The set of all Static Topologies for this AFI.
                        
                        .. attribute:: vrf_prefix
                        
                        	A static route
                        	**type**\: list of  :py:class:`VrfPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.vrf_prefix = YList()
                            self.vrf_prefix.parent = self
                            self.vrf_prefix.name = 'vrf_prefix'


                        class VrfPrefix(object):
                            """
                            A static route
                            
                            .. attribute:: prefix  <key>
                            
                            	Destination prefix
                            	**type**\: one of the below types:
                            
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            .. attribute:: prefix_length  <key>
                            
                            	Destination prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: vrf_route
                            
                            	A connected or recursive  static route
                            	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute()
                                self.vrf_route.parent = self


                            class VrfRoute(object):
                                """
                                A connected or recursive  static route
                                
                                .. attribute:: segment_route_next_hop_table
                                
                                	The set of nexthop information configured for this route
                                	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable>`
                                
                                .. attribute:: vrf_next_hop_table
                                
                                	The set of nexthop information configured for this route
                                	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable()
                                    self.segment_route_next_hop_table.parent = self
                                    self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable()
                                    self.vrf_next_hop_table.parent = self


                                class SegmentRouteNextHopTable(object):
                                    """
                                    The set of nexthop information configured for
                                    this route
                                    
                                    .. attribute:: vrf_next_hop_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_next_hop_explicit_path_name = YList()
                                        self.vrf_next_hop_explicit_path_name.parent = self
                                        self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                        self.vrf_next_hop_interface_name = YList()
                                        self.vrf_next_hop_interface_name.parent = self
                                        self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                        self.vrf_next_hop_interface_name_next_hop_address = YList()
                                        self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                        self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                        self.vrf_next_hop_next_hop_address = YList()
                                        self.vrf_next_hop_next_hop_address.parent = self
                                        self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                        self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                    class VrfNextHopInterfaceName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                    class VrfNextHopInterfaceNameNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddressExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                    class VrfNextHopExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_next_hop_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name is not None:
                                            for child_ref in self.vrf_next_hop_interface_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                class VrfNextHopTable(object):
                                    """
                                    The set of nexthop information configured for
                                    this route
                                    
                                    .. attribute:: vrf_next_hop_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_next_hop_explicit_path_name = YList()
                                        self.vrf_next_hop_explicit_path_name.parent = self
                                        self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                        self.vrf_next_hop_interface_name = YList()
                                        self.vrf_next_hop_interface_name.parent = self
                                        self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                        self.vrf_next_hop_interface_name_next_hop_address = YList()
                                        self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                        self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                        self.vrf_next_hop_next_hop_address = YList()
                                        self.vrf_next_hop_next_hop_address.parent = self
                                        self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                        self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                    class VrfNextHopInterfaceName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                    class VrfNextHopInterfaceNameNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddressExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                    class VrfNextHopExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_next_hop_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name is not None:
                                            for child_ref in self.vrf_next_hop_interface_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                        return True

                                    if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute']['meta_info']

                            @property
                            def _common_path(self):
                                if self.prefix is None:
                                    raise YPYModelError('Key property prefix is None')
                                if self.prefix_length is None:
                                    raise YPYModelError('Key property prefix_length is None')

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes/Cisco-IOS-XR-ip-static-cfg:vrf-prefix[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.vrf_route is not None and self.vrf_route._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes.VrfPrefix']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf_prefix is not None:
                                for child_ref in self.vrf_prefix:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.VrfPrefixes']['meta_info']


                    class DefaultTopology(object):
                        """
                        Default topology configuration
                        
                        .. attribute:: vrf_prefix_topologies
                        
                        	The set of all Static Topologies for this AFI
                        	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.vrf_prefix_topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies()
                            self.vrf_prefix_topologies.parent = self


                        class VrfPrefixTopologies(object):
                            """
                            The set of all Static Topologies for this AFI.
                            
                            .. attribute:: vrf_prefix_topology
                            
                            	A static route
                            	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix_topology = YList()
                                self.vrf_prefix_topology.parent = self
                                self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                            class VrfPrefixTopology(object):
                                """
                                A static route
                                
                                .. attribute:: prefix  <key>
                                
                                	Destination prefix
                                	**type**\: one of the below types:
                                
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                .. attribute:: prefix_length  <key>
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: vrf_route
                                
                                	A connected or recursive  static route
                                	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                    self.vrf_route.parent = self


                                class VrfRoute(object):
                                    """
                                    A connected or recursive  static route
                                    
                                    .. attribute:: segment_route_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                    
                                    .. attribute:: vrf_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                        self.segment_route_next_hop_table.parent = self
                                        self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                        self.vrf_next_hop_table.parent = self


                                    class SegmentRouteNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                    class VrfNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                            return True

                                        if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.prefix is None:
                                        raise YPYModelError('Key property prefix is None')
                                    if self.prefix_length is None:
                                        raise YPYModelError('Key property prefix_length is None')

                                    return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:default-topology/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.vrf_route is not None and self.vrf_route._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:default-topology/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix_topology is not None:
                                    for child_ref in self.vrf_prefix_topology:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology.VrfPrefixTopologies']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:default-topology'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast.DefaultTopology']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4/Cisco-IOS-XR-ip-static-cfg:vrf-multicast'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.default_topology is not None and self.default_topology._has_data():
                            return True

                        if self.topologies is not None and self.topologies._has_data():
                            return True

                        if self.vrf_prefixes is not None and self.vrf_prefixes._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4.VrfMulticast']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv4'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return True

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.vrf_multicast is not None and self.vrf_multicast._has_data():
                        return True

                    if self.vrf_unicast is not None and self.vrf_unicast._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv4']['meta_info']


            class Vrfipv6(object):
                """
                IPv6 static configuration
                
                .. attribute:: vrf_multicast
                
                	Multicast static configuration
                	**type**\:  :py:class:`VrfMulticast <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast>`
                
                .. attribute:: vrf_unicast
                
                	Unicast static configuration
                	**type**\:  :py:class:`VrfUnicast <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast>`
                
                

                """

                _prefix = 'ip-static-cfg'
                _revision = '2015-09-10'

                def __init__(self):
                    self.parent = None
                    self.vrf_multicast = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast()
                    self.vrf_multicast.parent = self
                    self.vrf_unicast = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast()
                    self.vrf_unicast.parent = self


                class VrfUnicast(object):
                    """
                    Unicast static configuration
                    
                    .. attribute:: default_topology
                    
                    	Default topology configuration
                    	**type**\:  :py:class:`DefaultTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology>`
                    
                    .. attribute:: topologies
                    
                    	Topology static configuration container
                    	**type**\:  :py:class:`Topologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies>`
                    
                    .. attribute:: vrf_prefixes
                    
                    	The set of all Static Topologies for this AFI
                    	**type**\:  :py:class:`VrfPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes>`
                    
                    

                    """

                    _prefix = 'ip-static-cfg'
                    _revision = '2015-09-10'

                    def __init__(self):
                        self.parent = None
                        self.default_topology = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology()
                        self.default_topology.parent = self
                        self.topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies()
                        self.topologies.parent = self
                        self.vrf_prefixes = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes()
                        self.vrf_prefixes.parent = self


                    class Topologies(object):
                        """
                        Topology static configuration container
                        
                        .. attribute:: topology
                        
                        	Topology static configuration
                        	**type**\: list of  :py:class:`Topology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.topology = YList()
                            self.topology.parent = self
                            self.topology.name = 'topology'


                        class Topology(object):
                            """
                            Topology static configuration
                            
                            .. attribute:: topology_name  <key>
                            
                            	Topology name
                            	**type**\:  str
                            
                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                            
                            .. attribute:: vrf_prefix_topologies
                            
                            	The set of all Static Topologies for this AFI
                            	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.topology_name = None
                                self.vrf_prefix_topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies()
                                self.vrf_prefix_topologies.parent = self


                            class VrfPrefixTopologies(object):
                                """
                                The set of all Static Topologies for this AFI.
                                
                                .. attribute:: vrf_prefix_topology
                                
                                	A static route
                                	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.vrf_prefix_topology = YList()
                                    self.vrf_prefix_topology.parent = self
                                    self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                class VrfPrefixTopology(object):
                                    """
                                    A static route
                                    
                                    .. attribute:: prefix  <key>
                                    
                                    	Destination prefix
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_length  <key>
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: vrf_route
                                    
                                    	A connected or recursive  static route
                                    	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                        self.vrf_route.parent = self


                                    class VrfRoute(object):
                                        """
                                        A connected or recursive  static route
                                        
                                        .. attribute:: segment_route_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                        
                                        .. attribute:: vrf_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                            self.segment_route_next_hop_table.parent = self
                                            self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                            self.vrf_next_hop_table.parent = self


                                        class SegmentRouteNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                        class VrfNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                return True

                                            if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.prefix is None:
                                            raise YPYModelError('Key property prefix is None')
                                        if self.prefix_length is None:
                                            raise YPYModelError('Key property prefix_length is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.vrf_route is not None and self.vrf_route._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.vrf_prefix_topology is not None:
                                        for child_ref in self.vrf_prefix_topology:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology.VrfPrefixTopologies']['meta_info']

                            @property
                            def _common_path(self):
                                if self.topology_name is None:
                                    raise YPYModelError('Key property topology_name is None')

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:topologies/Cisco-IOS-XR-ip-static-cfg:topology[Cisco-IOS-XR-ip-static-cfg:topology-name = ' + str(self.topology_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.topology_name is not None:
                                    return True

                                if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies.Topology']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:topologies'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.topology is not None:
                                for child_ref in self.topology:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.Topologies']['meta_info']


                    class VrfPrefixes(object):
                        """
                        The set of all Static Topologies for this AFI.
                        
                        .. attribute:: vrf_prefix
                        
                        	A static route
                        	**type**\: list of  :py:class:`VrfPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.vrf_prefix = YList()
                            self.vrf_prefix.parent = self
                            self.vrf_prefix.name = 'vrf_prefix'


                        class VrfPrefix(object):
                            """
                            A static route
                            
                            .. attribute:: prefix  <key>
                            
                            	Destination prefix
                            	**type**\: one of the below types:
                            
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            .. attribute:: prefix_length  <key>
                            
                            	Destination prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: vrf_route
                            
                            	A connected or recursive  static route
                            	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute()
                                self.vrf_route.parent = self


                            class VrfRoute(object):
                                """
                                A connected or recursive  static route
                                
                                .. attribute:: segment_route_next_hop_table
                                
                                	The set of nexthop information configured for this route
                                	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable>`
                                
                                .. attribute:: vrf_next_hop_table
                                
                                	The set of nexthop information configured for this route
                                	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable()
                                    self.segment_route_next_hop_table.parent = self
                                    self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable()
                                    self.vrf_next_hop_table.parent = self


                                class SegmentRouteNextHopTable(object):
                                    """
                                    The set of nexthop information configured for
                                    this route
                                    
                                    .. attribute:: vrf_next_hop_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_next_hop_explicit_path_name = YList()
                                        self.vrf_next_hop_explicit_path_name.parent = self
                                        self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                        self.vrf_next_hop_interface_name = YList()
                                        self.vrf_next_hop_interface_name.parent = self
                                        self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                        self.vrf_next_hop_interface_name_next_hop_address = YList()
                                        self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                        self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                        self.vrf_next_hop_next_hop_address = YList()
                                        self.vrf_next_hop_next_hop_address.parent = self
                                        self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                        self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                    class VrfNextHopInterfaceName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                    class VrfNextHopInterfaceNameNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddressExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                    class VrfNextHopExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_next_hop_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name is not None:
                                            for child_ref in self.vrf_next_hop_interface_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                class VrfNextHopTable(object):
                                    """
                                    The set of nexthop information configured for
                                    this route
                                    
                                    .. attribute:: vrf_next_hop_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_next_hop_explicit_path_name = YList()
                                        self.vrf_next_hop_explicit_path_name.parent = self
                                        self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                        self.vrf_next_hop_interface_name = YList()
                                        self.vrf_next_hop_interface_name.parent = self
                                        self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                        self.vrf_next_hop_interface_name_next_hop_address = YList()
                                        self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                        self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                        self.vrf_next_hop_next_hop_address = YList()
                                        self.vrf_next_hop_next_hop_address.parent = self
                                        self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                        self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                    class VrfNextHopInterfaceName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                    class VrfNextHopInterfaceNameNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddressExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                    class VrfNextHopExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_next_hop_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name is not None:
                                            for child_ref in self.vrf_next_hop_interface_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                        return True

                                    if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix.VrfRoute']['meta_info']

                            @property
                            def _common_path(self):
                                if self.prefix is None:
                                    raise YPYModelError('Key property prefix is None')
                                if self.prefix_length is None:
                                    raise YPYModelError('Key property prefix_length is None')

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes/Cisco-IOS-XR-ip-static-cfg:vrf-prefix[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.vrf_route is not None and self.vrf_route._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes.VrfPrefix']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf_prefix is not None:
                                for child_ref in self.vrf_prefix:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.VrfPrefixes']['meta_info']


                    class DefaultTopology(object):
                        """
                        Default topology configuration
                        
                        .. attribute:: vrf_prefix_topologies
                        
                        	The set of all Static Topologies for this AFI
                        	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.vrf_prefix_topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies()
                            self.vrf_prefix_topologies.parent = self


                        class VrfPrefixTopologies(object):
                            """
                            The set of all Static Topologies for this AFI.
                            
                            .. attribute:: vrf_prefix_topology
                            
                            	A static route
                            	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix_topology = YList()
                                self.vrf_prefix_topology.parent = self
                                self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                            class VrfPrefixTopology(object):
                                """
                                A static route
                                
                                .. attribute:: prefix  <key>
                                
                                	Destination prefix
                                	**type**\: one of the below types:
                                
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                .. attribute:: prefix_length  <key>
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: vrf_route
                                
                                	A connected or recursive  static route
                                	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                    self.vrf_route.parent = self


                                class VrfRoute(object):
                                    """
                                    A connected or recursive  static route
                                    
                                    .. attribute:: segment_route_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                    
                                    .. attribute:: vrf_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                        self.segment_route_next_hop_table.parent = self
                                        self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                        self.vrf_next_hop_table.parent = self


                                    class SegmentRouteNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                    class VrfNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                            return True

                                        if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.prefix is None:
                                        raise YPYModelError('Key property prefix is None')
                                    if self.prefix_length is None:
                                        raise YPYModelError('Key property prefix_length is None')

                                    return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:default-topology/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.vrf_route is not None and self.vrf_route._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:default-topology/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix_topology is not None:
                                    for child_ref in self.vrf_prefix_topology:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology.VrfPrefixTopologies']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-unicast/Cisco-IOS-XR-ip-static-cfg:default-topology'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast.DefaultTopology']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-unicast'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.default_topology is not None and self.default_topology._has_data():
                            return True

                        if self.topologies is not None and self.topologies._has_data():
                            return True

                        if self.vrf_prefixes is not None and self.vrf_prefixes._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfUnicast']['meta_info']


                class VrfMulticast(object):
                    """
                    Multicast static configuration
                    
                    .. attribute:: default_topology
                    
                    	Default topology configuration
                    	**type**\:  :py:class:`DefaultTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology>`
                    
                    .. attribute:: topologies
                    
                    	Topology static configuration container
                    	**type**\:  :py:class:`Topologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies>`
                    
                    .. attribute:: vrf_prefixes
                    
                    	The set of all Static Topologies for this AFI
                    	**type**\:  :py:class:`VrfPrefixes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes>`
                    
                    

                    """

                    _prefix = 'ip-static-cfg'
                    _revision = '2015-09-10'

                    def __init__(self):
                        self.parent = None
                        self.default_topology = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology()
                        self.default_topology.parent = self
                        self.topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies()
                        self.topologies.parent = self
                        self.vrf_prefixes = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes()
                        self.vrf_prefixes.parent = self


                    class Topologies(object):
                        """
                        Topology static configuration container
                        
                        .. attribute:: topology
                        
                        	Topology static configuration
                        	**type**\: list of  :py:class:`Topology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.topology = YList()
                            self.topology.parent = self
                            self.topology.name = 'topology'


                        class Topology(object):
                            """
                            Topology static configuration
                            
                            .. attribute:: topology_name  <key>
                            
                            	Topology name
                            	**type**\:  str
                            
                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                            
                            .. attribute:: vrf_prefix_topologies
                            
                            	The set of all Static Topologies for this AFI
                            	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.topology_name = None
                                self.vrf_prefix_topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies()
                                self.vrf_prefix_topologies.parent = self


                            class VrfPrefixTopologies(object):
                                """
                                The set of all Static Topologies for this AFI.
                                
                                .. attribute:: vrf_prefix_topology
                                
                                	A static route
                                	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.vrf_prefix_topology = YList()
                                    self.vrf_prefix_topology.parent = self
                                    self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                                class VrfPrefixTopology(object):
                                    """
                                    A static route
                                    
                                    .. attribute:: prefix  <key>
                                    
                                    	Destination prefix
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: prefix_length  <key>
                                    
                                    	Destination prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..128
                                    
                                    .. attribute:: vrf_route
                                    
                                    	A connected or recursive  static route
                                    	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                        self.vrf_route.parent = self


                                    class VrfRoute(object):
                                        """
                                        A connected or recursive  static route
                                        
                                        .. attribute:: segment_route_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                        
                                        .. attribute:: vrf_next_hop_table
                                        
                                        	The set of nexthop information configured for this route
                                        	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                            self.segment_route_next_hop_table.parent = self
                                            self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                            self.vrf_next_hop_table.parent = self


                                        class SegmentRouteNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                        class VrfNextHopTable(object):
                                            """
                                            The set of nexthop information configured for
                                            this route
                                            
                                            .. attribute:: vrf_next_hop_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                            
                                            .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                            
                                            .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                            
                                            	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                            	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.vrf_next_hop_explicit_path_name = YList()
                                                self.vrf_next_hop_explicit_path_name.parent = self
                                                self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                                self.vrf_next_hop_interface_name = YList()
                                                self.vrf_next_hop_interface_name.parent = self
                                                self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                                self.vrf_next_hop_interface_name_next_hop_address = YList()
                                                self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                                self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                                self.vrf_next_hop_next_hop_address = YList()
                                                self.vrf_next_hop_next_hop_address.parent = self
                                                self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                                self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                                self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                            class VrfNextHopInterfaceName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                            class VrfNextHopInterfaceNameNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: interface_name  <key>
                                                
                                                	Forwarding interface
                                                	**type**\:  str
                                                
                                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.interface_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.interface_name is None:
                                                        raise YPYModelError('Key property interface_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.interface_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddress(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                            class VrfNextHopNextHopAddressExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: next_hop_address  <key>
                                                
                                                	Next hop address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.next_hop_address = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')
                                                    if self.next_hop_address is None:
                                                        raise YPYModelError('Key property next_hop_address is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.next_hop_address is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                            class VrfNextHopExplicitPathName(object):
                                                """
                                                A forwarding interface or Segement Routing mpls
                                                path name and/or the address of a nexthop router
                                                for this route (one of these must be specified)
                                                
                                                .. attribute:: explicit_path_name  <key>
                                                
                                                	Segment Routing mpls path name
                                                	**type**\:  str
                                                
                                                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                                
                                                .. attribute:: bfd_fast_detect
                                                
                                                	If set, bfd is enabled
                                                	**type**\:  bool
                                                
                                                .. attribute:: description
                                                
                                                	Short Description of Static Route
                                                	**type**\:  str
                                                
                                                .. attribute:: detect_multiplier
                                                
                                                	BFD Detect Multiplier
                                                	**type**\:  int
                                                
                                                	**range:** 1..10
                                                
                                                .. attribute:: load_metric
                                                
                                                	UCMP load metric
                                                	**type**\:  int
                                                
                                                	**range:** 1..16777214
                                                
                                                .. attribute:: metric
                                                
                                                	Distance metric for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..254
                                                
                                                .. attribute:: minimum_interval
                                                
                                                	BFD Hello interval in milliseconds
                                                	**type**\:  int
                                                
                                                	**range:** 3..30000
                                                
                                                .. attribute:: object_name
                                                
                                                	Name of the object to track
                                                	**type**\:  str
                                                
                                                	**range:** 0..32
                                                
                                                .. attribute:: permanent
                                                
                                                	If set, path is permanent
                                                	**type**\:  bool
                                                
                                                .. attribute:: tag
                                                
                                                	Tag for this path
                                                	**type**\:  int
                                                
                                                	**range:** 1..4294967295
                                                
                                                .. attribute:: tunnel_id
                                                
                                                	Tunnel ID for this path
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: vrf_lable
                                                
                                                	VRF LABEL
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'ip-static-cfg'
                                                _revision = '2015-09-10'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.explicit_path_name = None
                                                    self.bfd_fast_detect = None
                                                    self.description = None
                                                    self.detect_multiplier = None
                                                    self.load_metric = None
                                                    self.metric = None
                                                    self.minimum_interval = None
                                                    self.object_name = None
                                                    self.permanent = None
                                                    self.tag = None
                                                    self.tunnel_id = None
                                                    self.vrf_lable = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.explicit_path_name is None:
                                                        raise YPYModelError('Key property explicit_path_name is None')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.explicit_path_name is not None:
                                                        return True

                                                    if self.bfd_fast_detect is not None:
                                                        return True

                                                    if self.description is not None:
                                                        return True

                                                    if self.detect_multiplier is not None:
                                                        return True

                                                    if self.load_metric is not None:
                                                        return True

                                                    if self.metric is not None:
                                                        return True

                                                    if self.minimum_interval is not None:
                                                        return True

                                                    if self.object_name is not None:
                                                        return True

                                                    if self.permanent is not None:
                                                        return True

                                                    if self.tag is not None:
                                                        return True

                                                    if self.tunnel_id is not None:
                                                        return True

                                                    if self.vrf_lable is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.vrf_next_hop_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address:
                                                        if child_ref._has_data():
                                                            return True

                                                if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                    for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                                return True

                                            if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.prefix is None:
                                            raise YPYModelError('Key property prefix is None')
                                        if self.prefix_length is None:
                                            raise YPYModelError('Key property prefix_length is None')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.vrf_route is not None and self.vrf_route._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.vrf_prefix_topology is not None:
                                        for child_ref in self.vrf_prefix_topology:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology.VrfPrefixTopologies']['meta_info']

                            @property
                            def _common_path(self):
                                if self.topology_name is None:
                                    raise YPYModelError('Key property topology_name is None')

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:topologies/Cisco-IOS-XR-ip-static-cfg:topology[Cisco-IOS-XR-ip-static-cfg:topology-name = ' + str(self.topology_name) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.topology_name is not None:
                                    return True

                                if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies.Topology']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:topologies'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.topology is not None:
                                for child_ref in self.topology:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.Topologies']['meta_info']


                    class VrfPrefixes(object):
                        """
                        The set of all Static Topologies for this AFI.
                        
                        .. attribute:: vrf_prefix
                        
                        	A static route
                        	**type**\: list of  :py:class:`VrfPrefix <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.vrf_prefix = YList()
                            self.vrf_prefix.parent = self
                            self.vrf_prefix.name = 'vrf_prefix'


                        class VrfPrefix(object):
                            """
                            A static route
                            
                            .. attribute:: prefix  <key>
                            
                            	Destination prefix
                            	**type**\: one of the below types:
                            
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            .. attribute:: prefix_length  <key>
                            
                            	Destination prefix length
                            	**type**\:  int
                            
                            	**range:** 0..128
                            
                            .. attribute:: vrf_route
                            
                            	A connected or recursive  static route
                            	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute()
                                self.vrf_route.parent = self


                            class VrfRoute(object):
                                """
                                A connected or recursive  static route
                                
                                .. attribute:: segment_route_next_hop_table
                                
                                	The set of nexthop information configured for this route
                                	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable>`
                                
                                .. attribute:: vrf_next_hop_table
                                
                                	The set of nexthop information configured for this route
                                	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable()
                                    self.segment_route_next_hop_table.parent = self
                                    self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable()
                                    self.vrf_next_hop_table.parent = self


                                class SegmentRouteNextHopTable(object):
                                    """
                                    The set of nexthop information configured for
                                    this route
                                    
                                    .. attribute:: vrf_next_hop_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_next_hop_explicit_path_name = YList()
                                        self.vrf_next_hop_explicit_path_name.parent = self
                                        self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                        self.vrf_next_hop_interface_name = YList()
                                        self.vrf_next_hop_interface_name.parent = self
                                        self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                        self.vrf_next_hop_interface_name_next_hop_address = YList()
                                        self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                        self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                        self.vrf_next_hop_next_hop_address = YList()
                                        self.vrf_next_hop_next_hop_address.parent = self
                                        self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                        self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                    class VrfNextHopInterfaceName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                    class VrfNextHopInterfaceNameNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddressExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                    class VrfNextHopExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_next_hop_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name is not None:
                                            for child_ref in self.vrf_next_hop_interface_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                class VrfNextHopTable(object):
                                    """
                                    The set of nexthop information configured for
                                    this route
                                    
                                    .. attribute:: vrf_next_hop_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                    
                                    .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                    
                                    .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                    
                                    	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                    	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.vrf_next_hop_explicit_path_name = YList()
                                        self.vrf_next_hop_explicit_path_name.parent = self
                                        self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                        self.vrf_next_hop_interface_name = YList()
                                        self.vrf_next_hop_interface_name.parent = self
                                        self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                        self.vrf_next_hop_interface_name_next_hop_address = YList()
                                        self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                        self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                        self.vrf_next_hop_next_hop_address = YList()
                                        self.vrf_next_hop_next_hop_address.parent = self
                                        self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                        self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                        self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                    class VrfNextHopInterfaceName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                    class VrfNextHopInterfaceNameNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: interface_name  <key>
                                        
                                        	Forwarding interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.interface_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.interface_name is None:
                                                raise YPYModelError('Key property interface_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.interface_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddress(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                    class VrfNextHopNextHopAddressExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: next_hop_address  <key>
                                        
                                        	Next hop address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.next_hop_address = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')
                                            if self.next_hop_address is None:
                                                raise YPYModelError('Key property next_hop_address is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.next_hop_address is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                    class VrfNextHopExplicitPathName(object):
                                        """
                                        A forwarding interface or Segement Routing mpls
                                        path name and/or the address of a nexthop router
                                        for this route (one of these must be specified)
                                        
                                        .. attribute:: explicit_path_name  <key>
                                        
                                        	Segment Routing mpls path name
                                        	**type**\:  str
                                        
                                        	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                        
                                        .. attribute:: bfd_fast_detect
                                        
                                        	If set, bfd is enabled
                                        	**type**\:  bool
                                        
                                        .. attribute:: description
                                        
                                        	Short Description of Static Route
                                        	**type**\:  str
                                        
                                        .. attribute:: detect_multiplier
                                        
                                        	BFD Detect Multiplier
                                        	**type**\:  int
                                        
                                        	**range:** 1..10
                                        
                                        .. attribute:: load_metric
                                        
                                        	UCMP load metric
                                        	**type**\:  int
                                        
                                        	**range:** 1..16777214
                                        
                                        .. attribute:: metric
                                        
                                        	Distance metric for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..254
                                        
                                        .. attribute:: minimum_interval
                                        
                                        	BFD Hello interval in milliseconds
                                        	**type**\:  int
                                        
                                        	**range:** 3..30000
                                        
                                        .. attribute:: object_name
                                        
                                        	Name of the object to track
                                        	**type**\:  str
                                        
                                        	**range:** 0..32
                                        
                                        .. attribute:: permanent
                                        
                                        	If set, path is permanent
                                        	**type**\:  bool
                                        
                                        .. attribute:: tag
                                        
                                        	Tag for this path
                                        	**type**\:  int
                                        
                                        	**range:** 1..4294967295
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID for this path
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: vrf_lable
                                        
                                        	VRF LABEL
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.explicit_path_name = None
                                            self.bfd_fast_detect = None
                                            self.description = None
                                            self.detect_multiplier = None
                                            self.load_metric = None
                                            self.metric = None
                                            self.minimum_interval = None
                                            self.object_name = None
                                            self.permanent = None
                                            self.tag = None
                                            self.tunnel_id = None
                                            self.vrf_lable = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.explicit_path_name is None:
                                                raise YPYModelError('Key property explicit_path_name is None')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.explicit_path_name is not None:
                                                return True

                                            if self.bfd_fast_detect is not None:
                                                return True

                                            if self.description is not None:
                                                return True

                                            if self.detect_multiplier is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.metric is not None:
                                                return True

                                            if self.minimum_interval is not None:
                                                return True

                                            if self.object_name is not None:
                                                return True

                                            if self.permanent is not None:
                                                return True

                                            if self.tag is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            if self.vrf_lable is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.vrf_next_hop_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name is not None:
                                            for child_ref in self.vrf_next_hop_interface_name:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address:
                                                if child_ref._has_data():
                                                    return True

                                        if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                            for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute.VrfNextHopTable']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                        return True

                                    if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix.VrfRoute']['meta_info']

                            @property
                            def _common_path(self):
                                if self.prefix is None:
                                    raise YPYModelError('Key property prefix is None')
                                if self.prefix_length is None:
                                    raise YPYModelError('Key property prefix_length is None')

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes/Cisco-IOS-XR-ip-static-cfg:vrf-prefix[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.vrf_route is not None and self.vrf_route._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes.VrfPrefix']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:vrf-prefixes'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf_prefix is not None:
                                for child_ref in self.vrf_prefix:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.VrfPrefixes']['meta_info']


                    class DefaultTopology(object):
                        """
                        Default topology configuration
                        
                        .. attribute:: vrf_prefix_topologies
                        
                        	The set of all Static Topologies for this AFI
                        	**type**\:  :py:class:`VrfPrefixTopologies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies>`
                        
                        

                        """

                        _prefix = 'ip-static-cfg'
                        _revision = '2015-09-10'

                        def __init__(self):
                            self.parent = None
                            self.vrf_prefix_topologies = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies()
                            self.vrf_prefix_topologies.parent = self


                        class VrfPrefixTopologies(object):
                            """
                            The set of all Static Topologies for this AFI.
                            
                            .. attribute:: vrf_prefix_topology
                            
                            	A static route
                            	**type**\: list of  :py:class:`VrfPrefixTopology <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology>`
                            
                            

                            """

                            _prefix = 'ip-static-cfg'
                            _revision = '2015-09-10'

                            def __init__(self):
                                self.parent = None
                                self.vrf_prefix_topology = YList()
                                self.vrf_prefix_topology.parent = self
                                self.vrf_prefix_topology.name = 'vrf_prefix_topology'


                            class VrfPrefixTopology(object):
                                """
                                A static route
                                
                                .. attribute:: prefix  <key>
                                
                                	Destination prefix
                                	**type**\: one of the below types:
                                
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                
                                ----
                                .. attribute:: prefix_length  <key>
                                
                                	Destination prefix length
                                	**type**\:  int
                                
                                	**range:** 0..128
                                
                                .. attribute:: vrf_route
                                
                                	A connected or recursive  static route
                                	**type**\:  :py:class:`VrfRoute <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute>`
                                
                                

                                """

                                _prefix = 'ip-static-cfg'
                                _revision = '2015-09-10'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.vrf_route = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute()
                                    self.vrf_route.parent = self


                                class VrfRoute(object):
                                    """
                                    A connected or recursive  static route
                                    
                                    .. attribute:: segment_route_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`SegmentRouteNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable>`
                                    
                                    .. attribute:: vrf_next_hop_table
                                    
                                    	The set of nexthop information configured for this route
                                    	**type**\:  :py:class:`VrfNextHopTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable>`
                                    
                                    

                                    """

                                    _prefix = 'ip-static-cfg'
                                    _revision = '2015-09-10'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_route_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable()
                                        self.segment_route_next_hop_table.parent = self
                                        self.vrf_next_hop_table = RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable()
                                        self.vrf_next_hop_table.parent = self


                                    class SegmentRouteNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:segment-route-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.SegmentRouteNextHopTable']['meta_info']


                                    class VrfNextHopTable(object):
                                        """
                                        The set of nexthop information configured for
                                        this route
                                        
                                        .. attribute:: vrf_next_hop_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName>`
                                        
                                        .. attribute:: vrf_next_hop_interface_name_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopInterfaceNameNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress>`
                                        
                                        .. attribute:: vrf_next_hop_next_hop_address_explicit_path_name
                                        
                                        	A forwarding interface or Segement Routing mpls path name and/or the address of a nexthop router for this route (one of these must be specified)
                                        	**type**\: list of  :py:class:`VrfNextHopNextHopAddressExplicitPathName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_static_cfg.RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName>`
                                        
                                        

                                        """

                                        _prefix = 'ip-static-cfg'
                                        _revision = '2015-09-10'

                                        def __init__(self):
                                            self.parent = None
                                            self.vrf_next_hop_explicit_path_name = YList()
                                            self.vrf_next_hop_explicit_path_name.parent = self
                                            self.vrf_next_hop_explicit_path_name.name = 'vrf_next_hop_explicit_path_name'
                                            self.vrf_next_hop_interface_name = YList()
                                            self.vrf_next_hop_interface_name.parent = self
                                            self.vrf_next_hop_interface_name.name = 'vrf_next_hop_interface_name'
                                            self.vrf_next_hop_interface_name_next_hop_address = YList()
                                            self.vrf_next_hop_interface_name_next_hop_address.parent = self
                                            self.vrf_next_hop_interface_name_next_hop_address.name = 'vrf_next_hop_interface_name_next_hop_address'
                                            self.vrf_next_hop_next_hop_address = YList()
                                            self.vrf_next_hop_next_hop_address.parent = self
                                            self.vrf_next_hop_next_hop_address.name = 'vrf_next_hop_next_hop_address'
                                            self.vrf_next_hop_next_hop_address_explicit_path_name = YList()
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.parent = self
                                            self.vrf_next_hop_next_hop_address_explicit_path_name.name = 'vrf_next_hop_next_hop_address_explicit_path_name'


                                        class VrfNextHopInterfaceName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceName']['meta_info']


                                        class VrfNextHopInterfaceNameNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: interface_name  <key>
                                            
                                            	Forwarding interface
                                            	**type**\:  str
                                            
                                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.interface_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.interface_name is None:
                                                    raise YPYModelError('Key property interface_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-interface-name-next-hop-address[Cisco-IOS-XR-ip-static-cfg:interface-name = ' + str(self.interface_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.interface_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopInterfaceNameNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddress(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address[Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddress']['meta_info']


                                        class VrfNextHopNextHopAddressExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: next_hop_address  <key>
                                            
                                            	Next hop address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.next_hop_address = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')
                                                if self.next_hop_address is None:
                                                    raise YPYModelError('Key property next_hop_address is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-next-hop-address-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + '][Cisco-IOS-XR-ip-static-cfg:next-hop-address = ' + str(self.next_hop_address) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.next_hop_address is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopNextHopAddressExplicitPathName']['meta_info']


                                        class VrfNextHopExplicitPathName(object):
                                            """
                                            A forwarding interface or Segement Routing mpls
                                            path name and/or the address of a nexthop router
                                            for this route (one of these must be specified)
                                            
                                            .. attribute:: explicit_path_name  <key>
                                            
                                            	Segment Routing mpls path name
                                            	**type**\:  str
                                            
                                            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                                            
                                            .. attribute:: bfd_fast_detect
                                            
                                            	If set, bfd is enabled
                                            	**type**\:  bool
                                            
                                            .. attribute:: description
                                            
                                            	Short Description of Static Route
                                            	**type**\:  str
                                            
                                            .. attribute:: detect_multiplier
                                            
                                            	BFD Detect Multiplier
                                            	**type**\:  int
                                            
                                            	**range:** 1..10
                                            
                                            .. attribute:: load_metric
                                            
                                            	UCMP load metric
                                            	**type**\:  int
                                            
                                            	**range:** 1..16777214
                                            
                                            .. attribute:: metric
                                            
                                            	Distance metric for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..254
                                            
                                            .. attribute:: minimum_interval
                                            
                                            	BFD Hello interval in milliseconds
                                            	**type**\:  int
                                            
                                            	**range:** 3..30000
                                            
                                            .. attribute:: object_name
                                            
                                            	Name of the object to track
                                            	**type**\:  str
                                            
                                            	**range:** 0..32
                                            
                                            .. attribute:: permanent
                                            
                                            	If set, path is permanent
                                            	**type**\:  bool
                                            
                                            .. attribute:: tag
                                            
                                            	Tag for this path
                                            	**type**\:  int
                                            
                                            	**range:** 1..4294967295
                                            
                                            .. attribute:: tunnel_id
                                            
                                            	Tunnel ID for this path
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: vrf_lable
                                            
                                            	VRF LABEL
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'ip-static-cfg'
                                            _revision = '2015-09-10'

                                            def __init__(self):
                                                self.parent = None
                                                self.explicit_path_name = None
                                                self.bfd_fast_detect = None
                                                self.description = None
                                                self.detect_multiplier = None
                                                self.load_metric = None
                                                self.metric = None
                                                self.minimum_interval = None
                                                self.object_name = None
                                                self.permanent = None
                                                self.tag = None
                                                self.tunnel_id = None
                                                self.vrf_lable = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                                if self.explicit_path_name is None:
                                                    raise YPYModelError('Key property explicit_path_name is None')

                                                return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-explicit-path-name[Cisco-IOS-XR-ip-static-cfg:explicit-path-name = ' + str(self.explicit_path_name) + ']'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.explicit_path_name is not None:
                                                    return True

                                                if self.bfd_fast_detect is not None:
                                                    return True

                                                if self.description is not None:
                                                    return True

                                                if self.detect_multiplier is not None:
                                                    return True

                                                if self.load_metric is not None:
                                                    return True

                                                if self.metric is not None:
                                                    return True

                                                if self.minimum_interval is not None:
                                                    return True

                                                if self.object_name is not None:
                                                    return True

                                                if self.permanent is not None:
                                                    return True

                                                if self.tag is not None:
                                                    return True

                                                if self.tunnel_id is not None:
                                                    return True

                                                if self.vrf_lable is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable.VrfNextHopExplicitPathName']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-next-hop-table'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.vrf_next_hop_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name is not None:
                                                for child_ref in self.vrf_next_hop_interface_name:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_interface_name_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_interface_name_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.vrf_next_hop_next_hop_address_explicit_path_name is not None:
                                                for child_ref in self.vrf_next_hop_next_hop_address_explicit_path_name:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute.VrfNextHopTable']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-ip-static-cfg:vrf-route'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_route_next_hop_table is not None and self.segment_route_next_hop_table._has_data():
                                            return True

                                        if self.vrf_next_hop_table is not None and self.vrf_next_hop_table._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology.VrfRoute']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.prefix is None:
                                        raise YPYModelError('Key property prefix is None')
                                    if self.prefix_length is None:
                                        raise YPYModelError('Key property prefix_length is None')

                                    return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:default-topology/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topology[Cisco-IOS-XR-ip-static-cfg:prefix = ' + str(self.prefix) + '][Cisco-IOS-XR-ip-static-cfg:prefix-length = ' + str(self.prefix_length) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.vrf_route is not None and self.vrf_route._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies.VrfPrefixTopology']['meta_info']

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:default-topology/Cisco-IOS-XR-ip-static-cfg:vrf-prefix-topologies'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.vrf_prefix_topology is not None:
                                    for child_ref in self.vrf_prefix_topology:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology.VrfPrefixTopologies']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-multicast/Cisco-IOS-XR-ip-static-cfg:default-topology'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.vrf_prefix_topologies is not None and self.vrf_prefix_topologies._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                            return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast.DefaultTopology']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6/Cisco-IOS-XR-ip-static-cfg:vrf-multicast'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.default_topology is not None and self.default_topology._has_data():
                            return True

                        if self.topologies is not None and self.topologies._has_data():
                            return True

                        if self.vrf_prefixes is not None and self.vrf_prefixes._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                        return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6.VrfMulticast']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family/Cisco-IOS-XR-ip-static-cfg:vrfipv6'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return True

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.vrf_multicast is not None and self.vrf_multicast._has_data():
                        return True

                    if self.vrf_unicast is not None and self.vrf_unicast._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                    return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily.Vrfipv6']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf/Cisco-IOS-XR-ip-static-cfg:address-family'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return True

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.vrfipv4 is not None and self.vrfipv4._has_data():
                    return True

                if self.vrfipv6 is not None and self.vrfipv6._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
                return meta._meta_table['RouterStatic.DefaultVrf.AddressFamily']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:default-vrf'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return True

        def _has_data(self):
            if not self.is_config():
                return False
            if self.address_family is not None and self.address_family._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
            return meta._meta_table['RouterStatic.DefaultVrf']['meta_info']


    class MaximumRoutes(object):
        """
        The maximum number of static routes that can be
        configured.
        
        .. attribute:: ipv4_routes
        
        	The maximum number of static routes that can be configured for IPv4 AFI
        	**type**\:  int
        
        	**range:** 1..140000
        
        .. attribute:: ipv6_routes
        
        	The maximum number of static routes that can be configured for IPv6 AFI
        	**type**\:  int
        
        	**range:** 1..140000
        
        

        """

        _prefix = 'ip-static-cfg'
        _revision = '2015-09-10'

        def __init__(self):
            self.parent = None
            self.ipv4_routes = None
            self.ipv6_routes = None

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-ip-static-cfg:router-static/Cisco-IOS-XR-ip-static-cfg:maximum-routes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return True

        def _has_data(self):
            if not self.is_config():
                return False
            if self.ipv4_routes is not None:
                return True

            if self.ipv6_routes is not None:
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
            return meta._meta_table['RouterStatic.MaximumRoutes']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-ip-static-cfg:router-static'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return True

    def _has_data(self):
        if not self.is_config():
            return False
        if self.default_vrf is not None and self.default_vrf._has_data():
            return True

        if self.maximum_routes is not None and self.maximum_routes._has_data():
            return True

        if self.vrfs is not None and self.vrfs._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ip_static_cfg as meta
        return meta._meta_table['RouterStatic']['meta_info']


